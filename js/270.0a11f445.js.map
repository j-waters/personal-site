{"version":3,"file":"js/270.0a11f445.js","mappings":"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,UACA,UACA,UACA,SACA,aACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,SAEFn6B,WAAY,CACV7X,EAAG,CAAC,QACJiyC,IAAK,CAAC,MAAO,YACb1yC,MAAO,CACL,CAAC,OAAQ,YACT,CAAC,YAAY,IAEfq9B,GAAI,CAAC,CAAC,YAAa,mBACnBsV,IAAK,CAAC,YAAa,YACnBh0C,WAAY,CAAC,QACbi0C,IAAK,CAAC,QACNC,IAAK,CAAC,QACNC,EAAG,CAAC,QACJ,IAAK,CACH,OACA,SACA,gBACA,YACA,SACA,QACA,MACA,kBACA,aACA,YACA,iBACA,OACA,SACA,cACA,cACA,OACA,UACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,SACA,WACA,MACA,WACA,UACA,UACA,QACA,UACA,SACA,WACA,SACA,QACA,KACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,UACA,QACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,WACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,aAGJzrB,SAAU,CACRrnB,MAAO,CACLnmB,KAAM,WACNilC,UAAU,KC9IhB,IAAI,GAAM,GAAGhuC,eACT,GAAO,GAAGb,KAGV8iE,GAAa,CACf7tC,KAAM,CAAC9qB,SAAU,IACjB+1D,QAAS6C,GACT1/C,QAAS2/C,GACT3C,QAAS,CACPrjD,QAASimD,GACT96B,WAAY+6B,GACZ/4D,SAAU,IAEZ4J,KAAM,CAACvV,MAAO2kE,IACd,IAAK,CAAC19D,KAAMynC,GAAOnsC,SAAUmsC,KASxB,SAASk2B,GAASp6D,EAAMo0B,GAE7B,IAEI3iB,EAFAslD,EAAM,CAACn2D,KAAM,OAAQO,SAAU,IAqBnC,OAjBInB,GAAwB,kBAATA,GAAqBA,EAAKY,OAC3C6Q,EAAU,GAAIhc,OAAO4J,OAAO,GAAI65D,GAAe9kC,GAAU,IAAKp0B,EAAM,IAEhEyR,IACExS,MAAMC,QAAQuS,GACO,IAAnBA,EAAQ7a,OACVmgE,EAAMtlD,EAAQ,GAGdslD,EAAI51D,SAAWsQ,EAGjBslD,EAAMtlD,IAKLslD,EAWT,SAAS,GAAI3iC,EAAQp0B,EAAM9G,GACzB,IAKIuY,EAEAG,EAEAyoD,EAEA/iE,EAEAkH,EAbAoC,EAAOZ,GAAQA,EAAKY,KAGpB4vB,EAAc,CAAC5vB,KAAMZ,EAAKY,MAY9B,GAAI,GAAIhL,KAAKkkE,GAAYl5D,KACvBgR,EAAakoD,GAAWl5D,GAEE,oBAAfgR,IACTA,EAAaA,EAAWwiB,EAAQp0B,IAG9B4R,GAIF,IAAKpT,KAHLiT,GAAU,EACV4oD,EAAU5kE,OAAO4J,OAAO,GAAIuS,EAAYkoD,GAAW,MAEvCO,EACN,GAAIzkE,KAAKykE,EAAS77D,KACpBlH,EAAS+iE,EAAQ77D,GAAK41B,EAAQp0B,EAAKxB,GAAMwB,EAAM9G,IAGhC,IAAX5B,GACFma,EAAU,KAEV+e,EAAYhyB,GAAOwB,EAAKxB,SACJ3H,IAAXS,GAAmC,OAAXA,IACjCk5B,EAAYhyB,GAAOlH,IAO7B,OAAIma,EACK+e,EAGmB,YAArBA,EAAY5vB,MAChBwzB,EAAO+kC,MAAMp8D,SAASyzB,EAAYxc,SAEjC,KADAwc,EAAYrvB,SAWlB,SAAS,GAAIizB,EAAQjzB,EAAUnB,EAAM9G,GAEnC,IAGI1D,EAHA2vB,EAAU,GACVxuB,GAAS,EAIb,GAAIsI,MAAMC,QAAQiC,GAAW,CACT,YAAdnB,EAAKY,MACP1H,EAAMlC,KAAKgJ,EAAKgU,SAGlB,QAASrd,EAAQwK,EAASvK,OACxBpB,EAAQ,GAAI4+B,EAAQjzB,EAASxK,GAAQuC,GAEjC1D,IACE,WAAYA,EACd,GAAKmM,MAAMwjB,EAAS3vB,GAEpB2vB,EAAQnuB,KAAKxB,IAKD,YAAdwK,EAAKY,MACP1H,EAAM5C,MAIV,OAAO6uB,EAIT,SAAS40C,GAAc3lC,GACrB,OAAOA,EAAOkmC,cAAgB,CAACthE,KAAMuhE,IAAqB,KAI5D,SAASP,GAAc5lC,GACrB,OAAOA,EAAOomC,cAAgB,CAAChlE,MAAOilE,IAAsB,KAU9D,SAASP,GAAiB9lC,EAAQ+K,EAAYn/B,EAAM9G,GAClD,IAcI0Y,EAEApc,EAEAgJ,EAlBAxF,EAAOihE,GAAc7lC,EAAQp0B,EAAKgU,QAAShU,EAAM9G,GAEjDwhE,EAAOtmC,EAAOga,UAAY,GAC1BypB,EAAQ14B,GAAc,GACtBk7B,EAAU5kE,OAAO4J,OACnB,GACAs7D,GAAmBvmC,EAAOiL,WAAW,MACrCs7B,GACE3hE,GAAQ,GAAIpD,KAAKw+B,EAAOiL,WAAYrmC,GAAQo7B,EAAOiL,WAAWrmC,GAAQ,KAItE1B,EAAS,GAQb,IAAKkH,KAAOq5D,EACV,GAAI,GAAIjiE,KAAKiiE,EAAOr5D,GAAM,CACxB,GAAI,GAAI5I,KAAKykE,EAAS77D,GACpBoT,EAAayoD,EAAQ77D,OAChB,KAAI/B,GAAK+B,KAAQ,GAAI5I,KAAKykE,EAAS,SAGxC,SAFAzoD,EAAayoD,EAAQ,SAKvB7kE,EAAQqiE,EAAMr5D,GACdhJ,EAAQyJ,MAAMC,QAAQ1J,GAClBolE,GAAqBxmC,EAAQ5+B,EAAOgJ,EAAKoT,GACzCipD,GAAoBzmC,EAAQ5+B,EAAOgJ,EAAKoT,QAE9B/a,IAAVrB,GAAiC,OAAVA,IACzB8B,EAAOkH,GAAOhJ,GAKpB,GAAIwD,GAAQ,GAAIpD,KAAK8kE,EAAM1hE,GACzB,IAAKwF,KAAOk8D,EAAK1hE,GACV,GAAIpD,KAAK0B,EAAQkH,KACpBlH,EAAOkH,GAAOk8D,EAAK1hE,GAAMwF,IAK/B,OAAOlH,EAST,SAASijE,KACP,MAAO,OAST,SAASN,GAAc7lC,EAAQpgB,EAASlH,EAAG5T,GACzC,IAAIF,EAA0B,kBAAZgb,EAAuBA,EAAU,GAC/Crd,GAAS,EAEb,IAAKqC,GAAiB,MAATA,IAAiBo7B,EAAOolC,SAASz8D,SAAS/D,GACrD,OAAO,EAKT,GAAI,GAAIpD,KAAKw+B,EAAOklC,UAAWtgE,GAAO,CACpC,QAASrC,EAAQy9B,EAAOklC,UAAUtgE,GAAMpC,OACtC,GAAIsC,EAAM6D,SAASq3B,EAAOklC,UAAUtgE,GAAMrC,IACxC,OAAOqC,EAIX,OAAO,EAGT,OAAOA,EAST,SAASyhE,GAAmB3tD,EAAGtX,GAE7B,IAAI8B,EAA0B,kBAAV9B,EAAqBA,EAAQ,GAC7CmB,EAAQW,EAAOuB,QAAQ,UAC3B,OAAOlC,EAAQ,EAAIW,EAASA,EAAOwB,MAAM,EAAGnC,GAS9C,SAASwjE,GAAYrtD,EAAGtX,GACtB,MAAwB,kBAAVA,EAAqBA,EAAQ,GAQ7C,SAAS0uC,GAAMp3B,EAAGtX,GAChB,OAAOA,EAYT,SAASolE,GAAqBxmC,EAAQj+B,EAAQ2G,EAAM8U,GAClD,IAIIpc,EAJAmB,GAAS,EAETW,EAAS,GAIb,QAASX,EAAQR,EAAOS,OACtBpB,EAAQqlE,GAAoBzmC,EAAQj+B,EAAOQ,GAAQmG,EAAM8U,QAE3C/a,IAAVrB,GAAiC,OAAVA,GAEzB8B,EAAON,KAAKxB,GAIhB,OAAO8B,EAYT,SAASujE,GAAoBzmC,EAAQ5+B,EAAOsH,EAAM8U,GAChD,IACoB,mBAAVpc,GACW,kBAAVA,GACU,kBAAVA,IACTslE,GAAa1mC,EAAQ5+B,EAAOsH,KACL,IAAtB8U,EAAWhb,QAAgBgb,EAAW7U,SAASvH,IAEhD,OAAO4+B,EAAOilC,QAAQt8D,SAASD,GAAQs3B,EAAOglC,cAAgB5jE,EAAQA,EAY1E,SAASslE,GAAa1mC,EAAQ5+B,EAAOsH,GACnC,IAAIrD,EAAMsG,OAAOvK,GACbu5B,EAAQt1B,EAAIZ,QAAQ,KACpBkiE,EAAethE,EAAIZ,QAAQ,KAC3BmiE,EAAavhE,EAAIZ,QAAQ,KACzBoiE,EAAQxhE,EAAIZ,QAAQ,KACpB0gE,EAAY,GAAI3jE,KAAKw+B,EAAOmlC,UAAWz8D,GACvCs3B,EAAOmlC,UAAUz8D,GAAMif,SACvB,GACAplB,GAAS,EAEb,GACuB,IAArB4iE,EAAU3iE,QACVm4B,EAAQ,GAEPksC,GAAS,GAAKlsC,EAAQksC,GACtBF,GAAgB,GAAKhsC,EAAQgsC,GAC7BC,GAAc,GAAKjsC,EAAQisC,EAE5B,OAAO,EAGT,QAASrkE,EAAQ4iE,EAAU3iE,OACzB,GACEm4B,IAAUwqC,EAAU5iE,GAAOC,QAC3B6C,EAAIX,MAAM,EAAGygE,EAAU5iE,GAAOC,UAAY2iE,EAAU5iE,GAEpD,OAAO,EAIX,OAAO,EAST,SAASgkE,GAAmBxkE,GAE1B,IAGIX,EAHA8B,EAAS,GACTX,GAAS,EAIb,QAASA,EAAQR,EAAOS,OACtBpB,EAAQW,EAAOQ,GAEXsI,MAAMC,QAAQ1J,GAChB8B,EAAO9B,EAAM,IAAMA,EAAMsD,MAAM,GAE/BxB,EAAO9B,GAAS,GAIpB,OAAO8B,EAST,SAASmF,GAAKK,GACZ,OAAOA,EAAKlG,OAAS,GAAwC,SAAnCkG,EAAKhE,MAAM,EAAG,GAAG4Y,cC/atC,IAAIwpD,GAEP,SAOQt6D,EAAMi3D,EAAOriE,GAErB,IAAIwK,EAAO,CAACY,KAAMb,OAAOa,IAiBzB,YAda/J,IAAVrB,GAAiC,OAAVA,GACN,kBAAVqiE,IAAsB54D,MAAMC,QAAQ24D,GAI5CpiE,OAAO4J,OAAOW,EAAM63D,GAFpBriE,EAAQqiE,EAKN54D,MAAMC,QAAQ1J,GAChBwK,EAAKmB,SAAW3L,OACGqB,IAAVrB,GAAiC,OAAVA,IAChCwK,EAAKxK,MAAQuK,OAAOvK,IAGfwK,GC7BAm7D,GAAa,GAAM,SACnBC,GAAW,GAAM,OAiB5B,SAAS,GAAMx6D,GACb,OAAO5I,EAQP,SAASA,EAAMgI,GAGb,IAAIhI,EAASgI,GAAQA,EAAKjI,UAAYiI,EAAKjI,SAAS6I,IAAU,GAE9D,MAAO,CACL3I,KAAMD,EAAMC,MAAQ,KACpBC,OAAQF,EAAME,QAAU,KACxB4O,OAAQ9O,EAAM8O,QAAU,EAAI9O,EAAM8O,OAAS,OC7B1C,SAASu0D,GAAUr7D,GACxB,OACGA,IACAA,EAAKjI,WACLiI,EAAKjI,SAASK,QACd4H,EAAKjI,SAASK,MAAMH,OACpB+H,EAAKjI,SAASK,MAAMF,SACpB8H,EAAKjI,SAASM,MACd2H,EAAKjI,SAASM,IAAIJ,OAClB+H,EAAKjI,SAASM,IAAIH,OCChB,MAAM,GAQX,SASYqI,EAAMiD,EAAM2lB,EAASC,GAa7B,SAASU,EAAS9pB,EAAMwpB,GACtB,IAAI/F,EAAS+F,EAAQA,EAAQ5yB,OAAS,GACtC,OAAOuyB,EACLnpB,EACAyjB,EAASA,EAAOtiB,SAAStI,QAAQmH,GAAQ,KACzCyjB,GAjBgB,oBAATjgB,GAA0C,oBAAZ2lB,IACvCC,EAAUD,EACVA,EAAU3lB,EACVA,EAAO,MAGT,GAAajD,EAAMiD,EAAMsmB,EAAUV,IC9CnC,GAAM,GAAGvxB,eAMR,SAASsmC,GAAYn+B,GAE1B,MAAMs7D,EAAQ7lE,OAAOiY,OAAO,MAE5B,IAAK1N,IAASA,EAAKY,KACjB,MAAM,IAAIjJ,MAAM,wCAKlB,OAFA,GAAMqI,EAAM,aAAcu7D,GAEnBC,EAGP,SAASD,EAAa3pD,GACpB,MAAM2e,EAAKkrC,GAAM7pD,EAAWI,YACxBue,IAAO,GAAI36B,KAAK0lE,EAAO/qC,KACzB+qC,EAAM/qC,GAAM3e,GAUhB,SAAS4pD,EAAcxpD,GACrB,MAAMue,EAAKkrC,GAAMzpD,GACjB,OAAOue,GAAM,GAAI36B,KAAK0lE,EAAO/qC,GAAM+qC,EAAM/qC,GAAM,MAQnD,SAASkrC,GAAMjmE,GACb,OAAOuK,OAAOvK,GAAS,IAAImc,cC1C7B,MAAM,GAAM,GAAG9Z,eAOf,SAAS,GAAQ6jE,EAAG17D,GAClB,MAAMvD,EAAOuD,EAAKvD,MAAQ,GAE1B,MACE,UAAWuD,KAET,GAAIpK,KAAK6G,EAAM,UACf,GAAI7G,KAAK6G,EAAM,gBACf,GAAI7G,KAAK6G,EAAM,cAGVi/D,EAAEC,QAAQ37D,EAAMk7D,GAAE,OAAQl7D,EAAKxK,QAGjCkmE,EAAE17D,EAAM,MAAO,GAAI07D,EAAG17D,IAOxB,SAAS,GAAI07D,EAAG17D,EAAMyjB,GAC3B,MAAM7iB,EAAOZ,GAAQA,EAAKY,KAE1B,IAAIlK,EAGJ,IAAKkK,EACH,MAAM,IAAIjJ,MAAM,uBAAyBqI,EAAO,KAWlD,OAPEtJ,EADE,GAAId,KAAK8lE,EAAEn3C,SAAU3jB,GAClB86D,EAAEn3C,SAAS3jB,GACP86D,EAAEE,aAAeF,EAAEE,YAAY7+D,SAAS6D,GAC5Ci7D,GAEAH,EAAEI,gBAGa,oBAAPplE,EAAoBA,EAAK,IAASglE,EAAG17D,EAAMyjB,GAO5D,SAASo4C,GAAWH,EAAG17D,GAErB,MAAO,aAAcA,EAAO,IAAIA,EAAMmB,SAAU,GAAIu6D,EAAG17D,IAASA,EAO3D,SAAS,GAAI07D,EAAGj4C,GAErB,MAAMttB,EAAS,GAEf,GAAI,aAAcstB,EAAQ,CACxB,MAAMkR,EAAQlR,EAAOtiB,SACrB,IAAIxK,GAAS,EAEb,QAASA,EAAQg+B,EAAM/9B,OAAQ,CAC7B,MAAMU,EAAS,GAAIokE,EAAG/mC,EAAMh+B,GAAQ8sB,GAEpC,GAAInsB,EAAQ,CACV,GAAIX,GAAmC,UAA1Bg+B,EAAMh+B,EAAQ,GAAGiK,OACvB3B,MAAMC,QAAQ5H,IAA2B,SAAhBA,EAAOsJ,OACnCtJ,EAAO9B,MAAQ8B,EAAO9B,MAAMic,QAAQ,OAAQ,MAGzCxS,MAAMC,QAAQ5H,IAA2B,YAAhBA,EAAOsJ,MAAoB,CACvD,MAAMwc,EAAO9lB,EAAO6J,SAAS,GAEzBic,GAAsB,SAAdA,EAAKxc,OACfwc,EAAK5nB,MAAQ4nB,EAAK5nB,MAAMic,QAAQ,OAAQ,KAK1CxS,MAAMC,QAAQ5H,GAChBnB,EAAOa,QAAQM,GAEfnB,EAAOa,KAAKM,KAMpB,OAAOnB,EC1GT,MAAM4lE,GAAsB,CAAC,IAAK,OAAQ,IAAK,MAAO,IAAK,KAAM,IAAK,MAY/D,SAASx0C,GAAO/xB,GACrB,OAAOA,EAAMic,QAAQ,UAAWA,GAMhC,SAASA,EAAQjc,GAEf,MAAO,IAAMumE,GAAoBvmE,GAAS,KCCvC,SAASwmE,GAAYviE,EAAKuC,GAC/B,MAAMxG,EAAQ+xB,GAAO00C,GAAaxiE,GAAO,KAEzC,IAAKuC,EACH,OAAOxG,EAGT,MAAMu5B,EAAQv5B,EAAMqD,QAAQ,KACtBkiE,EAAevlE,EAAMqD,QAAQ,KAC7BmiE,EAAaxlE,EAAMqD,QAAQ,KAC3BoiE,EAAQzlE,EAAMqD,QAAQ,KAE5B,OAEEk2B,EAAQ,GACPksC,GAAS,GAAKlsC,EAAQksC,GACtBF,GAAgB,GAAKhsC,EAAQgsC,GAC7BC,GAAc,GAAKjsC,EAAQisC,GAC5Bh/D,EAASwH,KAAKhO,EAAMsD,MAAM,EAAGi2B,IAEtBv5B,EAGF,GAYT,SAASymE,GAAazmE,GAEpB,MAAM8B,EAAS,GACf,IAAIX,GAAS,EACTyB,EAAQ,EACR8jE,EAAO,EAEX,QAASvlE,EAAQnB,EAAMoB,OAAQ,CAC7B,MAAM+D,EAAOnF,EAAM4E,WAAWzD,GAG9B,IAAI8a,EAAU,GAEd,GACW,KAAT9W,GACAkI,GAAkBrN,EAAM4E,WAAWzD,EAAQ,KAC3CkM,GAAkBrN,EAAM4E,WAAWzD,EAAQ,IAE3CulE,EAAO,OAEJ,GAAIvhE,EAAO,IACT,oBAAoB6I,KAAKzD,OAAO0D,aAAa9I,MAChD8W,EAAU1R,OAAO0D,aAAa9I,SAG7B,GAAIA,EAAO,OAASA,EAAO,MAAO,CACrC,MAAMnE,EAAOhB,EAAM4E,WAAWzD,EAAQ,GAElCgE,EAAO,OAASnE,EAAO,OAASA,EAAO,OACzCib,EAAU1R,OAAO0D,aAAa9I,EAAMnE,GACpC0lE,EAAO,GAGPzqD,EAAU,SAIZA,EAAU1R,OAAO0D,aAAa9I,GAG5B8W,IACFna,EAAON,KAAKxB,EAAMsD,MAAMV,EAAOzB,GAAQwlE,mBAAmB1qD,IAC1DrZ,EAAQzB,EAAQulE,EAAO,EACvBzqD,EAAU,IAGRyqD,IACFvlE,GAASulE,EACTA,EAAO,GAIX,OAAO5kE,EAAOyC,KAAK,IAAMvE,EAAMsD,MAAMV,GC/FhC,SAAS,GAAKu8B,EAAOynC,GAE1B,MAAM9kE,EAAS,GACf,IAAIX,GAAS,EAETylE,GACF9kE,EAAON,KAAKkkE,GAAE,OAAQ,OAGxB,QAASvkE,EAAQg+B,EAAM/9B,OACjBD,GAAOW,EAAON,KAAKkkE,GAAE,OAAQ,OACjC5jE,EAAON,KAAK29B,EAAMh+B,IAOpB,OAJIylE,GAASznC,EAAM/9B,OAAS,GAC1BU,EAAON,KAAKkkE,GAAE,OAAQ,OAGjB5jE,EChBF,SAAS+kE,GAAOX,GACrB,IAAI/kE,GAAS,EAEb,MAAM2lE,EAAY,GAElB,QAAS3lE,EAAQ+kE,EAAEa,cAAc3lE,OAAQ,CACvC,MAAM2W,EAAMmuD,EAAEc,aAAad,EAAEa,cAAc5lE,GAAOgb,eAElD,IAAKpE,EACH,SAGF,MAAMnJ,EAAU,GAAIs3D,EAAGnuD,GACjBgjB,EAAKxwB,OAAOwN,EAAIyE,YAChByqD,EAAST,GAAYzrC,EAAG7e,eAC9B,IAAIgrD,EAAiB,EAErB,MAAMC,EAAiB,GAEvB,QAASD,GAAkBhB,EAAEkB,eAAersC,GAAK,CAE/C,MAAMssC,EAAgB,CACpBj8D,KAAM,UACNoT,QAAS,IACTmrB,WAAY,CACVtjC,KACE,IACA6/D,EAAEtC,cACF,SACAqD,GACCC,EAAiB,EAAI,IAAMA,EAAiB,IAC/CI,qBAAqB,EACrB/3B,UAAW,CAAC,yBACZjD,UAAW45B,EAAEqB,mBAEf57D,SAAU,CAAC,CAACP,KAAM,OAAQpL,MAAO,OAG/BknE,EAAiB,GACnBG,EAAc17D,SAASnK,KAAK,CAC1B4J,KAAM,UACNoT,QAAS,MACT7S,SAAU,CAAC,CAACP,KAAM,OAAQpL,MAAOuK,OAAO28D,OAIxCC,EAAe/lE,OAAS,GAC1B+lE,EAAe3lE,KAAK,CAAC4J,KAAM,OAAQpL,MAAO,MAG5CmnE,EAAe3lE,KAAK6lE,GAGtB,MAAM7yD,EAAO5F,EAAQA,EAAQxN,OAAS,GAEtC,GAAIoT,GAAsB,YAAdA,EAAKpJ,MAAuC,MAAjBoJ,EAAKgK,QAAiB,CAC3D,MAAMgpD,EAAWhzD,EAAK7I,SAAS6I,EAAK7I,SAASvK,OAAS,GAClDomE,GAA8B,SAAlBA,EAASp8D,KACvBo8D,EAASxnE,OAAS,IAElBwU,EAAK7I,SAASnK,KAAK,CAAC4J,KAAM,OAAQpL,MAAO,MAG3CwU,EAAK7I,SAASnK,QAAQ2lE,QAEtBv4D,EAAQpN,QAAQ2lE,GAIlB,MAAM19C,EAAW,CACfre,KAAM,UACNoT,QAAS,KACTmrB,WAAY,CAAC5O,GAAImrC,EAAEtC,cAAgB,MAAQqD,GAC3Ct7D,SAAU,GAAKiD,GAAS,IAGtBmJ,EAAIxV,WACNknB,EAASlnB,SAAWwV,EAAIxV,UAG1BukE,EAAUtlE,KAAKioB,GAGjB,OAAyB,IAArBq9C,EAAU1lE,OACL,KAGF,CACLgK,KAAM,UACNoT,QAAS,UACTmrB,WAAY,CAAC89B,eAAe,EAAMl4B,UAAW,CAAC,cAC9C5jC,SAAU,CACR,CACEP,KAAM,UACNoT,QAAS,KACTmrB,WAAY,CAAC5O,GAAI,iBAAkBwU,UAAW,CAAC,YAC/C5jC,SAAU,CAAC+5D,GAAE,OAAQQ,EAAEwB,iBAEzB,CAACt8D,KAAM,OAAQpL,MAAO,MACtB,CACEoL,KAAM,UACNoT,QAAS,KACTmrB,WAAY,GACZh+B,SAAU,GAAKm7D,GAAW,IAE5B,CAAC17D,KAAM,OAAQpL,MAAO,QC7GrB,SAAS,GAAWkmE,EAAG17D,GAC5B,OAAO07D,EAAE17D,EAAM,aAAc,GAAK,GAAI07D,EAAG17D,IAAO,ICC3C,SAAS,GAAU07D,EAAG17D,GAC3B,MAAO,CAAC07D,EAAE17D,EAAM,MAAOk7D,GAAE,OAAQ,OCF5B,SAAS,GAAKQ,EAAG17D,GACtB,MAAMxK,EAAQwK,EAAKxK,MAAQwK,EAAKxK,MAAQ,KAAO,GAGzCouB,EAAO5jB,EAAK4jB,MAAQ5jB,EAAK4jB,KAAKvH,MAAM,uBAEpCw7C,EAAQ,GAEVj0C,IACFi0C,EAAM9yB,UAAY,CAAC,YAAcnhB,IAGnC,MAAMjpB,EAAO+gE,EAAE17D,EAAM,OAAQ63D,EAAO,CAACqD,GAAE,OAAQ1lE,KAM/C,OAJIwK,EAAKkW,OACPvb,EAAK8B,KAAO,CAACyZ,KAAMlW,EAAKkW,OAGnBwlD,EAAE17D,EAAKjI,SAAU,MAAO,CAAC4C,ICpB3B,SAASs2B,GAAcyqC,EAAG17D,GAC/B,OAAO07D,EAAE17D,EAAM,MAAO,GAAI07D,EAAG17D,ICDxB,SAAS,GAAS07D,EAAG17D,GAC1B,OAAO07D,EAAE17D,EAAM,KAAM,GAAI07D,EAAG17D,ICAvB,SAASo3B,GAAkBskC,EAAG17D,GACnC,MAAMuwB,EAAKxwB,OAAOC,EAAKgS,YACjByqD,EAAST,GAAYzrC,EAAG7e,eACxB/a,EAAQ+kE,EAAEa,cAAc1jE,QAAQ03B,GAEtC,IAAI4sC,GAEW,IAAXxmE,GACF+kE,EAAEa,cAAcvlE,KAAKu5B,GACrBmrC,EAAEkB,eAAersC,GAAM,EACvB4sC,EAAUzB,EAAEa,cAAc3lE,SAE1B8kE,EAAEkB,eAAersC,KACjB4sC,EAAUxmE,EAAQ,GAGpB,MAAMymE,EAAe1B,EAAEkB,eAAersC,GAEtC,OAAOmrC,EAAE17D,EAAM,MAAO,CACpB07D,EACE17D,EAAKjI,SACL,IACA,CACE8D,KAAM,IAAM6/D,EAAEtC,cAAgB,MAAQqD,EACtClsC,GACEmrC,EAAEtC,cACF,SACAqD,GACCW,EAAe,EAAI,IAAMA,EAAe,IAC3CC,iBAAiB,EACjBn8B,gBAAiB,kBAEnB,CAACg6B,GAAE,OAAQn7D,OAAOo9D,QC1BjB,SAASG,GAAS5B,EAAG17D,GAC1B,MAAMw8D,EAAed,EAAEc,aACvB,IAAIe,EAAK,EAET,MAAOA,KAAMf,EAAce,IAE3B,MAAMvrD,EAAajS,OAAOw9D,GAS1B,OAPAf,EAAaxqD,GAAc,CACzBpR,KAAM,qBACNoR,WAAAA,EACA7Q,SAAU,CAAC,CAACP,KAAM,YAAaO,SAAUnB,EAAKmB,WAC9CpJ,SAAUiI,EAAKjI,UAGVq/B,GAAkBskC,EAAG,CAC1B96D,KAAM,oBACNoR,WAAAA,EACAja,SAAUiI,EAAKjI,WCzBZ,SAAS,GAAQ2jE,EAAG17D,GACzB,OAAO07D,EAAE17D,EAAM,IAAMA,EAAK6jB,MAAO,GAAI63C,EAAG17D,ICCnC,SAAS,GAAK07D,EAAG17D,GACtB,OAAO07D,EAAExF,UAAYwF,EAAEC,QAAQ37D,EAAMk7D,GAAE,MAAOl7D,EAAKxK,QAAU,K,cCGxD,SAASgoE,GAAO9B,EAAG17D,GACxB,MAAMy9D,EAAUz9D,EAAK8jB,cACrB,IAAI8D,EAAS,IAQb,GANgB,cAAZ61C,EACF71C,GAAU,KACW,SAAZ61C,IACT71C,GAAU,KAAO5nB,EAAKgR,OAAShR,EAAKgS,YAAc,KAGlC,mBAAdhS,EAAKY,KACP,OAAOs6D,GAAE,OAAQ,KAAOl7D,EAAKkB,IAAM0mB,GAGrC,MAAM81C,EAAW,GAAIhC,EAAG17D,GAClBod,EAAOsgD,EAAS,GAElBtgD,GAAsB,SAAdA,EAAKxc,KACfwc,EAAK5nB,MAAQ,IAAM4nB,EAAK5nB,MAExBkoE,EAASh8D,QAAQw5D,GAAE,OAAQ,MAG7B,MAAMlxD,EAAO0zD,EAASA,EAAS9mE,OAAS,GAQxC,OANIoT,GAAsB,SAAdA,EAAKpJ,KACfoJ,EAAKxU,OAASoyB,EAEd81C,EAAS1mE,KAAKkkE,GAAE,OAAQtzC,IAGnB81C,ECnCF,SAAS,GAAehC,EAAG17D,GAChC,MAAMuN,EAAMmuD,EAAE9pD,WAAW5R,EAAKgS,YAE9B,IAAKzE,EACH,OAAOiwD,GAAO9B,EAAG17D,GAInB,MAAM63D,EAAQ,CAAC5oB,IAAK,GAAU1hC,EAAI9T,KAAO,IAAKyH,IAAKlB,EAAKkB,KAMxD,OAJkB,OAAdqM,EAAI8D,YAAgCxa,IAAd0W,EAAI8D,QAC5BwmD,EAAMxmD,MAAQ9D,EAAI8D,OAGbqqD,EAAE17D,EAAM,MAAO63D,GCfjB,SAAS,GAAM6D,EAAG17D,GAEvB,MAAM63D,EAAQ,CAAC5oB,IAAK,GAAUjvC,EAAKvG,KAAMyH,IAAKlB,EAAKkB,KAMnD,OAJmB,OAAflB,EAAKqR,YAAiCxa,IAAfmJ,EAAKqR,QAC9BwmD,EAAMxmD,MAAQrR,EAAKqR,OAGdqqD,EAAE17D,EAAM,MAAO63D,GCTjB,SAAS,GAAW6D,EAAG17D,GAC5B,OAAO07D,EAAE17D,EAAM,OAAQ,CAACk7D,GAAE,OAAQl7D,EAAKxK,MAAMic,QAAQ,YAAa,QCE7D,SAAS,GAAciqD,EAAG17D,GAC/B,MAAMuN,EAAMmuD,EAAE9pD,WAAW5R,EAAKgS,YAE9B,IAAKzE,EACH,OAAOiwD,GAAO9B,EAAG17D,GAInB,MAAM63D,EAAQ,CAACh8D,KAAM,GAAU0R,EAAI9T,KAAO,KAM1C,OAJkB,OAAd8T,EAAI8D,YAAgCxa,IAAd0W,EAAI8D,QAC5BwmD,EAAMxmD,MAAQ9D,EAAI8D,OAGbqqD,EAAE17D,EAAM,IAAK63D,EAAO,GAAI6D,EAAG17D,ICf7B,SAAS,GAAK07D,EAAG17D,GAEtB,MAAM63D,EAAQ,CAACh8D,KAAM,GAAUmE,EAAKvG,MAMpC,OAJmB,OAAfuG,EAAKqR,YAAiCxa,IAAfmJ,EAAKqR,QAC9BwmD,EAAMxmD,MAAQrR,EAAKqR,OAGdqqD,EAAE17D,EAAM,IAAK63D,EAAO,GAAI6D,EAAG17D,ICJ7B,SAAS,GAAS07D,EAAG17D,EAAMyjB,GAChC,MAAMnsB,EAAS,GAAIokE,EAAG17D,GAChBo8D,EAAQ34C,EAASk6C,GAAUl6C,GAAUm6C,GAAc59D,GAEnD63D,EAAQ,GAER1gE,EAAU,GAEhB,GAA4B,mBAAjB6I,EAAKkkB,QAAuB,CAErC,IAAIjR,EAGF3b,EAAO,IACY,YAAnBA,EAAO,GAAGsJ,MACY,MAAtBtJ,EAAO,GAAG0c,QAEVf,EAAY3b,EAAO,IAEnB2b,EAAYyoD,EAAE,KAAM,IAAK,IACzBpkE,EAAOoK,QAAQuR,IAGbA,EAAU9R,SAASvK,OAAS,GAC9Bqc,EAAU9R,SAASO,QAAQw5D,GAAE,OAAQ,MAGvCjoD,EAAU9R,SAASO,QACjBg6D,EAAE,KAAM,QAAS,CACf96D,KAAM,WACNsjB,QAASlkB,EAAKkkB,QACd2hB,UAAU,KAMdgyB,EAAM9yB,UAAY,CAAC,kBAGrB,IAAIpuC,GAAS,EAEb,QAASA,EAAQW,EAAOV,OAAQ,CAC9B,MAAMwuB,EAAQ9tB,EAAOX,IAInBylE,GACU,IAAVzlE,GACe,YAAfyuB,EAAMxkB,MACY,MAAlBwkB,EAAMpR,UAEN7c,EAAQH,KAAKkkE,GAAE,OAAQ,OAGN,YAAf91C,EAAMxkB,MAAwC,MAAlBwkB,EAAMpR,SAAoBooD,EAGxDjlE,EAAQH,KAAKouB,GAFbjuB,EAAQH,QAAQouB,EAAMjkB,UAM1B,MAAM6I,EAAO1S,EAAOA,EAAOV,OAAS,GAOpC,OAJIoT,IAASoyD,GAAW,YAAapyD,GAA0B,MAAjBA,EAAKgK,SACjD7c,EAAQH,KAAKkkE,GAAE,OAAQ,OAGlBQ,EAAE17D,EAAM,KAAM63D,EAAO1gE,GAO9B,SAASwmE,GAAU39D,GACjB,IAAIo8D,EAAQp8D,EAAKikB,OACjB,MAAM9iB,EAAWnB,EAAKmB,SACtB,IAAIxK,GAAS,EAEb,OAAQylE,KAAWzlE,EAAQwK,EAASvK,OAClCwlE,EAAQwB,GAAcz8D,EAASxK,IAGjC,OAAOoK,QAAQq7D,GAOjB,SAASwB,GAAc59D,GACrB,MAAMikB,EAASjkB,EAAKikB,OAEpB,YAAkBptB,IAAXotB,GAAmC,OAAXA,EAC3BjkB,EAAKmB,SAASvK,OAAS,EACvBqtB,ECnGC,SAAS,GAAKy3C,EAAG17D,GAEtB,MAAM63D,EAAQ,GACR7+D,EAAOgH,EAAKgkB,QAAU,KAAO,KAC7BziB,EAAQ,GAAIm6D,EAAG17D,GACrB,IAAIrJ,GAAS,EAEa,kBAAfqJ,EAAK5H,OAAqC,IAAf4H,EAAK5H,QACzCy/D,EAAMz/D,MAAQ4H,EAAK5H,OAIrB,QAASzB,EAAQ4K,EAAM3K,OAAQ,CAC7B,MAAM6O,EAAOlE,EAAM5K,GAEnB,GACgB,YAAd8O,EAAK7E,MACY,OAAjB6E,EAAKuO,SACLvO,EAAK05B,YACLlgC,MAAMC,QAAQuG,EAAK05B,WAAW4F,YAC9Bt/B,EAAK05B,WAAW4F,UAAUhoC,SAAS,kBACnC,CACA86D,EAAM9yB,UAAY,CAAC,sBACnB,OAIJ,OAAO22B,EAAE17D,EAAMhH,EAAM6+D,EAAO,GAAKt2D,GAAO,IC/BnC,SAAS,GAAUm6D,EAAG17D,GAC3B,OAAO07D,EAAE17D,EAAM,IAAK,GAAI07D,EAAG17D,ICCtB,SAAS,GAAK07D,EAAG17D,GAEtB,OAAO07D,EAAEC,QAAQ37D,EAAMk7D,GAAE,OAAQ,GAAK,GAAIQ,EAAG17D,MCJxC,SAAS,GAAO07D,EAAG17D,GACxB,OAAO07D,EAAE17D,EAAM,SAAU,GAAI07D,EAAG17D,ICI3B,SAAS+3B,GAAM2jC,EAAG17D,GACvB,MAAMsuC,EAAOtuC,EAAKmB,SAClB,IAAIxK,GAAS,EACb,MAAMk7B,EAAQ7xB,EAAK6xB,OAAS,GAEtBv6B,EAAS,GAEf,QAASX,EAAQ23C,EAAK13C,OAAQ,CAC5B,MAAM4hC,EAAM8V,EAAK33C,GAAOwK,SAClBnI,EAAiB,IAAVrC,EAAc,KAAO,KAE5BknE,EAAM,GACZ,IAAIC,GAAa,EACjB,MAAMlnE,EAASoJ,EAAK6xB,MAAQA,EAAMj7B,OAAS4hC,EAAI5hC,OAE/C,QAASknE,EAAYlnE,EAAQ,CAC3B,MAAMg7B,EAAO4G,EAAIslC,GACjBD,EAAI7mE,KACF0kE,EAAE9pC,EAAM54B,EAAM,CAAC64B,MAAOA,EAAMisC,IAAalsC,EAAO,GAAI8pC,EAAG9pC,GAAQ,KAInEt6B,EAAOX,GAAS+kE,EAAEptB,EAAK33C,GAAQ,KAAM,GAAKknE,GAAK,IAGjD,OAAOnC,EACL17D,EACA,QACA,GACE,CAAC07D,EAAEpkE,EAAO,GAAGS,SAAU,QAAS,GAAK,CAACT,EAAO,KAAK,KAAQykB,OACxDzkB,EAAO,GACHokE,EACE,CACEtjE,MAAO+iE,GAAW7jE,EAAO,IACzBe,IAAK+iE,GAAS9jE,EAAOA,EAAOV,OAAS,KAEvC,QACA,GAAKU,EAAOwB,MAAM,IAAI,IAExB,KAEN,IC9CC,SAAS,GAAK4iE,EAAG17D,GACtB,OAAO07D,EAAEC,QACP37D,EACAk7D,GAAE,OAAQn7D,OAAOC,EAAKxK,OAAOic,QAAQ,0BAA2B,QCH7D,SAAS,GAAciqD,EAAG17D,GAC/B,OAAO07D,EAAE17D,EAAM,MCWV,MAAM,GAAW,CACtB0lB,WAAU,GACV8G,MAAO,GACP7xB,KAAI,GACJg9B,OAAQ1G,GACRvS,SAAQ,GACR0Y,kBAAiB,GACjBkmC,SAAQ,GACRtqD,QAAO,GACP6L,KAAI,GACJ0L,eAAc,GACdvL,MAAK,GACLyL,WAAU,GACVK,cAAa,GACbjN,KAAI,GACJoB,SAAQ,GACR5d,KAAI,GACJ4R,UAAS,GACTgZ,KAAI,GACJpM,OAAM,GACNkY,MAAK,GACLhtB,KAAI,GACJwD,cAAa,GACbiuB,KAAMlI,GACNiI,KAAMjI,GACN1iB,WAAY0iB,GACZgD,mBAAoBhD,IAItB,SAASA,KACP,OAAO,KC+CT,MAAM,GAAM,GAAGz8B,eAQf,SAAS0xB,GAAQhpB,EAAM/D,GACrB,MAAMuC,EAAWvC,GAAW,GACtB05D,EAAYn3D,EAASg6D,qBAAsB,EAE3CyD,EAAe,GA+BrB,OA7BAd,EAAExF,UAAYA,EACdwF,EAAEtC,mBAC2BviE,IAA3BkI,EAASq6D,eAA0D,OAA3Br6D,EAASq6D,cAC7C,gBACAr6D,EAASq6D,cACfsC,EAAEwB,cAAgBn+D,EAASm+D,eAAiB,YAC5CxB,EAAEqB,kBAAoBh+D,EAASg+D,mBAAqB,kBACpDrB,EAAE9pD,WAAausB,GAAY59B,GAC3Bm7D,EAAEc,aAAeA,EAEjBd,EAAEa,cAAgB,GAElBb,EAAEkB,eAAiB,GACnBlB,EAAEC,QAAUA,EACZD,EAAEn3C,SAAW,IAAI,MAAaxlB,EAASwlB,UACvCm3C,EAAEI,eAAiB/8D,EAAS+8D,eAC5BJ,EAAEE,YAAc78D,EAAS68D,YAEzBlyC,GAAMnpB,EAAM,sBAAuBqR,IACjC,MAAM2e,EAAKxwB,OAAO6R,EAAWI,YAAYL,cAIpC,GAAI/b,KAAK4mE,EAAcjsC,KAC1BisC,EAAajsC,GAAM3e,MAKhB8pD,EAQP,SAASC,EAAQx5D,EAAMC,GAErB,GAAID,GAAQ,SAAUA,GAAQA,EAAK1F,KAAM,CAEvC,MAAMA,EAAO0F,EAAK1F,KAEdA,EAAKshE,QACY,YAAf37D,EAAMxB,OACRwB,EAAQ,CACNxB,KAAM,UACNoT,QAAS,GACTmrB,WAAY,GACZh+B,SAAU,KAIdiB,EAAM4R,QAAUvX,EAAKshE,OAGJ,YAAf37D,EAAMxB,MAAsBnE,EAAKuhE,cACnC57D,EAAM+8B,WAAa,IAAI/8B,EAAM+8B,cAAe1iC,EAAKuhE,cAG/C,aAAc57D,GAASA,EAAMjB,UAAY1E,EAAKwhE,YAChD77D,EAAMjB,SAAW1E,EAAKwhE,WAI1B,GAAI97D,EAAM,CACR,MAAM40D,EAAM,SAAU50D,EAAOA,EAAO,CAACpK,SAAUoK,GAE1Ck5D,GAAUtE,KACb30D,EAAMrK,SAAW,CAACK,MAAO+iE,GAAWpE,GAAM1+D,IAAK+iE,GAASrE,KAI5D,OAAO30D,EAQT,SAASs5D,EAAE17D,EAAMgU,EAAS6jD,EAAO12D,GAO/B,OANIlC,MAAMC,QAAQ24D,KAChB12D,EAAW02D,EACXA,EAAQ,IAIH8D,EAAQ37D,EAAM,CACnBY,KAAM,UACNoT,QAAAA,EACAmrB,WAAY04B,GAAS,GACrB12D,SAAUA,GAAY,MAYrB,SAAS+8D,GAAO39D,EAAM/D,GAC3B,MAAMk/D,EAAInyC,GAAQhpB,EAAM/D,GAClBwD,EAAO,GAAI07D,EAAGn7D,EAAM,MACpB49D,EAAO9B,GAAOX,GASpB,OAPIyC,GAIFn+D,EAAKmB,SAASnK,KAAKkkE,GAAE,OAAQ,MAAOiD,GAG/Bl/D,MAAMC,QAAQc,GAAQ,CAACY,KAAM,OAAQO,SAAUnB,GAAQA,EChNjD,SAASo+D,GAAWr/D,EAAW,IAC5C,MAAMvC,EAAU,IAAIuC,GAEpB,IAAI08D,EAgBJ,SAASl+C,EAASvd,EAAMxG,GACtB,MAAM6kE,EAAOH,GAAOl+D,EAAM,CACxB+4D,oBAAqB0C,EACrBl3C,SAAU/nB,EAAQ+nB,WAGd+5C,EAAY7C,EAAQrB,GAASiE,EAAM7hE,EAAQ49D,UAAYiE,EACvD/mE,EAAS+gE,GAEbiG,EACA7oE,OAAO4J,OAAO,GAAI7C,EAAS,CAACu8D,oBAAqB0C,KAQnD,OALIjiE,EAAKM,UACPN,EAAKM,QAAU,SAIVkG,GACLA,EAAKY,MACS,SAAdZ,EAAKY,MACLtJ,GACA,UAAUkM,KAAKlM,EAAOgwB,OAAOhwB,EAAOV,OAAS,IAC3CU,EAAS,KACTA,EAtC0B,mBAArBkF,EAAQ49D,WACjBqB,EAAQj/D,EAAQ49D,SAChB59D,EAAQ49D,cAAWvjE,GAGA,mBAAV4kE,IACTA,GAAQ,GAGVhmE,OAAO4J,OAAOtG,KAAM,CAACkF,SAAUsf,I;;ACnCjC,SAASghD,GAAUC,GACjB,MAA2B,qBAAZA,GAAyC,OAAZA,EAI9C,SAASC,GAASD,GAChB,MAA2B,kBAAZA,GAAsC,OAAZA,EAI3C,SAASE,GAAQhwD,GACf,OAAIzP,MAAMC,QAAQwP,GAAkBA,EAC3B6vD,GAAU7vD,GAAkB,GAE9B,CAAEA,GAIX,SAAS,GAAO4gC,EAAQl2C,GACtB,IAAIzC,EAAOC,EAAQ4H,EAAKmgE,EAExB,GAAIvlE,EAGF,IAFAulE,EAAalpE,OAAOkL,KAAKvH,GAEpBzC,EAAQ,EAAGC,EAAS+nE,EAAW/nE,OAAQD,EAAQC,EAAQD,GAAS,EACnE6H,EAAMmgE,EAAWhoE,GACjB24C,EAAO9wC,GAAOpF,EAAOoF,GAIzB,OAAO8wC,EAIT,SAAS/pB,GAAO7a,EAAQ6b,GACtB,IAAiBq4C,EAAbtnE,EAAS,GAEb,IAAKsnE,EAAQ,EAAGA,EAAQr4C,EAAOq4C,GAAS,EACtCtnE,GAAUoT,EAGZ,OAAOpT,EAIT,SAASunE,GAAepgC,GACtB,OAAmB,IAAXA,GAAkB5/B,OAAOigE,oBAAsB,EAAIrgC,EAI7D,IAAIsgC,GAAmBR,GACnBS,GAAmBP,GACnBQ,GAAmBP,GACnBQ,GAAmB35C,GACnB45C,GAAmBN,GACnBO,GAAmB,GAEnBC,GAAS,CACZd,UAAWQ,GACXN,SAAUO,GACVN,QAASO,GACT15C,OAAQ25C,GACRL,eAAgBM,GAChB5gE,OAAQ6gE,IAMT,SAASE,GAAY9nE,EAAWk5C,GAC9B,IAAI6uB,EAAQ,GAAItmE,EAAUzB,EAAUgB,QAAU,mBAE9C,OAAKhB,EAAU0nC,MAEX1nC,EAAU0nC,KAAKlmC,OACjBumE,GAAS,OAAS/nE,EAAU0nC,KAAKlmC,KAAO,MAG1CumE,GAAS,KAAO/nE,EAAU0nC,KAAKjnC,KAAO,GAAK,KAAOT,EAAU0nC,KAAKhnC,OAAS,GAAK,KAE1Ew4C,GAAWl5C,EAAU0nC,KAAKsgC,UAC7BD,GAAS,OAAS/nE,EAAU0nC,KAAKsgC,SAG5BvmE,EAAU,IAAMsmE,GAZKtmE,EAgB9B,SAASwmE,GAAgBjnE,EAAQ0mC,GAE/BvnC,MAAM/B,KAAKmD,MAEXA,KAAKC,KAAO,gBACZD,KAAKP,OAASA,EACdO,KAAKmmC,KAAOA,EACZnmC,KAAKE,QAAUqmE,GAAYvmE,MAAM,GAG7BpB,MAAM+nE,kBAER/nE,MAAM+nE,kBAAkB3mE,KAAMA,KAAKR,aAGnCQ,KAAKG,OAAQ,IAAKvB,OAASuB,OAAS,GAMxCumE,GAAgB/pE,UAAYD,OAAOiY,OAAO/V,MAAMjC,WAChD+pE,GAAgB/pE,UAAU6C,YAAcknE,GAGxCA,GAAgB/pE,UAAUC,SAAW,SAAkB+6C,GACrD,OAAO33C,KAAKC,KAAO,KAAOsmE,GAAYvmE,KAAM23C,IAI9C,IAAIl5C,GAAYioE,GAGhB,SAASE,GAAQ/rD,EAAQ9O,EAAWu4B,EAAStlC,EAAU6nE,GACrD,IAAIxiD,EAAO,GACPpT,EAAO,GACP61D,EAAgBpjD,KAAKqjD,MAAMF,EAAgB,GAAK,EAYpD,OAVI7nE,EAAW+M,EAAY+6D,IACzBziD,EAAO,QACPtY,EAAY/M,EAAW8nE,EAAgBziD,EAAKxmB,QAG1CymC,EAAUtlC,EAAW8nE,IACvB71D,EAAO,OACPqzB,EAAUtlC,EAAW8nE,EAAgB71D,EAAKpT,QAGrC,CACLmpE,IAAK3iD,EAAOxJ,EAAO9a,MAAMgM,EAAWu4B,GAAS5rB,QAAQ,MAAO,KAAOzH,EACnE7R,IAAKJ,EAAW+M,EAAYsY,EAAKxmB,QAKrC,SAASopE,GAASt1D,EAAQ7G,GACxB,OAAOw7D,GAAO95C,OAAO,IAAK1hB,EAAM6G,EAAO9T,QAAU8T,EAInD,SAASu1D,GAAY/gC,EAAM1iC,GAGzB,GAFAA,EAAU/G,OAAOiY,OAAOlR,GAAW,OAE9B0iC,EAAKtrB,OAAQ,OAAO,KAEpBpX,EAAQsrC,YAAWtrC,EAAQsrC,UAAY,IACT,kBAAxBtrC,EAAQszB,SAA0BtzB,EAAQszB,OAAc,GAChC,kBAAxBtzB,EAAQ0jE,cAA0B1jE,EAAQ0jE,YAAc,GAChC,kBAAxB1jE,EAAQ2jE,aAA0B3jE,EAAQ2jE,WAAc,GAEnE,IAGI9jD,EAHA+jD,EAAK,eACLC,EAAa,CAAE,GACfC,EAAW,GAEXC,GAAe,EAEnB,MAAQlkD,EAAQ+jD,EAAG5jD,KAAK0iB,EAAKtrB,QAC3B0sD,EAAStpE,KAAKqlB,EAAM1lB,OACpB0pE,EAAWrpE,KAAKqlB,EAAM1lB,MAAQ0lB,EAAM,GAAGzlB,QAEnCsoC,EAAKnnC,UAAYskB,EAAM1lB,OAAS4pE,EAAc,IAChDA,EAAcF,EAAWzpE,OAAS,GAIlC2pE,EAAc,IAAGA,EAAcF,EAAWzpE,OAAS,GAEvD,IAAiB4pE,EAAGvoE,EAAhBX,EAAS,GACTmpE,EAAehkD,KAAK0N,IAAI+U,EAAKjnC,KAAOuE,EAAQ2jE,WAAYG,EAAS1pE,QAAQjB,WAAWiB,OACpFgpE,EAAgBpjE,EAAQsrC,WAAatrC,EAAQszB,OAAS2wC,EAAe,GAEzE,IAAKD,EAAI,EAAGA,GAAKhkE,EAAQ0jE,YAAaM,IAAK,CACzC,GAAID,EAAcC,EAAI,EAAG,MACzBvoE,EAAO0nE,GACLzgC,EAAKtrB,OACLysD,EAAWE,EAAcC,GACzBF,EAASC,EAAcC,GACvBthC,EAAKnnC,UAAYsoE,EAAWE,GAAeF,EAAWE,EAAcC,IACpEZ,GAEFtoE,EAAS+nE,GAAO95C,OAAO,IAAK/oB,EAAQszB,QAAUkwC,IAAU9gC,EAAKjnC,KAAOuoE,EAAI,GAAG7qE,WAAY8qE,GACrF,MAAQxoE,EAAK8nE,IAAM,KAAOzoE,EAQ9B,IALAW,EAAO0nE,GAAQzgC,EAAKtrB,OAAQysD,EAAWE,GAAcD,EAASC,GAAcrhC,EAAKnnC,SAAU6nE,GAC3FtoE,GAAU+nE,GAAO95C,OAAO,IAAK/oB,EAAQszB,QAAUkwC,IAAU9gC,EAAKjnC,KAAO,GAAGtC,WAAY8qE,GAClF,MAAQxoE,EAAK8nE,IAAM,KACrBzoE,GAAU+nE,GAAO95C,OAAO,IAAK/oB,EAAQszB,OAAS2wC,EAAe,EAAIxoE,EAAKE,KAA5DknE,MAELmB,EAAI,EAAGA,GAAKhkE,EAAQ2jE,WAAYK,IAAK,CACxC,GAAID,EAAcC,GAAKF,EAAS1pE,OAAQ,MACxCqB,EAAO0nE,GACLzgC,EAAKtrB,OACLysD,EAAWE,EAAcC,GACzBF,EAASC,EAAcC,GACvBthC,EAAKnnC,UAAYsoE,EAAWE,GAAeF,EAAWE,EAAcC,IACpEZ,GAEFtoE,GAAU+nE,GAAO95C,OAAO,IAAK/oB,EAAQszB,QAAUkwC,IAAU9gC,EAAKjnC,KAAOuoE,EAAI,GAAG7qE,WAAY8qE,GACtF,MAAQxoE,EAAK8nE,IAAM,KAGvB,OAAOzoE,EAAOma,QAAQ,MAAO,IAI/B,IAAI+tD,GAAUS,GAEVS,GAA2B,CAC7B,OACA,QACA,UACA,YACA,aACA,YACA,YACA,gBACA,eACA,gBAGEC,GAAkB,CACpB,SACA,WACA,WAGF,SAASC,GAAoB/jE,GAC3B,IAAIvF,EAAS,GAUb,OARY,OAARuF,GACFpH,OAAOkL,KAAK9D,GAAKgkE,SAAQ,SAAU/0C,GACjCjvB,EAAIivB,GAAO+0C,SAAQ,SAAUC,GAC3BxpE,EAAOyI,OAAO+gE,IAAUh1C,QAKvBx0B,EAGT,SAASypE,GAAOC,EAAKxkE,GAuBnB,GAtBAA,EAAUA,GAAW,GAErB/G,OAAOkL,KAAKnE,GAASqkE,SAAQ,SAAU7nE,GACrC,IAAgD,IAA5C0nE,GAAyB7nE,QAAQG,GACnC,MAAM,IAAIxB,GAAU,mBAAqBwB,EAAO,8BAAgCgoE,EAAM,mBAK1FjoE,KAAKyD,QAAgBA,EACrBzD,KAAKioE,IAAgBA,EACrBjoE,KAAKoW,KAAgB3S,EAAQ,SAAoB,KACjDzD,KAAKsH,QAAgB7D,EAAQ,YAAoB,WAAc,OAAO,GACtEzD,KAAK8T,UAAgBrQ,EAAQ,cAAoB,SAAUC,GAAQ,OAAOA,GAC1E1D,KAAKkoE,WAAgBzkE,EAAQ,eAAoB,KACjDzD,KAAKmoE,UAAgB1kE,EAAQ,cAAoB,KACjDzD,KAAKooE,UAAgB3kE,EAAQ,cAAoB,KACjDzD,KAAKqoE,cAAgB5kE,EAAQ,kBAAoB,KACjDzD,KAAKsoE,aAAgB7kE,EAAQ,iBAAoB,KACjDzD,KAAKuoE,MAAgB9kE,EAAQ,WAAoB,EACjDzD,KAAKwoE,aAAgBX,GAAoBpkE,EAAQ,iBAAmB,OAExB,IAAxCmkE,GAAgB9nE,QAAQE,KAAKoW,MAC/B,MAAM,IAAI3X,GAAU,iBAAmBuB,KAAKoW,KAAO,uBAAyB6xD,EAAM,gBAItF,IAAIpgE,GAAOmgE,GAQX,SAASS,GAAYptC,EAAQp7B,GAC3B,IAAI1B,EAAS,GAiBb,OAfA88B,EAAOp7B,GAAM6nE,SAAQ,SAAUY,GAC7B,IAAIC,EAAWpqE,EAAOV,OAEtBU,EAAOupE,SAAQ,SAAUc,EAAcC,GACjCD,EAAaX,MAAQS,EAAYT,KACjCW,EAAaxyD,OAASsyD,EAAYtyD,MAClCwyD,EAAaL,QAAUG,EAAYH,QAErCI,EAAWE,MAIftqE,EAAOoqE,GAAYD,KAGdnqE,EAIT,SAASuqE,KACP,IAWOlrE,EAAOC,EAXVU,EAAS,CACPwqE,OAAQ,GACRpzD,SAAU,GACVqzD,QAAS,GACTC,SAAU,GACVV,MAAO,CACLQ,OAAQ,GACRpzD,SAAU,GACVqzD,QAAS,GACTC,SAAU,KAIlB,SAASC,EAAYrhE,GACfA,EAAK0gE,OACPhqE,EAAOgqE,MAAM1gE,EAAKuO,MAAMnY,KAAK4J,GAC7BtJ,EAAOgqE,MAAM,YAAYtqE,KAAK4J,IAE9BtJ,EAAOsJ,EAAKuO,MAAMvO,EAAKogE,KAAO1pE,EAAO,YAAYsJ,EAAKogE,KAAOpgE,EAIjE,IAAKjK,EAAQ,EAAGC,EAAS6H,UAAU7H,OAAQD,EAAQC,EAAQD,GAAS,EAClE8H,UAAU9H,GAAOkqE,QAAQoB,GAE3B,OAAO3qE,EAIT,SAAS4qE,GAAStwD,GAChB,OAAO7Y,KAAKwF,OAAOqT,GAIrBswD,GAASxsE,UAAU6I,OAAS,SAAgBqT,GAC1C,IAAIuwD,EAAW,GACXC,EAAW,GAEf,GAAIxwD,aAAsBhR,GAExBwhE,EAASprE,KAAK4a,QAET,GAAI3S,MAAMC,QAAQ0S,GAEvBwwD,EAAWA,EAASrmD,OAAOnK,OAEtB,KAAIA,IAAe3S,MAAMC,QAAQ0S,EAAWuwD,YAAaljE,MAAMC,QAAQ0S,EAAWwwD,UAMvF,MAAM,IAAI5qE,GAAU,oHAJhBoa,EAAWuwD,WAAUA,EAAWA,EAASpmD,OAAOnK,EAAWuwD,WAC3DvwD,EAAWwwD,WAAUA,EAAWA,EAASrmD,OAAOnK,EAAWwwD,WAOjED,EAAStB,SAAQ,SAAUwB,GACzB,KAAMA,aAAkBzhE,IACtB,MAAM,IAAIpJ,GAAU,sFAGtB,GAAI6qE,EAAOC,UAAgC,WAApBD,EAAOC,SAC5B,MAAM,IAAI9qE,GAAU,mHAGtB,GAAI6qE,EAAOf,MACT,MAAM,IAAI9pE,GAAU,yGAIxB4qE,EAASvB,SAAQ,SAAUwB,GACzB,KAAMA,aAAkBzhE,IACtB,MAAM,IAAIpJ,GAAU,yFAIxB,IAAIF,EAAS7B,OAAOiY,OAAOw0D,GAASxsE,WASpC,OAPA4B,EAAO6qE,UAAYppE,KAAKopE,UAAY,IAAIpmD,OAAOomD,GAC/C7qE,EAAO8qE,UAAYrpE,KAAKqpE,UAAY,IAAIrmD,OAAOqmD,GAE/C9qE,EAAOirE,iBAAmBf,GAAYlqE,EAAQ,YAC9CA,EAAOkrE,iBAAmBhB,GAAYlqE,EAAQ,YAC9CA,EAAOmrE,gBAAmBZ,GAAWvqE,EAAOirE,iBAAkBjrE,EAAOkrE,kBAE9DlrE,GAIT,IAAI88B,GAAS8tC,GAETnC,GAAM,IAAIn/D,GAAK,wBAAyB,CAC1CuO,KAAM,SACNtC,UAAW,SAAUpQ,GAAQ,OAAgB,OAATA,EAAgBA,EAAO,MAGzDimE,GAAM,IAAI9hE,GAAK,wBAAyB,CAC1CuO,KAAM,WACNtC,UAAW,SAAUpQ,GAAQ,OAAgB,OAATA,EAAgBA,EAAO,MAGzD,GAAM,IAAImE,GAAK,wBAAyB,CAC1CuO,KAAM,UACNtC,UAAW,SAAUpQ,GAAQ,OAAgB,OAATA,EAAgBA,EAAO,MAGzDkmE,GAAW,IAAIvuC,GAAO,CACxBguC,SAAU,CACRrC,GACA2C,GACA,MAIJ,SAASE,GAAgBnmE,GACvB,GAAa,OAATA,EAAe,OAAO,EAE1B,IAAIoH,EAAMpH,EAAK7F,OAEf,OAAgB,IAARiN,GAAsB,MAATpH,GACL,IAARoH,IAAuB,SAATpH,GAA4B,SAATA,GAA4B,SAATA,GAG9D,SAASomE,KACP,OAAO,KAGT,SAASC,GAAOrxB,GACd,OAAkB,OAAXA,EAGT,IAAIsxB,GAAQ,IAAIniE,GAAK,yBAA0B,CAC7CuO,KAAM,SACN9O,QAASuiE,GACT/1D,UAAWg2D,GACX3B,UAAW4B,GACX3B,UAAW,CACT6B,UAAW,WAAc,MAAO,KAChCC,UAAW,WAAc,MAAO,QAChCC,UAAW,WAAc,MAAO,QAChCvd,UAAW,WAAc,MAAO,QAChC6L,MAAW,WAAc,MAAO,KAElC6P,aAAc,cAGhB,SAAS8B,GAAmB1mE,GAC1B,GAAa,OAATA,EAAe,OAAO,EAE1B,IAAIoH,EAAMpH,EAAK7F,OAEf,OAAgB,IAARiN,IAAuB,SAATpH,GAA4B,SAATA,GAA4B,SAATA,IAC5C,IAARoH,IAAuB,UAATpH,GAA6B,UAATA,GAA6B,UAATA,GAGhE,SAAS2mE,GAAqB3mE,GAC5B,MAAgB,SAATA,GACS,SAATA,GACS,SAATA,EAGT,SAAS4mE,GAAU5xB,GACjB,MAAkD,qBAA3Ch8C,OAAOC,UAAUC,SAASC,KAAK67C,GAGxC,IAAI6xB,GAAO,IAAI1iE,GAAK,yBAA0B,CAC5CuO,KAAM,SACN9O,QAAS8iE,GACTt2D,UAAWu2D,GACXlC,UAAWmC,GACXlC,UAAW,CACT8B,UAAW,SAAUxxB,GAAU,OAAOA,EAAS,OAAS,SACxDyxB,UAAW,SAAUzxB,GAAU,OAAOA,EAAS,OAAS,SACxDkU,UAAW,SAAUlU,GAAU,OAAOA,EAAS,OAAS,UAE1D4vB,aAAc,cAGhB,SAASkC,GAAUC,GACjB,OAAS,IAAeA,GAAOA,GAAK,IAC3B,IAAeA,GAAOA,GAAK,IAC3B,IAAeA,GAAOA,GAAK,IAGtC,SAASC,GAAUD,GACjB,OAAS,IAAeA,GAAOA,GAAK,GAGtC,SAASE,GAAUF,GACjB,OAAS,IAAeA,GAAOA,GAAK,GAGtC,SAASG,GAAmBlnE,GAC1B,GAAa,OAATA,EAAe,OAAO,EAE1B,IAGImnE,EAHA//D,EAAMpH,EAAK7F,OACXD,EAAQ,EACRktE,GAAY,EAGhB,IAAKhgE,EAAK,OAAO,EASjB,GAPA+/D,EAAKnnE,EAAK9F,GAGC,MAAPitE,GAAqB,MAAPA,IAChBA,EAAKnnE,IAAO9F,IAGH,MAAPitE,EAAY,CAEd,GAAIjtE,EAAQ,IAAMkN,EAAK,OAAO,EAK9B,GAJA+/D,EAAKnnE,IAAO9F,GAID,MAAPitE,EAAY,CAId,IAFAjtE,IAEOA,EAAQkN,EAAKlN,IAElB,GADAitE,EAAKnnE,EAAK9F,GACC,MAAPitE,EAAJ,CACA,GAAW,MAAPA,GAAqB,MAAPA,EAAY,OAAO,EACrCC,GAAY,EAEd,OAAOA,GAAoB,MAAPD,EAItB,GAAW,MAAPA,EAAY,CAId,IAFAjtE,IAEOA,EAAQkN,EAAKlN,IAElB,GADAitE,EAAKnnE,EAAK9F,GACC,MAAPitE,EAAJ,CACA,IAAKL,GAAU9mE,EAAKrC,WAAWzD,IAAS,OAAO,EAC/CktE,GAAY,EAEd,OAAOA,GAAoB,MAAPD,EAItB,GAAW,MAAPA,EAAY,CAId,IAFAjtE,IAEOA,EAAQkN,EAAKlN,IAElB,GADAitE,EAAKnnE,EAAK9F,GACC,MAAPitE,EAAJ,CACA,IAAKH,GAAUhnE,EAAKrC,WAAWzD,IAAS,OAAO,EAC/CktE,GAAY,EAEd,OAAOA,GAAoB,MAAPD,GAOxB,GAAW,MAAPA,EAAY,OAAO,EAEvB,KAAOjtE,EAAQkN,EAAKlN,IAElB,GADAitE,EAAKnnE,EAAK9F,GACC,MAAPitE,EAAJ,CACA,IAAKF,GAAUjnE,EAAKrC,WAAWzD,IAC7B,OAAO,EAETktE,GAAY,EAId,SAAKA,GAAoB,MAAPD,GAKpB,SAASE,GAAqBrnE,GAC5B,IAA4BmnE,EAAxBpuE,EAAQiH,EAAMsnE,EAAO,EAczB,IAZ4B,IAAxBvuE,EAAMqD,QAAQ,OAChBrD,EAAQA,EAAMic,QAAQ,KAAM,KAG9BmyD,EAAKpuE,EAAM,GAEA,MAAPouE,GAAqB,MAAPA,IACL,MAAPA,IAAYG,GAAQ,GACxBvuE,EAAQA,EAAMsD,MAAM,GACpB8qE,EAAKpuE,EAAM,IAGC,MAAVA,EAAe,OAAO,EAE1B,GAAW,MAAPouE,EAAY,CACd,GAAiB,MAAbpuE,EAAM,GAAY,OAAOuuE,EAAOlnD,SAASrnB,EAAMsD,MAAM,GAAI,GAC7D,GAAiB,MAAbtD,EAAM,GAAY,OAAOuuE,EAAOlnD,SAASrnB,EAAMsD,MAAM,GAAI,IAC7D,GAAiB,MAAbtD,EAAM,GAAY,OAAOuuE,EAAOlnD,SAASrnB,EAAMsD,MAAM,GAAI,GAG/D,OAAOirE,EAAOlnD,SAASrnB,EAAO,IAGhC,SAASwuE,GAAUvyB,GACjB,MAAoD,oBAA5Ch8C,OAAOC,UAAUC,SAASC,KAAK67C,IAC/BA,EAAS,IAAM,IAAM4tB,GAAOR,eAAeptB,GAGrD,IAAI,GAAM,IAAI7wC,GAAK,wBAAyB,CAC1CuO,KAAM,SACN9O,QAASsjE,GACT92D,UAAWi3D,GACX5C,UAAW8C,GACX7C,UAAW,CACT8C,OAAa,SAAUC,GAAO,OAAOA,GAAO,EAAI,KAAOA,EAAIvuE,SAAS,GAAK,MAAQuuE,EAAIvuE,SAAS,GAAGmD,MAAM,IACvGqrE,MAAa,SAAUD,GAAO,OAAOA,GAAO,EAAI,KAAQA,EAAIvuE,SAAS,GAAK,MAASuuE,EAAIvuE,SAAS,GAAGmD,MAAM,IACzG49D,QAAa,SAAUwN,GAAO,OAAOA,EAAIvuE,SAAS,KAElDyuE,YAAa,SAAUF,GAAO,OAAOA,GAAO,EAAI,KAAOA,EAAIvuE,SAAS,IAAIgc,cAAiB,MAAQuyD,EAAIvuE,SAAS,IAAIgc,cAAc7Y,MAAM,KAExIuoE,aAAc,UACdE,aAAc,CACZ0C,OAAa,CAAE,EAAI,OACnBE,MAAa,CAAE,EAAI,OACnBzN,QAAa,CAAE,GAAI,OACnB0N,YAAa,CAAE,GAAI,UAInBC,GAAqB,IAAIv9C,OAE3B,4IASF,SAASw9C,GAAiB7nE,GACxB,OAAa,OAATA,MAEC4nE,GAAmB7gE,KAAK/G,IAGC,MAA1BA,EAAKA,EAAK7F,OAAS,IAOzB,SAAS2tE,GAAmB9nE,GAC1B,IAAIjH,EAAOuuE,EASX,OAPAvuE,EAASiH,EAAKgV,QAAQ,KAAM,IAAIC,cAChCqyD,EAAsB,MAAbvuE,EAAM,IAAc,EAAI,EAE7B,KAAKqD,QAAQrD,EAAM,KAAO,IAC5BA,EAAQA,EAAMsD,MAAM,IAGR,SAAVtD,EACe,IAATuuE,EAAcllE,OAAOC,kBAAoBD,OAAOigE,kBAErC,SAAVtpE,EACFgvE,IAEFT,EAAOU,WAAWjvE,EAAO,IAIlC,IAAIkvE,GAAyB,gBAE7B,SAASC,GAAmBlzB,EAAQ3lB,GAClC,IAAI84C,EAEJ,GAAI5M,MAAMvmB,GACR,OAAQ3lB,GACN,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,YAEtB,GAAIjtB,OAAOC,oBAAsB2yC,EACtC,OAAQ3lB,GACN,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,YAEtB,GAAIjtB,OAAOigE,oBAAsBrtB,EACtC,OAAQ3lB,GACN,IAAK,YAAa,MAAO,QACzB,IAAK,YAAa,MAAO,QACzB,IAAK,YAAa,MAAO,aAEtB,GAAIuzC,GAAOR,eAAeptB,GAC/B,MAAO,OAQT,OALAmzB,EAAMnzB,EAAO97C,SAAS,IAKf+uE,GAAuBlhE,KAAKohE,GAAOA,EAAInzD,QAAQ,IAAK,MAAQmzD,EAGrE,SAASC,GAAQpzB,GACf,MAAmD,oBAA3Ch8C,OAAOC,UAAUC,SAASC,KAAK67C,KAC/BA,EAAS,IAAM,GAAK4tB,GAAOR,eAAeptB,IAGpD,IAAI,GAAQ,IAAI7wC,GAAK,0BAA2B,CAC9CuO,KAAM,SACN9O,QAASikE,GACTz3D,UAAW03D,GACXrD,UAAW2D,GACX1D,UAAWwD,GACXtD,aAAc,cAGZyD,GAAOnC,GAASpkE,OAAO,CACzB4jE,SAAU,CACRY,GACAO,GACA,GACA,MAIA,GAAOwB,GAEPC,GAAmB,IAAIj+C,OACzB,sDAIEk+C,GAAwB,IAAIl+C,OAC9B,oLAWF,SAASm+C,GAAqBxoE,GAC5B,OAAa,OAATA,IACgC,OAAhCsoE,GAAiBvoD,KAAK/f,IACe,OAArCuoE,GAAsBxoD,KAAK/f,IAIjC,SAASyoE,GAAuBzoE,GAC9B,IAAI4f,EAAO8oD,EAAMC,EAAOC,EAAKC,EAAMC,EAAQC,EACzBC,EAASC,EAAWC,EADaC,EAAW,EAC1DpX,EAAQ,KAKZ,GAHAnyC,EAAQ0oD,GAAiBvoD,KAAK/f,GAChB,OAAV4f,IAAgBA,EAAQ2oD,GAAsBxoD,KAAK/f,IAEzC,OAAV4f,EAAgB,MAAM,IAAI1kB,MAAM,sBAQpC,GAJAwtE,GAAS9oD,EAAM,GACf+oD,GAAU/oD,EAAM,GAAM,EACtBgpD,GAAQhpD,EAAM,IAETA,EAAM,GACT,OAAO,IAAIwpD,KAAKA,KAAKC,IAAIX,EAAMC,EAAOC,IASxC,GAJAC,GAASjpD,EAAM,GACfkpD,GAAWlpD,EAAM,GACjBmpD,GAAWnpD,EAAM,GAEbA,EAAM,GAAI,CACZupD,EAAWvpD,EAAM,GAAGvjB,MAAM,EAAG,GAC7B,MAAO8sE,EAAShvE,OAAS,EACvBgvE,GAAY,IAEdA,GAAYA,EAgBd,OAXIvpD,EAAM,KACRopD,GAAYppD,EAAM,IAClBqpD,IAAcrpD,EAAM,KAAO,GAC3BmyC,EAAqC,KAAlB,GAAViX,EAAeC,GACP,MAAbrpD,EAAM,KAAYmyC,GAASA,IAGjCmX,EAAO,IAAIE,KAAKA,KAAKC,IAAIX,EAAMC,EAAOC,EAAKC,EAAMC,EAAQC,EAAQI,IAE7DpX,GAAOmX,EAAKI,QAAQJ,EAAKK,UAAYxX,GAElCmX,EAGT,SAASM,GAAuBx0B,GAC9B,OAAOA,EAAOy0B,cAGhB,IAAIC,GAAY,IAAIvlE,GAAK,8BAA+B,CACtDuO,KAAM,SACN9O,QAAS4kE,GACTp4D,UAAWq4D,GACXjE,WAAY4E,KACZ1E,UAAW8E,KAGb,SAASG,GAAiB3pE,GACxB,MAAgB,OAATA,GAA0B,OAATA,EAG1B,IAAI,GAAQ,IAAImE,GAAK,0BAA2B,CAC9CuO,KAAM,SACN9O,QAAS+lE,KAUPC,GAAa,wEAGjB,SAASC,GAAkB7pE,GACzB,GAAa,OAATA,EAAe,OAAO,EAE1B,IAAI9B,EAAM4rE,EAAKC,EAAS,EAAG3iE,EAAMpH,EAAK7F,OAAQiG,EAAMwpE,GAGpD,IAAKE,EAAM,EAAGA,EAAM1iE,EAAK0iE,IAIvB,GAHA5rE,EAAOkC,EAAIhE,QAAQ4D,EAAK6qB,OAAOi/C,MAG3B5rE,EAAO,IAAX,CAGA,GAAIA,EAAO,EAAG,OAAO,EAErB6rE,GAAU,EAIZ,OAAQA,EAAS,IAAO,EAG1B,SAASC,GAAoBhqE,GAC3B,IAAI8pE,EAAKG,EACL3/C,EAAQtqB,EAAKgV,QAAQ,WAAY,IACjC5N,EAAMkjB,EAAMnwB,OACZiG,EAAMwpE,GACNM,EAAO,EACPrvE,EAAS,GAIb,IAAKivE,EAAM,EAAGA,EAAM1iE,EAAK0iE,IAClBA,EAAM,IAAM,GAAMA,IACrBjvE,EAAON,KAAM2vE,GAAQ,GAAM,KAC3BrvE,EAAON,KAAM2vE,GAAQ,EAAK,KAC1BrvE,EAAON,KAAY,IAAP2vE,IAGdA,EAAQA,GAAQ,EAAK9pE,EAAIhE,QAAQkuB,EAAMO,OAAOi/C,IAkBhD,OAbAG,EAAY7iE,EAAM,EAAK,EAEN,IAAb6iE,GACFpvE,EAAON,KAAM2vE,GAAQ,GAAM,KAC3BrvE,EAAON,KAAM2vE,GAAQ,EAAK,KAC1BrvE,EAAON,KAAY,IAAP2vE,IACU,KAAbD,GACTpvE,EAAON,KAAM2vE,GAAQ,GAAM,KAC3BrvE,EAAON,KAAM2vE,GAAQ,EAAK,MACJ,KAAbD,GACTpvE,EAAON,KAAM2vE,GAAQ,EAAK,KAGrB,IAAIC,WAAWtvE,GAGxB,SAASuvE,GAAoBp1B,GAC3B,IAA2B80B,EAAKv8D,EAA5B1S,EAAS,GAAIqvE,EAAO,EACpB9iE,EAAM4tC,EAAO76C,OACbiG,EAAMwpE,GAIV,IAAKE,EAAM,EAAGA,EAAM1iE,EAAK0iE,IAClBA,EAAM,IAAM,GAAMA,IACrBjvE,GAAUuF,EAAK8pE,GAAQ,GAAM,IAC7BrvE,GAAUuF,EAAK8pE,GAAQ,GAAM,IAC7BrvE,GAAUuF,EAAK8pE,GAAQ,EAAK,IAC5BrvE,GAAUuF,EAAW,GAAP8pE,IAGhBA,GAAQA,GAAQ,GAAKl1B,EAAO80B,GAwB9B,OAnBAv8D,EAAOnG,EAAM,EAEA,IAATmG,GACF1S,GAAUuF,EAAK8pE,GAAQ,GAAM,IAC7BrvE,GAAUuF,EAAK8pE,GAAQ,GAAM,IAC7BrvE,GAAUuF,EAAK8pE,GAAQ,EAAK,IAC5BrvE,GAAUuF,EAAW,GAAP8pE,IACI,IAAT38D,GACT1S,GAAUuF,EAAK8pE,GAAQ,GAAM,IAC7BrvE,GAAUuF,EAAK8pE,GAAQ,EAAK,IAC5BrvE,GAAUuF,EAAK8pE,GAAQ,EAAK,IAC5BrvE,GAAUuF,EAAI,KACI,IAATmN,IACT1S,GAAUuF,EAAK8pE,GAAQ,EAAK,IAC5BrvE,GAAUuF,EAAK8pE,GAAQ,EAAK,IAC5BrvE,GAAUuF,EAAI,IACdvF,GAAUuF,EAAI,KAGTvF,EAGT,SAASwvE,GAAS5C,GAChB,MAAgD,wBAAzCzuE,OAAOC,UAAUC,SAASC,KAAKsuE,GAGxC,IAAID,GAAS,IAAIrjE,GAAK,2BAA4B,CAChDuO,KAAM,SACN9O,QAASimE,GACTz5D,UAAW45D,GACXvF,UAAW4F,GACX3F,UAAW0F,KAGTE,GAAoBtxE,OAAOC,UAAUmC,eACrCmvE,GAAoBvxE,OAAOC,UAAUC,SAEzC,SAASsxE,GAAgBxqE,GACvB,GAAa,OAATA,EAAe,OAAO,EAE1B,IAAqB9F,EAAOC,EAAQ0vD,EAAM4gB,EAASC,EAA/CC,EAAa,GACb31B,EAASh1C,EAEb,IAAK9F,EAAQ,EAAGC,EAAS66C,EAAO76C,OAAQD,EAAQC,EAAQD,GAAS,EAAG,CAIlE,GAHA2vD,EAAO7U,EAAO96C,GACdwwE,GAAa,EAEkB,oBAA3BH,GAAYpxE,KAAK0wD,GAA6B,OAAO,EAEzD,IAAK4gB,KAAW5gB,EACd,GAAIygB,GAAkBnxE,KAAK0wD,EAAM4gB,GAAU,CACzC,GAAKC,EACA,OAAO,EADKA,GAAa,EAKlC,IAAKA,EAAY,OAAO,EAExB,IAAqC,IAAjCC,EAAWvuE,QAAQquE,GAClB,OAAO,EAD4BE,EAAWpwE,KAAKkwE,GAI1D,OAAO,EAGT,SAASG,GAAkB5qE,GACzB,OAAgB,OAATA,EAAgBA,EAAO,GAGhC,IAAI6qE,GAAO,IAAI1mE,GAAK,yBAA0B,CAC5CuO,KAAM,WACN9O,QAAS4mE,GACTp6D,UAAWw6D,KAGTE,GAAc9xE,OAAOC,UAAUC,SAEnC,SAAS6xE,GAAiB/qE,GACxB,GAAa,OAATA,EAAe,OAAO,EAE1B,IAAI9F,EAAOC,EAAQ0vD,EAAM3lD,EAAMrJ,EAC3Bm6C,EAASh1C,EAIb,IAFAnF,EAAS,IAAI2H,MAAMwyC,EAAO76C,QAErBD,EAAQ,EAAGC,EAAS66C,EAAO76C,OAAQD,EAAQC,EAAQD,GAAS,EAAG,CAGlE,GAFA2vD,EAAO7U,EAAO96C,GAEiB,oBAA3B4wE,GAAY3xE,KAAK0wD,GAA6B,OAAO,EAIzD,GAFA3lD,EAAOlL,OAAOkL,KAAK2lD,GAEC,IAAhB3lD,EAAK/J,OAAc,OAAO,EAE9BU,EAAOX,GAAS,CAAEgK,EAAK,GAAI2lD,EAAK3lD,EAAK,KAGvC,OAAO,EAGT,SAAS8mE,GAAmBhrE,GAC1B,GAAa,OAATA,EAAe,MAAO,GAE1B,IAAI9F,EAAOC,EAAQ0vD,EAAM3lD,EAAMrJ,EAC3Bm6C,EAASh1C,EAIb,IAFAnF,EAAS,IAAI2H,MAAMwyC,EAAO76C,QAErBD,EAAQ,EAAGC,EAAS66C,EAAO76C,OAAQD,EAAQC,EAAQD,GAAS,EAC/D2vD,EAAO7U,EAAO96C,GAEdgK,EAAOlL,OAAOkL,KAAK2lD,GAEnBhvD,EAAOX,GAAS,CAAEgK,EAAK,GAAI2lD,EAAK3lD,EAAK,KAGvC,OAAOrJ,EAGT,IAAIi9B,GAAQ,IAAI3zB,GAAK,0BAA2B,CAC9CuO,KAAM,WACN9O,QAASmnE,GACT36D,UAAW46D,KAGTC,GAAoBjyE,OAAOC,UAAUmC,eAEzC,SAAS8vE,GAAelrE,GACtB,GAAa,OAATA,EAAe,OAAO,EAE1B,IAAI+B,EAAKizC,EAASh1C,EAElB,IAAK+B,KAAOizC,EACV,GAAIi2B,GAAkB9xE,KAAK67C,EAAQjzC,IACb,OAAhBizC,EAAOjzC,GAAe,OAAO,EAIrC,OAAO,EAGT,SAASopE,GAAiBnrE,GACxB,OAAgB,OAATA,EAAgBA,EAAO,GAGhC,IAAIorE,GAAM,IAAIjnE,GAAK,wBAAyB,CAC1CuO,KAAM,UACN9O,QAASsnE,GACT96D,UAAW+6D,KAGTE,GAAW,GAAKvpE,OAAO,CACzB4jE,SAAU,CACRgE,GACA,IAEF/D,SAAU,CACR6B,GACAqD,GACA/yC,GACAszC,MAYAE,GAAoBtyE,OAAOC,UAAUmC,eAGrCmwE,GAAoB,EACpBC,GAAoB,EACpBC,GAAoB,EACpBC,GAAoB,EAGpBC,GAAiB,EACjBC,GAAiB,EACjBC,GAAiB,EAGjBC,GAAgC,sIAChCC,GAAgC,qBAChCC,GAAgC,cAChCC,GAAgC,yBAChCC,GAAgC,mFAGpC,SAASC,GAAO1E,GAAO,OAAOzuE,OAAOC,UAAUC,SAASC,KAAKsuE,GAE7D,SAAS2E,GAAOrF,GACd,OAAc,KAANA,GAA8B,KAANA,EAGlC,SAASsF,GAAetF,GACtB,OAAc,IAANA,GAA+B,KAANA,EAGnC,SAASuF,GAAavF,GACpB,OAAc,IAANA,GACM,KAANA,GACM,KAANA,GACM,KAANA,EAGV,SAASwF,GAAkBxF,GACzB,OAAa,KAANA,GACM,KAANA,GACM,KAANA,GACM,MAANA,GACM,MAANA,EAGT,SAASyF,GAAYzF,GACnB,IAAI0F,EAEJ,OAAK,IAAe1F,GAAOA,GAAK,GACvBA,EAAI,IAIb0F,EAAS,GAAJ1F,EAEA,IAAe0F,GAAQA,GAAM,IACzBA,EAAK,GAAO,IAGb,GAGV,SAASC,GAAc3F,GACrB,OAAU,MAANA,EAA4B,EACtB,MAANA,EAA4B,EACtB,KAANA,EAA4B,EACzB,EAGT,SAAS4F,GAAgB5F,GACvB,OAAK,IAAeA,GAAOA,GAAK,GACvBA,EAAI,IAGL,EAGV,SAAS6F,GAAqB7F,GAE5B,OAAc,KAANA,EAAqB,KAChB,KAANA,EAAqB,IACf,KAANA,EAAqB,KACf,MAANA,GACM,IAANA,EADqB,KAEf,MAANA,EAAqB,KACf,MAANA,EAAqB,KACf,MAANA,EAAqB,KACf,MAANA,EAAqB,KACf,MAANA,EAAqB,IACf,KAANA,EAAyB,IACnB,KAANA,EAAqB,IACf,KAANA,EAAqB,IACf,KAANA,EAAqB,KACf,KAANA,EAAqB,IACf,KAANA,EAAqB,IACf,KAANA,EAAqB,SACf,KAANA,EAAqB,SAAW,GAGzC,SAAS8F,GAAkB9F,GACzB,OAAIA,GAAK,MACAzjE,OAAO0D,aAAa+/D,GAItBzjE,OAAO0D,aACa,OAAvB+/D,EAAI,OAAa,IACS,OAA1BA,EAAI,MAAY,OAMtB,IAFA,IAAI+F,GAAoB,IAAItqE,MAAM,KAC9BuqE,GAAkB,IAAIvqE,MAAM,KACvBuhE,GAAI,EAAGA,GAAI,IAAKA,KACvB+I,GAAkB/I,IAAK6I,GAAqB7I,IAAK,EAAI,EACrDgJ,GAAgBhJ,IAAK6I,GAAqB7I,IAI5C,SAASiJ,GAAQ1iD,EAAOvqB,GACtBzD,KAAKguB,MAAQA,EAEbhuB,KAAK2wE,SAAYltE,EAAQ,aAAgB,KACzCzD,KAAKq7B,OAAY53B,EAAQ,WAAgBsrE,GACzC/uE,KAAK4wE,UAAYntE,EAAQ,cAAgB,KAGzCzD,KAAK6wE,OAAYptE,EAAQ,YAAgB,EAEzCzD,KAAK+rE,KAAYtoE,EAAQ,UAAgB,EACzCzD,KAAK8wE,SAAYrtE,EAAQ,aAAgB,KAEzCzD,KAAK+wE,cAAgB/wE,KAAKq7B,OAAOmuC,iBACjCxpE,KAAKgxE,QAAgBhxE,KAAKq7B,OAAOquC,gBAEjC1pE,KAAKnC,OAAamwB,EAAMnwB,OACxBmC,KAAKhB,SAAa,EAClBgB,KAAKd,KAAa,EAClBc,KAAK+L,UAAa,EAClB/L,KAAKixE,WAAa,EAIlBjxE,KAAKkxE,gBAAkB,EAEvBlxE,KAAKmxE,UAAY,GAenB,SAASC,GAAch+D,EAAOlT,GAC5B,IAAIimC,EAAO,CACTlmC,KAAUmT,EAAMu9D,SAChB91D,OAAUzH,EAAM4a,MAAMjuB,MAAM,GAAI,GAChCf,SAAUoU,EAAMpU,SAChBE,KAAUkU,EAAMlU,KAChBC,OAAUiU,EAAMpU,SAAWoU,EAAMrH,WAKnC,OAFAo6B,EAAKsgC,QAAUA,GAAQtgC,GAEhB,IAAI1nC,GAAUyB,EAASimC,GAGhC,SAASkrC,GAAWj+D,EAAOlT,GACzB,MAAMkxE,GAAch+D,EAAOlT,GAG7B,SAASoxE,GAAal+D,EAAOlT,GACvBkT,EAAMw9D,WACRx9D,EAAMw9D,UAAU/zE,KAAK,KAAMu0E,GAAch+D,EAAOlT,IAKpD,IAAIqxE,GAAoB,CAEtBC,KAAM,SAA6Bp+D,EAAOnT,EAAMwxE,GAE9C,IAAInuD,EAAOouD,EAAOC,EAEI,OAAlBv+D,EAAMimC,SACRg4B,GAAWj+D,EAAO,kCAGA,IAAhBq+D,EAAK5zE,QACPwzE,GAAWj+D,EAAO,+CAGpBkQ,EAAQ,uBAAuBG,KAAKguD,EAAK,IAE3B,OAAVnuD,GACF+tD,GAAWj+D,EAAO,6CAGpBs+D,EAAQ5tD,SAASR,EAAM,GAAI,IAC3BquD,EAAQ7tD,SAASR,EAAM,GAAI,IAEb,IAAVouD,GACFL,GAAWj+D,EAAO,6CAGpBA,EAAMimC,QAAUo4B,EAAK,GACrBr+D,EAAMw+D,gBAAmBD,EAAQ,EAEnB,IAAVA,GAAyB,IAAVA,GACjBL,GAAal+D,EAAO,6CAIxBy+D,IAAK,SAA4Bz+D,EAAOnT,EAAMwxE,GAE5C,IAAInlD,EAAQphB,EAEQ,IAAhBumE,EAAK5zE,QACPwzE,GAAWj+D,EAAO,+CAGpBkZ,EAASmlD,EAAK,GACdvmE,EAASumE,EAAK,GAET9B,GAAmBllE,KAAK6hB,IAC3B+kD,GAAWj+D,EAAO,+DAGhB47D,GAAkBnyE,KAAKuW,EAAM0+D,OAAQxlD,IACvC+kD,GAAWj+D,EAAO,8CAAgDkZ,EAAS,gBAGxEsjD,GAAgBnlE,KAAKS,IACxBmmE,GAAWj+D,EAAO,gEAGpB,IACElI,EAAS5H,mBAAmB4H,GAC5B,MAAO6mE,GACPV,GAAWj+D,EAAO,4BAA8BlI,GAGlDkI,EAAM0+D,OAAOxlD,GAAUphB,IAK3B,SAAS8mE,GAAe5+D,EAAO/T,EAAOC,EAAK2yE,GACzC,IAAIC,EAAWC,EAASC,EAAYC,EAEpC,GAAIhzE,EAAQC,EAAK,CAGf,GAFA+yE,EAAUj/D,EAAM4a,MAAMjuB,MAAMV,EAAOC,GAE/B2yE,EACF,IAAKC,EAAY,EAAGC,EAAUE,EAAQx0E,OAAQq0E,EAAYC,EAASD,GAAa,EAC9EE,EAAaC,EAAQhxE,WAAW6wE,GACX,IAAfE,GACC,IAAQA,GAAcA,GAAc,SACzCf,GAAWj+D,EAAO,sCAGbo8D,GAAsB/kE,KAAK4nE,IACpChB,GAAWj+D,EAAO,gDAGpBA,EAAM7U,QAAU8zE,GAIpB,SAASC,GAAcl/D,EAAO7N,EAAalF,EAAQkyE,GACjD,IAAI3M,EAAYngE,EAAK7H,EAAO40E,EAQ5B,IANKlM,GAAOZ,SAASrlE,IACnBgxE,GAAWj+D,EAAO,qEAGpBwyD,EAAalpE,OAAOkL,KAAKvH,GAEpBzC,EAAQ,EAAG40E,EAAW5M,EAAW/nE,OAAQD,EAAQ40E,EAAU50E,GAAS,EACvE6H,EAAMmgE,EAAWhoE,GAEZoxE,GAAkBnyE,KAAK0I,EAAaE,KACvCF,EAAYE,GAAOpF,EAAOoF,GAC1B8sE,EAAgB9sE,IAAO,GAK7B,SAASgtE,GAAiBr/D,EAAOi/D,EAASE,EAAiBG,EAAQC,EAASC,EAC1EC,EAAWC,EAAgBC,GAE3B,IAAIn1E,EAAO40E,EAKX,GAAItsE,MAAMC,QAAQwsE,GAGhB,IAFAA,EAAUzsE,MAAMvJ,UAAUoD,MAAMlD,KAAK81E,GAEhC/0E,EAAQ,EAAG40E,EAAWG,EAAQ90E,OAAQD,EAAQ40E,EAAU50E,GAAS,EAChEsI,MAAMC,QAAQwsE,EAAQ/0E,KACxByzE,GAAWj+D,EAAO,+CAGG,kBAAZu/D,GAAmD,oBAA3B9C,GAAO8C,EAAQ/0E,MAChD+0E,EAAQ/0E,GAAS,mBAmBvB,GAXuB,kBAAZ+0E,GAA4C,oBAApB9C,GAAO8C,KACxCA,EAAU,mBAIZA,EAAU3rE,OAAO2rE,GAED,OAAZN,IACFA,EAAU,IAGG,4BAAXK,EACF,GAAIxsE,MAAMC,QAAQysE,GAChB,IAAKh1E,EAAQ,EAAG40E,EAAWI,EAAU/0E,OAAQD,EAAQ40E,EAAU50E,GAAS,EACtE00E,GAAcl/D,EAAOi/D,EAASO,EAAUh1E,GAAQ20E,QAGlDD,GAAcl/D,EAAOi/D,EAASO,EAAWL,QAGtCn/D,EAAM24D,MACNiD,GAAkBnyE,KAAK01E,EAAiBI,KACzC3D,GAAkBnyE,KAAKw1E,EAASM,KAClCv/D,EAAMlU,KAAO2zE,GAAaz/D,EAAMlU,KAChCkU,EAAMrH,UAAY+mE,GAAkB1/D,EAAMrH,UAC1CqH,EAAMpU,SAAW+zE,GAAY3/D,EAAMpU,SACnCqyE,GAAWj+D,EAAO,2BAIJ,cAAZu/D,EACFj2E,OAAOg0B,eAAe2hD,EAASM,EAAS,CACtCK,cAAc,EACdC,YAAY,EACZC,UAAU,EACVz2E,MAAOm2E,IAGTP,EAAQM,GAAWC,SAEdL,EAAgBI,GAGzB,OAAON,EAGT,SAASc,GAAc//D,GACrB,IAAIy3D,EAEJA,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,EACFz3D,EAAMpU,WACU,KAAP6rE,GACTz3D,EAAMpU,WACyC,KAA3CoU,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,WAC/BoU,EAAMpU,YAGRqyE,GAAWj+D,EAAO,4BAGpBA,EAAMlU,MAAQ,EACdkU,EAAMrH,UAAYqH,EAAMpU,SACxBoU,EAAM89D,gBAAkB,EAG1B,SAASkC,GAAoBhgE,EAAOquD,EAAe4R,GACjD,IAAIC,EAAa,EACbzI,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEtC,MAAc,IAAP6rE,EAAU,CACf,MAAOkF,GAAelF,GACT,IAAPA,IAAkD,IAA1Bz3D,EAAM89D,iBAChC99D,EAAM89D,eAAiB99D,EAAMpU,UAE/B6rE,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAGtC,GAAIyiE,GAAwB,KAAPoJ,EACnB,GACEA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,gBACtB,KAAP6rE,GAA8B,KAAPA,GAA8B,IAAPA,GAGzD,IAAIiF,GAAOjF,GAYT,MAXAsI,GAAc//D,GAEdy3D,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAClCs0E,IACAlgE,EAAM69D,WAAa,EAEnB,MAAc,KAAPpG,EACLz3D,EAAM69D,aACNpG,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAW1C,OAJqB,IAAjBq0E,GAAqC,IAAfC,GAAoBlgE,EAAM69D,WAAaoC,GAC/D/B,GAAal+D,EAAO,yBAGfkgE,EAGT,SAASC,GAAsBngE,GAC7B,IACIy3D,EADAqH,EAAY9+D,EAAMpU,SAOtB,OAJA6rE,EAAKz3D,EAAM4a,MAAM3sB,WAAW6wE,KAIhB,KAAPrH,GAA6B,KAAPA,GACvBA,IAAOz3D,EAAM4a,MAAM3sB,WAAW6wE,EAAY,IAC1CrH,IAAOz3D,EAAM4a,MAAM3sB,WAAW6wE,EAAY,KAE5CA,GAAa,EAEbrH,EAAKz3D,EAAM4a,MAAM3sB,WAAW6wE,GAEjB,IAAPrH,IAAYmF,GAAanF,KAQjC,SAAS2I,GAAiBpgE,EAAOoa,GACjB,IAAVA,EACFpa,EAAM7U,QAAU,IACPivB,EAAQ,IACjBpa,EAAM7U,QAAU+nE,GAAO95C,OAAO,KAAMgB,EAAQ,IAKhD,SAASimD,GAAgBrgE,EAAOsgE,EAAYC,GAC1C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAtJ,EAFAuJ,EAAQhhE,EAAMgD,KACdi8D,EAAUj/D,EAAM7U,OAKpB,GAFAssE,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAE9BgxE,GAAanF,IACboF,GAAkBpF,IACX,KAAPA,GACO,KAAPA,GACO,KAAPA,GACO,KAAPA,GACO,MAAPA,GACO,KAAPA,GACO,KAAPA,GACO,KAAPA,GACO,KAAPA,GACO,KAAPA,GACO,KAAPA,EACF,OAAO,EAGT,IAAW,KAAPA,GAA6B,KAAPA,KACxBgJ,EAAYzgE,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,GAEhDgxE,GAAa6D,IACbF,GAAwB1D,GAAkB4D,IAC5C,OAAO,EAIXzgE,EAAMgD,KAAO,SACbhD,EAAM7U,OAAS,GACfu1E,EAAeC,EAAa3gE,EAAMpU,SAClCg1E,GAAoB,EAEpB,MAAc,IAAPnJ,EAAU,CACf,GAAW,KAAPA,GAGF,GAFAgJ,EAAYzgE,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,GAEhDgxE,GAAa6D,IACbF,GAAwB1D,GAAkB4D,GAC5C,WAGG,GAAW,KAAPhJ,GAGT,GAFA+I,EAAYxgE,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,GAEhDgxE,GAAa4D,GACf,UAGG,IAAKxgE,EAAMpU,WAAaoU,EAAMrH,WAAawnE,GAAsBngE,IAC7DugE,GAAwB1D,GAAkBpF,GACnD,MAEK,GAAIiF,GAAOjF,GAAK,CAMrB,GALAoJ,EAAQ7gE,EAAMlU,KACdg1E,EAAa9gE,EAAMrH,UACnBooE,EAAc/gE,EAAM69D,WACpBmC,GAAoBhgE,GAAO,GAAQ,GAE/BA,EAAM69D,YAAcyC,EAAY,CAClCM,GAAoB,EACpBnJ,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAClC,SAEAoU,EAAMpU,SAAW+0E,EACjB3gE,EAAMlU,KAAO+0E,EACb7gE,EAAMrH,UAAYmoE,EAClB9gE,EAAM69D,WAAakD,EACnB,OAIAH,IACFhC,GAAe5+D,EAAO0gE,EAAcC,GAAY,GAChDP,GAAiBpgE,EAAOA,EAAMlU,KAAO+0E,GACrCH,EAAeC,EAAa3gE,EAAMpU,SAClCg1E,GAAoB,GAGjBjE,GAAelF,KAClBkJ,EAAa3gE,EAAMpU,SAAW,GAGhC6rE,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAKtC,OAFAgzE,GAAe5+D,EAAO0gE,EAAcC,GAAY,KAE5C3gE,EAAM7U,SAIV6U,EAAMgD,KAAOg+D,EACbhhE,EAAM7U,OAAS8zE,GACR,GAGT,SAASgC,GAAuBjhE,EAAOsgE,GACrC,IAAI7I,EACAiJ,EAAcC,EAIlB,GAFAlJ,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,EACF,OAAO,EAGTz3D,EAAMgD,KAAO,SACbhD,EAAM7U,OAAS,GACf6U,EAAMpU,WACN80E,EAAeC,EAAa3gE,EAAMpU,SAElC,MAAyD,KAAjD6rE,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,WACxC,GAAW,KAAP6rE,EAAoB,CAItB,GAHAmH,GAAe5+D,EAAO0gE,EAAc1gE,EAAMpU,UAAU,GACpD6rE,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAEzB,KAAP6rE,EAKF,OAAO,EAJPiJ,EAAe1gE,EAAMpU,SACrBoU,EAAMpU,WACN+0E,EAAa3gE,EAAMpU,cAKZ8wE,GAAOjF,IAChBmH,GAAe5+D,EAAO0gE,EAAcC,GAAY,GAChDP,GAAiBpgE,EAAOggE,GAAoBhgE,GAAO,EAAOsgE,IAC1DI,EAAeC,EAAa3gE,EAAMpU,UAEzBoU,EAAMpU,WAAaoU,EAAMrH,WAAawnE,GAAsBngE,GACrEi+D,GAAWj+D,EAAO,iEAGlBA,EAAMpU,WACN+0E,EAAa3gE,EAAMpU,UAIvBqyE,GAAWj+D,EAAO,8DAGpB,SAASkhE,GAAuBlhE,EAAOsgE,GACrC,IAAII,EACAC,EACAQ,EACAC,EACAC,EACA5J,EAIJ,GAFAA,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,EACF,OAAO,EAGTz3D,EAAMgD,KAAO,SACbhD,EAAM7U,OAAS,GACf6U,EAAMpU,WACN80E,EAAeC,EAAa3gE,EAAMpU,SAElC,MAAyD,KAAjD6rE,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,WAAkB,CAC1D,GAAW,KAAP6rE,EAGF,OAFAmH,GAAe5+D,EAAO0gE,EAAc1gE,EAAMpU,UAAU,GACpDoU,EAAMpU,YACC,EAEF,GAAW,KAAP6rE,EAAoB,CAI7B,GAHAmH,GAAe5+D,EAAO0gE,EAAc1gE,EAAMpU,UAAU,GACpD6rE,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAEhC8wE,GAAOjF,GACTuI,GAAoBhgE,GAAO,EAAOsgE,QAG7B,GAAI7I,EAAK,KAAO2F,GAAkB3F,GACvCz3D,EAAM7U,QAAUkyE,GAAgB5F,GAChCz3D,EAAMpU,gBAED,IAAKy1E,EAAMrE,GAAcvF,IAAO,EAAG,CAIxC,IAHA0J,EAAYE,EACZD,EAAY,EAELD,EAAY,EAAGA,IACpB1J,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,WAE/By1E,EAAMvE,GAAYrF,KAAQ,EAC7B2J,GAAaA,GAAa,GAAKC,EAG/BpD,GAAWj+D,EAAO,kCAItBA,EAAM7U,QAAUgyE,GAAkBiE,GAElCphE,EAAMpU,gBAGNqyE,GAAWj+D,EAAO,2BAGpB0gE,EAAeC,EAAa3gE,EAAMpU,cAEzB8wE,GAAOjF,IAChBmH,GAAe5+D,EAAO0gE,EAAcC,GAAY,GAChDP,GAAiBpgE,EAAOggE,GAAoBhgE,GAAO,EAAOsgE,IAC1DI,EAAeC,EAAa3gE,EAAMpU,UAEzBoU,EAAMpU,WAAaoU,EAAMrH,WAAawnE,GAAsBngE,GACrEi+D,GAAWj+D,EAAO,iEAGlBA,EAAMpU,WACN+0E,EAAa3gE,EAAMpU,UAIvBqyE,GAAWj+D,EAAO,8DAGpB,SAASshE,GAAmBthE,EAAOsgE,GACjC,IACIO,EACAC,EACAS,EAEAtC,EAEAwB,EACAe,EACAC,EACAC,EACAC,EAEApC,EACAD,EACAE,EACA/H,EAhBAmK,GAAW,EAIXC,EAAW7hE,EAAM60D,IAEjBiN,EAAW9hE,EAAM+hE,OAMjB5C,EAAkB71E,OAAOiY,OAAO,MAQpC,GAFAk2D,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,EACF+J,EAAa,GACbG,GAAY,EACZ1C,EAAU,OACL,IAAW,MAAPxH,EAKT,OAAO,EAJP+J,EAAa,IACbG,GAAY,EACZ1C,EAAU,GAKS,OAAjBj/D,EAAM+hE,SACR/hE,EAAMgiE,UAAUhiE,EAAM+hE,QAAU9C,GAGlCxH,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAEpC,MAAc,IAAP6rE,EAAU,CAKf,GAJAuI,GAAoBhgE,GAAO,EAAMsgE,GAEjC7I,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAE9B6rE,IAAO+J,EAMT,OALAxhE,EAAMpU,WACNoU,EAAM60D,IAAMgN,EACZ7hE,EAAM+hE,OAASD,EACf9hE,EAAMgD,KAAO2+D,EAAY,UAAY,WACrC3hE,EAAM7U,OAAS8zE,GACR,EACG2C,EAEM,KAAPnK,GAETwG,GAAWj+D,EAAO,4CAHlBi+D,GAAWj+D,EAAO,gDAMpBs/D,EAASC,EAAUC,EAAY,KAC/BiC,EAASC,GAAiB,EAEf,KAAPjK,IACFgJ,EAAYzgE,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,GAEhDgxE,GAAa6D,KACfgB,EAASC,GAAiB,EAC1B1hE,EAAMpU,WACNo0E,GAAoBhgE,GAAO,EAAMsgE,KAIrCO,EAAQ7gE,EAAMlU,KACdg1E,EAAa9gE,EAAMrH,UACnB4oE,EAAOvhE,EAAMpU,SACbq2E,GAAYjiE,EAAOsgE,EAAYzE,IAAiB,GAAO,GACvDyD,EAASt/D,EAAM60D,IACf0K,EAAUv/D,EAAM7U,OAChB60E,GAAoBhgE,GAAO,EAAMsgE,GAEjC7I,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,WAE7B81E,GAAkB1hE,EAAMlU,OAAS+0E,GAAiB,KAAPpJ,IAC9CgK,GAAS,EACThK,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UACpCo0E,GAAoBhgE,GAAO,EAAMsgE,GACjC2B,GAAYjiE,EAAOsgE,EAAYzE,IAAiB,GAAO,GACvD2D,EAAYx/D,EAAM7U,QAGhBw2E,EACFtC,GAAiBr/D,EAAOi/D,EAASE,EAAiBG,EAAQC,EAASC,EAAWqB,EAAOC,EAAYS,GACxFE,EACTxC,EAAQp0E,KAAKw0E,GAAiBr/D,EAAO,KAAMm/D,EAAiBG,EAAQC,EAASC,EAAWqB,EAAOC,EAAYS,IAE3GtC,EAAQp0E,KAAK00E,GAGfS,GAAoBhgE,GAAO,EAAMsgE,GAEjC7I,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,GACFmK,GAAW,EACXnK,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,WAEpCg2E,GAAW,EAIf3D,GAAWj+D,EAAO,yDAGpB,SAASkiE,GAAgBliE,EAAOsgE,GAC9B,IAAII,EACAyB,EAOAd,EACA5J,EAPA2K,EAAiBnG,GACjBoG,GAAiB,EACjBC,GAAiB,EACjBC,EAAiBjC,EACjBkC,EAAiB,EACjBC,GAAiB,EAMrB,GAFAhL,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,MAAP6rE,EACF0K,GAAU,MACL,IAAW,KAAP1K,EAGT,OAAO,EAFP0K,GAAU,EAKZniE,EAAMgD,KAAO,SACbhD,EAAM7U,OAAS,GAEf,MAAc,IAAPssE,EAGL,GAFAA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAEzB,KAAP6rE,GAA6B,KAAPA,EACpBwE,KAAkBmG,EACpBA,EAAmB,KAAP3K,EAAsB0E,GAAgBD,GAElD+B,GAAWj+D,EAAO,4CAGf,OAAKqhE,EAAMpE,GAAgBxF,KAAQ,GAWxC,MAVY,IAAR4J,EACFpD,GAAWj+D,EAAO,gFACRsiE,EAIVrE,GAAWj+D,EAAO,8CAHlBuiE,EAAajC,EAAae,EAAM,EAChCiB,GAAiB,GAUvB,GAAI3F,GAAelF,GAAK,CACtB,GAAKA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,gBAClC+wE,GAAelF,IAEtB,GAAW,KAAPA,EACF,GAAKA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,iBACjC8wE,GAAOjF,IAAe,IAAPA,GAI3B,MAAc,IAAPA,EAAU,CACfsI,GAAc//D,GACdA,EAAM69D,WAAa,EAEnBpG,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAElC,QAAS02E,GAAkBtiE,EAAM69D,WAAa0E,IAC/B,KAAP9K,EACNz3D,EAAM69D,aACNpG,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAOtC,IAJK02E,GAAkBtiE,EAAM69D,WAAa0E,IACxCA,EAAaviE,EAAM69D,YAGjBnB,GAAOjF,GACT+K,QADF,CAMA,GAAIxiE,EAAM69D,WAAa0E,EAAY,CAG7BH,IAAajG,GACfn8D,EAAM7U,QAAU+nE,GAAO95C,OAAO,KAAMipD,EAAiB,EAAIG,EAAaA,GAC7DJ,IAAanG,IAClBoG,IACFriE,EAAM7U,QAAU,MAKpB,MAIEg3E,EAGExF,GAAelF,IACjBgL,GAAiB,EAEjBziE,EAAM7U,QAAU+nE,GAAO95C,OAAO,KAAMipD,EAAiB,EAAIG,EAAaA,IAG7DC,GACTA,GAAiB,EACjBziE,EAAM7U,QAAU+nE,GAAO95C,OAAO,KAAMopD,EAAa,IAGzB,IAAfA,EACLH,IACFriE,EAAM7U,QAAU,KAKlB6U,EAAM7U,QAAU+nE,GAAO95C,OAAO,KAAMopD,GAMtCxiE,EAAM7U,QAAU+nE,GAAO95C,OAAO,KAAMipD,EAAiB,EAAIG,EAAaA,GAGxEH,GAAiB,EACjBC,GAAiB,EACjBE,EAAa,EACb9B,EAAe1gE,EAAMpU,SAErB,OAAQ8wE,GAAOjF,IAAe,IAAPA,EACrBA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAGtCgzE,GAAe5+D,EAAO0gE,EAAc1gE,EAAMpU,UAAU,IAGtD,OAAO,EAGT,SAAS82E,GAAkB1iE,EAAOsgE,GAChC,IAAIO,EAIAJ,EAEAhJ,EALAoK,EAAY7hE,EAAM60D,IAClBiN,EAAY9hE,EAAM+hE,OAClB9C,EAAY,GAEZ0D,GAAY,EAKhB,IAA8B,IAA1B3iE,EAAM89D,eAAuB,OAAO,EAEnB,OAAjB99D,EAAM+hE,SACR/hE,EAAMgiE,UAAUhiE,EAAM+hE,QAAU9C,GAGlCxH,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAElC,MAAc,IAAP6rE,EAAU,CAMf,IAL8B,IAA1Bz3D,EAAM89D,iBACR99D,EAAMpU,SAAWoU,EAAM89D,eACvBG,GAAWj+D,EAAO,mDAGT,KAAPy3D,EACF,MAKF,GAFAgJ,EAAYzgE,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,IAE/CgxE,GAAa6D,GAChB,MAMF,GAHAkC,GAAW,EACX3iE,EAAMpU,WAEFo0E,GAAoBhgE,GAAO,GAAO,IAChCA,EAAM69D,YAAcyC,EACtBrB,EAAQp0E,KAAK,MACb4sE,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,eAYtC,GAPAi1E,EAAQ7gE,EAAMlU,KACdm2E,GAAYjiE,EAAOsgE,EAAYvE,IAAkB,GAAO,GACxDkD,EAAQp0E,KAAKmV,EAAM7U,QACnB60E,GAAoBhgE,GAAO,GAAO,GAElCy3D,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,WAE7BoU,EAAMlU,OAAS+0E,GAAS7gE,EAAM69D,WAAayC,IAAuB,IAAP7I,EAC9DwG,GAAWj+D,EAAO,4CACb,GAAIA,EAAM69D,WAAayC,EAC5B,MAIJ,QAAIqC,IACF3iE,EAAM60D,IAAMgN,EACZ7hE,EAAM+hE,OAASD,EACf9hE,EAAMgD,KAAO,WACbhD,EAAM7U,OAAS8zE,GACR,GAKX,SAAS2D,GAAiB5iE,EAAOsgE,EAAYuC,GAC3C,IAAIpC,EACAqC,EACAjC,EACAkC,EACAC,EACAC,EAUAxL,EATAoK,EAAgB7hE,EAAM60D,IACtBiN,EAAgB9hE,EAAM+hE,OACtB9C,EAAgB,GAChBE,EAAkB71E,OAAOiY,OAAO,MAChC+9D,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChB0D,GAAgB,EAChBP,GAAgB,EAKpB,IAA8B,IAA1B3iE,EAAM89D,eAAuB,OAAO,EAEnB,OAAjB99D,EAAM+hE,SACR/hE,EAAMgiE,UAAUhiE,EAAM+hE,QAAU9C,GAGlCxH,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAElC,MAAc,IAAP6rE,EAAU,CAaf,GAZKyL,IAA2C,IAA1BljE,EAAM89D,iBAC1B99D,EAAMpU,SAAWoU,EAAM89D,eACvBG,GAAWj+D,EAAO,mDAGpBygE,EAAYzgE,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,GACpDi1E,EAAQ7gE,EAAMlU,KAMF,KAAP2rE,GAA6B,KAAPA,IAAuBmF,GAAa6D,GA2BxD,CAKL,GAJAsC,EAAW/iE,EAAMlU,KACjBk3E,EAAgBhjE,EAAMrH,UACtBsqE,EAAUjjE,EAAMpU,UAEXq2E,GAAYjiE,EAAO6iE,EAAY/G,IAAkB,GAAO,GAG3D,MAGF,GAAI97D,EAAMlU,OAAS+0E,EAAO,CACxBpJ,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAElC,MAAO+wE,GAAelF,GACpBA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAGtC,GAAW,KAAP6rE,EACFA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAE/BgxE,GAAanF,IAChBwG,GAAWj+D,EAAO,2FAGhBkjE,IACF7D,GAAiBr/D,EAAOi/D,EAASE,EAAiBG,EAAQC,EAAS,KAAMwD,EAAUC,EAAeC,GAClG3D,EAASC,EAAUC,EAAY,MAGjCmD,GAAW,EACXO,GAAgB,EAChBJ,GAAe,EACfxD,EAASt/D,EAAM60D,IACf0K,EAAUv/D,EAAM7U,WAEX,KAAIw3E,EAMT,OAFA3iE,EAAM60D,IAAMgN,EACZ7hE,EAAM+hE,OAASD,GACR,EALP7D,GAAWj+D,EAAO,iEAQf,KAAI2iE,EAMT,OAFA3iE,EAAM60D,IAAMgN,EACZ7hE,EAAM+hE,OAASD,GACR,EALP7D,GAAWj+D,EAAO,wFAvET,KAAPy3D,GACEyL,IACF7D,GAAiBr/D,EAAOi/D,EAASE,EAAiBG,EAAQC,EAAS,KAAMwD,EAAUC,EAAeC,GAClG3D,EAASC,EAAUC,EAAY,MAGjCmD,GAAW,EACXO,GAAgB,EAChBJ,GAAe,GAENI,GAETA,GAAgB,EAChBJ,GAAe,GAGf7E,GAAWj+D,EAAO,qGAGpBA,EAAMpU,UAAY,EAClB6rE,EAAKgJ,EAuFP,IAxBIzgE,EAAMlU,OAAS+0E,GAAS7gE,EAAM69D,WAAayC,KACzC4C,IACFH,EAAW/iE,EAAMlU,KACjBk3E,EAAgBhjE,EAAMrH,UACtBsqE,EAAUjjE,EAAMpU,UAGdq2E,GAAYjiE,EAAOsgE,EAAYtE,IAAmB,EAAM8G,KACtDI,EACF3D,EAAUv/D,EAAM7U,OAEhBq0E,EAAYx/D,EAAM7U,QAIjB+3E,IACH7D,GAAiBr/D,EAAOi/D,EAASE,EAAiBG,EAAQC,EAASC,EAAWuD,EAAUC,EAAeC,GACvG3D,EAASC,EAAUC,EAAY,MAGjCQ,GAAoBhgE,GAAO,GAAO,GAClCy3D,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,YAG/BoU,EAAMlU,OAAS+0E,GAAS7gE,EAAM69D,WAAayC,IAAuB,IAAP7I,EAC9DwG,GAAWj+D,EAAO,2CACb,GAAIA,EAAM69D,WAAayC,EAC5B,MAqBJ,OAZI4C,GACF7D,GAAiBr/D,EAAOi/D,EAASE,EAAiBG,EAAQC,EAAS,KAAMwD,EAAUC,EAAeC,GAIhGN,IACF3iE,EAAM60D,IAAMgN,EACZ7hE,EAAM+hE,OAASD,EACf9hE,EAAMgD,KAAO,UACbhD,EAAM7U,OAAS8zE,GAGV0D,EAGT,SAASQ,GAAgBnjE,GACvB,IAAI8+D,EAGAsE,EACAv7D,EACA4vD,EAJA4L,GAAa,EACbC,GAAa,EAOjB,GAFA7L,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,EAAoB,OAAO,EAuB/B,GArBkB,OAAdz3D,EAAM60D,KACRoJ,GAAWj+D,EAAO,iCAGpBy3D,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAEzB,KAAP6rE,GACF4L,GAAa,EACb5L,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,WAEpB,KAAP6rE,GACT6L,GAAU,EACVF,EAAY,KACZ3L,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,WAGpCw3E,EAAY,IAGdtE,EAAY9+D,EAAMpU,SAEdy3E,EAAY,CACd,GAAK5L,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,gBAC3B,IAAP6rE,GAAmB,KAAPA,GAEfz3D,EAAMpU,SAAWoU,EAAMvV,QACzBod,EAAU7H,EAAM4a,MAAMjuB,MAAMmyE,EAAW9+D,EAAMpU,UAC7C6rE,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,WAEpCqyE,GAAWj+D,EAAO,0DAEf,CACL,MAAc,IAAPy3D,IAAamF,GAAanF,GAEpB,KAAPA,IACG6L,EAUHrF,GAAWj+D,EAAO,gDATlBojE,EAAYpjE,EAAM4a,MAAMjuB,MAAMmyE,EAAY,EAAG9+D,EAAMpU,SAAW,GAEzD2wE,GAAmBllE,KAAK+rE,IAC3BnF,GAAWj+D,EAAO,mDAGpBsjE,GAAU,EACVxE,EAAY9+D,EAAMpU,SAAW,IAMjC6rE,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAGtCic,EAAU7H,EAAM4a,MAAMjuB,MAAMmyE,EAAW9+D,EAAMpU,UAEzC0wE,GAAwBjlE,KAAKwQ,IAC/Bo2D,GAAWj+D,EAAO,uDAIlB6H,IAAY20D,GAAgBnlE,KAAKwQ,IACnCo2D,GAAWj+D,EAAO,4CAA8C6H,GAGlE,IACEA,EAAU3X,mBAAmB2X,GAC7B,MAAO82D,GACPV,GAAWj+D,EAAO,0BAA4B6H,GAmBhD,OAhBIw7D,EACFrjE,EAAM60D,IAAMhtD,EAEH+zD,GAAkBnyE,KAAKuW,EAAM0+D,OAAQ0E,GAC9CpjE,EAAM60D,IAAM70D,EAAM0+D,OAAO0E,GAAav7D,EAEf,MAAdu7D,EACTpjE,EAAM60D,IAAM,IAAMhtD,EAEK,OAAdu7D,EACTpjE,EAAM60D,IAAM,qBAAuBhtD,EAGnCo2D,GAAWj+D,EAAO,0BAA4BojE,EAAY,MAGrD,EAGT,SAASG,GAAmBvjE,GAC1B,IAAI8+D,EACArH,EAIJ,GAFAA,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,EAAoB,OAAO,EAEV,OAAjBz3D,EAAM+hE,QACR9D,GAAWj+D,EAAO,qCAGpBy3D,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UACpCkzE,EAAY9+D,EAAMpU,SAElB,MAAc,IAAP6rE,IAAamF,GAAanF,KAAQoF,GAAkBpF,GACzDA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAQtC,OALIoU,EAAMpU,WAAakzE,GACrBb,GAAWj+D,EAAO,8DAGpBA,EAAM+hE,OAAS/hE,EAAM4a,MAAMjuB,MAAMmyE,EAAW9+D,EAAMpU,WAC3C,EAGT,SAAS43E,GAAUxjE,GACjB,IAAI8+D,EAAWnK,EACX8C,EAIJ,GAFAA,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAEvB,KAAP6rE,EAAoB,OAAO,EAE/BA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UACpCkzE,EAAY9+D,EAAMpU,SAElB,MAAc,IAAP6rE,IAAamF,GAAanF,KAAQoF,GAAkBpF,GACzDA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAetC,OAZIoU,EAAMpU,WAAakzE,GACrBb,GAAWj+D,EAAO,6DAGpB20D,EAAQ30D,EAAM4a,MAAMjuB,MAAMmyE,EAAW9+D,EAAMpU,UAEtCgwE,GAAkBnyE,KAAKuW,EAAMgiE,UAAWrN,IAC3CsJ,GAAWj+D,EAAO,uBAAyB20D,EAAQ,KAGrD30D,EAAM7U,OAAS6U,EAAMgiE,UAAUrN,GAC/BqL,GAAoBhgE,GAAO,GAAO,IAC3B,EAGT,SAASiiE,GAAYjiE,EAAOyjE,EAAcC,EAAaC,EAAab,GAClE,IAAIc,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAxvE,EACAouE,EACAqB,EARAC,EAAe,EACfC,GAAa,EACbC,GAAa,EAmCjB,GA3BuB,OAAnBrkE,EAAM09D,UACR19D,EAAM09D,SAAS,OAAQ19D,GAGzBA,EAAM60D,IAAS,KACf70D,EAAM+hE,OAAS,KACf/hE,EAAMgD,KAAS,KACfhD,EAAM7U,OAAS,KAEfy4E,EAAmBC,EAAoBC,EACrC9H,KAAsB0H,GACtB3H,KAAsB2H,EAEpBC,GACE3D,GAAoBhgE,GAAO,GAAO,KACpCokE,GAAY,EAERpkE,EAAM69D,WAAa4F,EACrBU,EAAe,EACNnkE,EAAM69D,aAAe4F,EAC9BU,EAAe,EACNnkE,EAAM69D,WAAa4F,IAC5BU,GAAgB,IAKD,IAAjBA,EACF,MAAOhB,GAAgBnjE,IAAUujE,GAAmBvjE,GAC9CggE,GAAoBhgE,GAAO,GAAO,IACpCokE,GAAY,EACZN,EAAwBF,EAEpB5jE,EAAM69D,WAAa4F,EACrBU,EAAe,EACNnkE,EAAM69D,aAAe4F,EAC9BU,EAAe,EACNnkE,EAAM69D,WAAa4F,IAC5BU,GAAgB,IAGlBL,GAAwB,EAwD9B,GAnDIA,IACFA,EAAwBM,GAAatB,GAGlB,IAAjBqB,GAAsBnI,KAAsB0H,IAE5Cb,EADEhH,KAAoB6H,GAAe5H,KAAqB4H,EAC7CD,EAEAA,EAAe,EAG9BS,EAAclkE,EAAMpU,SAAWoU,EAAMrH,UAEhB,IAAjBwrE,EACEL,IACCpB,GAAkB1iE,EAAOkkE,IACzBtB,GAAiB5iE,EAAOkkE,EAAarB,KACtCvB,GAAmBthE,EAAO6iE,GAC5BwB,GAAa,GAERR,GAAqB3B,GAAgBliE,EAAO6iE,IAC7C5B,GAAuBjhE,EAAO6iE,IAC9B3B,GAAuBlhE,EAAO6iE,GAChCwB,GAAa,EAEJb,GAAUxjE,IACnBqkE,GAAa,EAEK,OAAdrkE,EAAM60D,KAAiC,OAAjB70D,EAAM+hE,QAC9B9D,GAAWj+D,EAAO,8CAGXqgE,GAAgBrgE,EAAO6iE,EAAYhH,KAAoB6H,KAChEW,GAAa,EAEK,OAAdrkE,EAAM60D,MACR70D,EAAM60D,IAAM,MAIK,OAAjB70D,EAAM+hE,SACR/hE,EAAMgiE,UAAUhiE,EAAM+hE,QAAU/hE,EAAM7U,SAGhB,IAAjBg5E,IAGTE,EAAaP,GAAyBpB,GAAkB1iE,EAAOkkE,KAIjD,OAAdlkE,EAAM60D,IACa,OAAjB70D,EAAM+hE,SACR/hE,EAAMgiE,UAAUhiE,EAAM+hE,QAAU/hE,EAAM7U,aAGnC,GAAkB,MAAd6U,EAAM60D,KAWf,IAJqB,OAAjB70D,EAAM7U,QAAkC,WAAf6U,EAAMgD,MACjCi7D,GAAWj+D,EAAO,oEAAsEA,EAAMgD,KAAO,KAGlG+gE,EAAY,EAAGC,EAAehkE,EAAM29D,cAAclzE,OAAQs5E,EAAYC,EAAcD,GAAa,EAGpG,GAFAtvE,EAAOuL,EAAM29D,cAAcoG,GAEvBtvE,EAAKP,QAAQ8L,EAAM7U,QAAS,CAC9B6U,EAAM7U,OAASsJ,EAAKiM,UAAUV,EAAM7U,QACpC6U,EAAM60D,IAAMpgE,EAAKogE,IACI,OAAjB70D,EAAM+hE,SACR/hE,EAAMgiE,UAAUhiE,EAAM+hE,QAAU/hE,EAAM7U,QAExC,YAGC,GAAkB,MAAd6U,EAAM60D,IAAa,CAC5B,GAAI+G,GAAkBnyE,KAAKuW,EAAM49D,QAAQ59D,EAAMgD,MAAQ,YAAahD,EAAM60D,KACxEpgE,EAAOuL,EAAM49D,QAAQ59D,EAAMgD,MAAQ,YAAYhD,EAAM60D,UAMrD,IAHApgE,EAAO,KACPwvE,EAAWjkE,EAAM49D,QAAQzI,MAAMn1D,EAAMgD,MAAQ,YAExC+gE,EAAY,EAAGC,EAAeC,EAASx5E,OAAQs5E,EAAYC,EAAcD,GAAa,EACzF,GAAI/jE,EAAM60D,IAAIloE,MAAM,EAAGs3E,EAASF,GAAWlP,IAAIpqE,UAAYw5E,EAASF,GAAWlP,IAAK,CAClFpgE,EAAOwvE,EAASF,GAChB,MAKDtvE,GACHwpE,GAAWj+D,EAAO,iBAAmBA,EAAM60D,IAAM,KAG9B,OAAjB70D,EAAM7U,QAAmBsJ,EAAKuO,OAAShD,EAAMgD,MAC/Ci7D,GAAWj+D,EAAO,gCAAkCA,EAAM60D,IAAM,wBAA0BpgE,EAAKuO,KAAO,WAAahD,EAAMgD,KAAO,KAG7HvO,EAAKP,QAAQ8L,EAAM7U,OAAQ6U,EAAM60D,MAGpC70D,EAAM7U,OAASsJ,EAAKiM,UAAUV,EAAM7U,OAAQ6U,EAAM60D,KAC7B,OAAjB70D,EAAM+hE,SACR/hE,EAAMgiE,UAAUhiE,EAAM+hE,QAAU/hE,EAAM7U,SAJxC8yE,GAAWj+D,EAAO,gCAAkCA,EAAM60D,IAAM,kBAYpE,OAHuB,OAAnB70D,EAAM09D,UACR19D,EAAM09D,SAAS,QAAS19D,GAEL,OAAdA,EAAM60D,KAAkC,OAAjB70D,EAAM+hE,QAAmBsC,EAGzD,SAASC,GAAatkE,GACpB,IACI8+D,EACAyF,EACAC,EAEA/M,EALAgN,EAAgBzkE,EAAMpU,SAItB84E,GAAgB,EAGpB1kE,EAAMimC,QAAU,KAChBjmC,EAAMw+D,gBAAkBx+D,EAAMy9D,OAC9Bz9D,EAAM0+D,OAASp1E,OAAOiY,OAAO,MAC7BvB,EAAMgiE,UAAY14E,OAAOiY,OAAO,MAEhC,MAAyD,KAAjDk2D,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,WAAkB,CAK1D,GAJAo0E,GAAoBhgE,GAAO,GAAO,GAElCy3D,EAAKz3D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAE9BoU,EAAM69D,WAAa,GAAY,KAAPpG,EAC1B,MAGFiN,GAAgB,EAChBjN,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UACpCkzE,EAAY9+D,EAAMpU,SAElB,MAAc,IAAP6rE,IAAamF,GAAanF,GAC/BA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAGtC24E,EAAgBvkE,EAAM4a,MAAMjuB,MAAMmyE,EAAW9+D,EAAMpU,UACnD44E,EAAgB,GAEZD,EAAc95E,OAAS,GACzBwzE,GAAWj+D,EAAO,gEAGpB,MAAc,IAAPy3D,EAAU,CACf,MAAOkF,GAAelF,GACpBA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAGtC,GAAW,KAAP6rE,EAAoB,CACtB,GAAKA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,gBAC3B,IAAP6rE,IAAaiF,GAAOjF,IAC3B,MAGF,GAAIiF,GAAOjF,GAAK,MAEhBqH,EAAY9+D,EAAMpU,SAElB,MAAc,IAAP6rE,IAAamF,GAAanF,GAC/BA,EAAKz3D,EAAM4a,MAAM3sB,aAAa+R,EAAMpU,UAGtC44E,EAAc35E,KAAKmV,EAAM4a,MAAMjuB,MAAMmyE,EAAW9+D,EAAMpU,WAG7C,IAAP6rE,GAAUsI,GAAc//D,GAExB47D,GAAkBnyE,KAAK00E,GAAmBoG,GAC5CpG,GAAkBoG,GAAevkE,EAAOukE,EAAeC,GAEvDtG,GAAal+D,EAAO,+BAAiCukE,EAAgB,KAIzEvE,GAAoBhgE,GAAO,GAAO,GAET,IAArBA,EAAM69D,YACyC,KAA/C79D,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,WACkB,KAA/CoU,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,IACO,KAA/CoU,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,SAAW,IAC1CoU,EAAMpU,UAAY,EAClBo0E,GAAoBhgE,GAAO,GAAO,IAEzB0kE,GACTzG,GAAWj+D,EAAO,mCAGpBiiE,GAAYjiE,EAAOA,EAAM69D,WAAa,EAAG7B,IAAmB,GAAO,GACnEgE,GAAoBhgE,GAAO,GAAO,GAE9BA,EAAMw+D,iBACNnC,GAA8BhlE,KAAK2I,EAAM4a,MAAMjuB,MAAM83E,EAAezkE,EAAMpU,YAC5EsyE,GAAal+D,EAAO,oDAGtBA,EAAM+9D,UAAUlzE,KAAKmV,EAAM7U,QAEvB6U,EAAMpU,WAAaoU,EAAMrH,WAAawnE,GAAsBngE,GAEf,KAA3CA,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,YAC/BoU,EAAMpU,UAAY,EAClBo0E,GAAoBhgE,GAAO,GAAO,IAKlCA,EAAMpU,SAAYoU,EAAMvV,OAAS,GACnCwzE,GAAWj+D,EAAO,yDAOtB,SAAS2kE,GAAc/pD,EAAOvqB,GAC5BuqB,EAAQhnB,OAAOgnB,GACfvqB,EAAUA,GAAW,GAEA,IAAjBuqB,EAAMnwB,SAGmC,KAAvCmwB,EAAM3sB,WAAW2sB,EAAMnwB,OAAS,IACO,KAAvCmwB,EAAM3sB,WAAW2sB,EAAMnwB,OAAS,KAClCmwB,GAAS,MAIiB,QAAxBA,EAAM3sB,WAAW,KACnB2sB,EAAQA,EAAMjuB,MAAM,KAIxB,IAAIqT,EAAQ,IAAIs9D,GAAQ1iD,EAAOvqB,GAE3Bu0E,EAAUhqD,EAAMluB,QAAQ,OAEX,IAAbk4E,IACF5kE,EAAMpU,SAAWg5E,EACjB3G,GAAWj+D,EAAO,sCAIpBA,EAAM4a,OAAS,KAEf,MAAkD,KAA3C5a,EAAM4a,MAAM3sB,WAAW+R,EAAMpU,UAClCoU,EAAM69D,YAAc,EACpB79D,EAAMpU,UAAY,EAGpB,MAAOoU,EAAMpU,SAAYoU,EAAMvV,OAAS,EACtC65E,GAAatkE,GAGf,OAAOA,EAAM+9D,UAIf,SAAS8G,GAAUjqD,EAAOkqD,EAAUz0E,GACjB,OAAby0E,GAAyC,kBAAbA,GAA4C,qBAAZz0E,IAC9DA,EAAUy0E,EACVA,EAAW,MAGb,IAAI/G,EAAY4G,GAAc/pD,EAAOvqB,GAErC,GAAwB,oBAAby0E,EACT,OAAO/G,EAGT,IAAK,IAAIvzE,EAAQ,EAAGC,EAASszE,EAAUtzE,OAAQD,EAAQC,EAAQD,GAAS,EACtEs6E,EAAS/G,EAAUvzE,IAKvB,SAASu6E,GAAOnqD,EAAOvqB,GACrB,IAAI0tE,EAAY4G,GAAc/pD,EAAOvqB,GAErC,GAAyB,IAArB0tE,EAAUtzE,OAAd,CAGO,GAAyB,IAArBszE,EAAUtzE,OACnB,OAAOszE,EAAU,GAEnB,MAAM,IAAI1yE,GAAU,6DAItB,IAAI25E,GAAYH,GACZI,GAAYF,GAEZG,GAAS,CACZC,QAASH,GACTI,KAAMH,IASHI,GAAkB/7E,OAAOC,UAAUC,SACnC87E,GAAkBh8E,OAAOC,UAAUmC,eAEnC65E,GAA4B,MAC5BC,GAA4B,EAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,GAC5BC,GAA4B,IAC5BC,GAA4B,IAC5BC,GAA4B,IAE5BC,GAAmB,CAEvBA,EAA2B,MAC3BA,EAA2B,MAC3BA,EAA2B,MAC3BA,EAA2B,MAC3BA,GAA2B,MAC3BA,GAA2B,MAC3BA,GAA2B,MAC3BA,GAA2B,MAC3BA,GAA2B,MAC3BA,GAA2B,MAC3BA,GAA2B,OAC3BA,IAA2B,MAC3BA,IAA2B,MAC3BA,KAA2B,MAC3BA,KAA2B,OAEvBC,GAA6B,CAC/B,IAAK,IAAK,MAAO,MAAO,MAAO,KAAM,KAAM,KAC3C,IAAK,IAAK,KAAM,KAAM,KAAM,MAAO,MAAO,OAGxCC,GAA2B,4CAE/B,SAASC,GAAgBl/C,EAAQv3B,GAC/B,IAAIvF,EAAQqJ,EAAMhK,EAAOC,EAAQoqE,EAAKl1C,EAAOlrB,EAE7C,GAAY,OAAR/D,EAAc,MAAO,GAKzB,IAHAvF,EAAS,GACTqJ,EAAOlL,OAAOkL,KAAK9D,GAEdlG,EAAQ,EAAGC,EAAS+J,EAAK/J,OAAQD,EAAQC,EAAQD,GAAS,EAC7DqqE,EAAMrgE,EAAKhK,GACXm1B,EAAQ/rB,OAAOlD,EAAImkE,IAEK,OAApBA,EAAIloE,MAAM,EAAG,KACfkoE,EAAM,qBAAuBA,EAAIloE,MAAM,IAEzC8H,EAAOwzB,EAAOquC,gBAAgB,YAAYzB,GAEtCpgE,GAAQ6wE,GAAgB77E,KAAKgL,EAAK2gE,aAAcz1C,KAClDA,EAAQlrB,EAAK2gE,aAAaz1C,IAG5Bx0B,EAAO0pE,GAAOl1C,EAGhB,OAAOx0B,EAGT,SAASi8E,GAAUltD,GACjB,IAAI3b,EAAQ2a,EAAQzuB,EAIpB,GAFA8T,EAAS2b,EAAU1wB,SAAS,IAAIgc,cAE5B0U,GAAa,IACfhB,EAAS,IACTzuB,EAAS,OACJ,GAAIyvB,GAAa,MACtBhB,EAAS,IACTzuB,EAAS,MACJ,MAAIyvB,GAAa,YAItB,MAAM,IAAI7uB,GAAU,iEAHpB6tB,EAAS,IACTzuB,EAAS,EAKX,MAAO,KAAOyuB,EAASg6C,GAAO95C,OAAO,IAAK3uB,EAAS8T,EAAO9T,QAAU8T,EAItE,IAAI8oE,GAAsB,EACtBC,GAAsB,EAE1B,SAASC,GAAMl3E,GACbzD,KAAKq7B,OAAgB53B,EAAQ,WAAasrE,GAC1C/uE,KAAK+2B,OAAgBrT,KAAK5Y,IAAI,EAAIrH,EAAQ,WAAa,GACvDzD,KAAK46E,cAAgBn3E,EAAQ,mBAAoB,EACjDzD,KAAK66E,YAAgBp3E,EAAQ,iBAAkB,EAC/CzD,KAAK86E,UAAiBxU,GAAOd,UAAU/hE,EAAQ,eAAiB,EAAIA,EAAQ,aAC5EzD,KAAK+6E,SAAgBR,GAAgBv6E,KAAKq7B,OAAQ53B,EAAQ,WAAa,MACvEzD,KAAKg7E,SAAgBv3E,EAAQ,cAAe,EAC5CzD,KAAKi7E,UAAgBx3E,EAAQ,cAAgB,GAC7CzD,KAAKk7E,OAAgBz3E,EAAQ,YAAa,EAC1CzD,KAAKm7E,aAAgB13E,EAAQ,kBAAmB,EAChDzD,KAAKo7E,aAAgB33E,EAAQ,kBAAmB,EAChDzD,KAAKq7E,YAA2C,MAA3B53E,EAAQ,eAAyBi3E,GAAsBD,GAC5Ez6E,KAAKs7E,YAAgB73E,EAAQ,iBAAkB,EAC/CzD,KAAKu7E,SAA+C,oBAAxB93E,EAAQ,YAA6BA,EAAQ,YAAc,KAEvFzD,KAAK+wE,cAAgB/wE,KAAKq7B,OAAOmuC,iBACjCxpE,KAAKw7E,cAAgBx7E,KAAKq7B,OAAOouC,iBAEjCzpE,KAAKioE,IAAM,KACXjoE,KAAKzB,OAAS,GAEdyB,KAAKy7E,WAAa,GAClBz7E,KAAK07E,eAAiB,KAIxB,SAASC,GAAahqE,EAAQiqE,GAC5B,IAII18E,EAJA28E,EAAMvV,GAAO95C,OAAO,IAAKovD,GACzB58E,EAAW,EACXvB,GAAQ,EACRc,EAAS,GAETV,EAAS8T,EAAO9T,OAEpB,MAAOmB,EAAWnB,EAChBJ,EAAOkU,EAAO7R,QAAQ,KAAMd,IACd,IAAVvB,GACFyB,EAAOyS,EAAO5R,MAAMf,GACpBA,EAAWnB,IAEXqB,EAAOyS,EAAO5R,MAAMf,EAAUvB,EAAO,GACrCuB,EAAWvB,EAAO,GAGhByB,EAAKrB,QAAmB,OAATqB,IAAeX,GAAUs9E,GAE5Ct9E,GAAUW,EAGZ,OAAOX,EAGT,SAASu9E,GAAiB1oE,EAAO2oE,GAC/B,MAAO,KAAOzV,GAAO95C,OAAO,IAAKpZ,EAAM2jB,OAASglD,GAGlD,SAASC,GAAsB5oE,EAAO4zD,GACpC,IAAIppE,EAAOC,EAAQgK,EAEnB,IAAKjK,EAAQ,EAAGC,EAASuV,EAAM29D,cAAclzE,OAAQD,EAAQC,EAAQD,GAAS,EAG5E,GAFAiK,EAAOuL,EAAM29D,cAAcnzE,GAEvBiK,EAAKP,QAAQ0/D,GACf,OAAO,EAIX,OAAO,EAIT,SAASiV,GAAaxR,GACpB,OAAOA,IAAMsO,IAActO,IAAMmO,GAOnC,SAASsD,GAAYzR,GACnB,OAAS,IAAWA,GAAKA,GAAK,KACrB,KAAWA,GAAKA,GAAK,OAAmB,OAANA,GAAsB,OAANA,GAClD,OAAWA,GAAKA,GAAK,OAAaA,IAAMkO,IACxC,OAAWlO,GAAKA,GAAK,QAQhC,SAAS0R,GAAqB1R,GAC5B,OAAOyR,GAAYzR,IACdA,IAAMkO,IAENlO,IAAMqO,IACNrO,IAAMoO,GAYb,SAASuD,GAAY3R,EAAG4R,EAAMC,GAC5B,IAAIC,EAAwBJ,GAAqB1R,GAC7C+R,EAAYD,IAA0BN,GAAaxR,GACvD,OAEE6R,EACEC,EACEA,GAEG9R,IAAM8O,IACN9O,IAAMqP,IACNrP,IAAMsP,IACNtP,IAAMwP,IACNxP,IAAM0P,KAGV1P,IAAMyO,MACJmD,IAAS5C,KAAe+C,IACzBL,GAAqBE,KAAUJ,GAAaI,IAAS5R,IAAMyO,IAC3DmD,IAAS5C,IAAc+C,EAI/B,SAASC,GAAiBhS,GAIxB,OAAOyR,GAAYzR,IAAMA,IAAMkO,KACzBsD,GAAaxR,IAGdA,IAAM+O,IACN/O,IAAMmP,IACNnP,IAAMgP,IACNhP,IAAM8O,IACN9O,IAAMqP,IACNrP,IAAMsP,IACNtP,IAAMwP,IACNxP,IAAM0P,IAEN1P,IAAMyO,IACNzO,IAAM2O,IACN3O,IAAM6O,IACN7O,IAAMuO,IACNvO,IAAMyP,IACNzP,IAAMiP,IACNjP,IAAMkP,IACNlP,IAAM4O,IACN5O,IAAMwO,IAENxO,IAAM0O,IACN1O,IAAMoP,IACNpP,IAAMuP,GAIb,SAAS0C,GAAgBjS,GAEvB,OAAQwR,GAAaxR,IAAMA,IAAMgP,GAInC,SAASt5C,GAAYxuB,EAAQvS,GAC3B,IAAoCqtE,EAAhCkQ,EAAQhrE,EAAOtQ,WAAWjC,GAC9B,OAAIu9E,GAAS,OAAUA,GAAS,OAAUv9E,EAAM,EAAIuS,EAAO9T,SACzD4uE,EAAS96D,EAAOtQ,WAAWjC,EAAM,GAC7BqtE,GAAU,OAAUA,GAAU,OAEN,MAAlBkQ,EAAQ,OAAkBlQ,EAAS,MAAS,MAGjDkQ,EAIT,SAASC,GAAoBjrE,GAC3B,IAAIkrE,EAAiB,QACrB,OAAOA,EAAepyE,KAAKkH,GAG7B,IAAImrE,GAAgB,EAChBC,GAAgB,EAChBC,GAAgB,EAChBC,GAAgB,EAChBC,GAAgB,EASpB,SAASC,GAAkBxrE,EAAQyrE,EAAgBC,EAAgBpC,EACjEqC,EAAmBjC,EAAaC,EAAagB,GAE7C,IAAI7U,EACAhqD,EAAO,EACP8/D,EAAW,KACXC,GAAe,EACfC,GAAkB,EAClBC,GAAkC,IAAfzC,EACnB0C,GAAqB,EACrBC,EAAQnB,GAAiBt8C,GAAYxuB,EAAQ,KACtC+qE,GAAgBv8C,GAAYxuB,EAAQA,EAAO9T,OAAS,IAE/D,GAAIu/E,GAAkB9B,EAGpB,IAAK7T,EAAI,EAAGA,EAAI91D,EAAO9T,OAAQ4f,GAAQ,MAAUgqD,GAAK,EAAIA,IAAK,CAE7D,GADAhqD,EAAO0iB,GAAYxuB,EAAQ81D,IACtByU,GAAYz+D,GACf,OAAOy/D,GAETU,EAAQA,GAASxB,GAAY3+D,EAAM8/D,EAAUjB,GAC7CiB,EAAW9/D,MAER,CAEL,IAAKgqD,EAAI,EAAGA,EAAI91D,EAAO9T,OAAQ4f,GAAQ,MAAUgqD,GAAK,EAAIA,IAAK,CAE7D,GADAhqD,EAAO0iB,GAAYxuB,EAAQ81D,GACvBhqD,IAASo7D,GACX2E,GAAe,EAEXE,IACFD,EAAkBA,GAEfhW,EAAIkW,EAAoB,EAAI1C,GACM,MAAlCtpE,EAAOgsE,EAAoB,GAC9BA,EAAoBlW,QAEjB,IAAKyU,GAAYz+D,GACtB,OAAOy/D,GAETU,EAAQA,GAASxB,GAAY3+D,EAAM8/D,EAAUjB,GAC7CiB,EAAW9/D,EAGbggE,EAAkBA,GAAoBC,GACnCjW,EAAIkW,EAAoB,EAAI1C,GACM,MAAlCtpE,EAAOgsE,EAAoB,GAKhC,OAAKH,GAAiBC,EASlBJ,EAAiB,GAAKT,GAAoBjrE,GACrCurE,GAIJ5B,EAGED,IAAgBX,GAAsBwC,GAAeH,GAFnDU,EAAkBR,GAAeD,IAZpCY,GAAUtC,GAAgBgC,EAAkB3rE,GAGzC0pE,IAAgBX,GAAsBwC,GAAeH,GAFnDD,GAsBb,SAASe,GAAYzqE,EAAOzB,EAAQoqE,EAAO+B,EAAOxB,GAChDlpE,EAAM2qE,KAAQ,WACZ,GAAsB,IAAlBpsE,EAAO9T,OACT,OAAOuV,EAAMioE,cAAgBX,GAAsB,KAAO,KAE5D,IAAKtnE,EAAM+nE,gBAC2C,IAAhDd,GAA2Bv6E,QAAQ6R,IAAkB2oE,GAAyB7vE,KAAKkH,IACrF,OAAOyB,EAAMioE,cAAgBX,GAAuB,IAAM/oE,EAAS,IAAQ,IAAMA,EAAS,IAI9F,IAAIolB,EAAS3jB,EAAM2jB,OAASrT,KAAK5Y,IAAI,EAAGixE,GAQpCd,GAAiC,IAArB7nE,EAAM6nE,WACjB,EAAIv3D,KAAK5Y,IAAI4Y,KAAK0N,IAAIhe,EAAM6nE,UAAW,IAAK7nE,EAAM6nE,UAAYlkD,GAG/DqmD,EAAiBU,GAEf1qE,EAAM0nE,WAAa,GAAKiB,GAAS3oE,EAAM0nE,UAC7C,SAASkD,EAAcrsE,GACrB,OAAOqqE,GAAsB5oE,EAAOzB,GAGtC,OAAQwrE,GAAkBxrE,EAAQyrE,EAAgBhqE,EAAM2jB,OAAQkkD,EAC9D+C,EAAe5qE,EAAMioE,YAAajoE,EAAMkoE,cAAgBwC,EAAOxB,IAE/D,KAAKQ,GACH,OAAOnrE,EACT,KAAKorE,GACH,MAAO,IAAMprE,EAAO+G,QAAQ,KAAM,MAAQ,IAC5C,KAAKskE,GACH,MAAO,IAAMiB,GAAYtsE,EAAQyB,EAAM2jB,QACnCmnD,GAAkBvC,GAAahqE,EAAQolB,IAC7C,KAAKkmD,GACH,MAAO,IAAMgB,GAAYtsE,EAAQyB,EAAM2jB,QACnCmnD,GAAkBvC,GAAawC,GAAWxsE,EAAQspE,GAAYlkD,IACpE,KAAKmmD,GACH,MAAO,IAAMkB,GAAazsE,GAAU,IACtC,QACE,MAAM,IAAIlT,GAAU,2CA7Cb,GAmDf,SAASw/E,GAAYtsE,EAAQ0rE,GAC3B,IAAIgB,EAAkBzB,GAAoBjrE,GAAU3K,OAAOq2E,GAAkB,GAGzEn8B,EAA8C,OAA9BvvC,EAAOA,EAAO9T,OAAS,GACvCygF,EAAOp9B,IAAuC,OAA9BvvC,EAAOA,EAAO9T,OAAS,IAA0B,OAAX8T,GACtD4sE,EAAQD,EAAO,IAAOp9B,EAAO,GAAK,IAEtC,OAAOm9B,EAAkBE,EAAQ,KAInC,SAASL,GAAkBvsE,GACzB,MAAqC,OAA9BA,EAAOA,EAAO9T,OAAS,GAAc8T,EAAO5R,MAAM,GAAI,GAAK4R,EAKpE,SAASwsE,GAAWxsE,EAAQglC,GAK1B,IAWI6nC,EAGAl7D,EAdAm7D,EAAS,iBAGTlgF,EAAU,WACZ,IAAImgF,EAAS/sE,EAAO7R,QAAQ,MAG5B,OAFA4+E,GAAqB,IAAZA,EAAgBA,EAAS/sE,EAAO9T,OACzC4gF,EAAOj7D,UAAYk7D,EACZC,GAAShtE,EAAO5R,MAAM,EAAG2+E,GAAS/nC,GAJ9B,GAOTioC,EAAiC,OAAdjtE,EAAO,IAA6B,MAAdA,EAAO,GAKpD,MAAQ2R,EAAQm7D,EAAOh7D,KAAK9R,GAAU,CACpC,IAAIzG,EAASoY,EAAM,GAAIpkB,EAAOokB,EAAM,GACpCk7D,EAA4B,MAAZt/E,EAAK,GACrBX,GAAU2M,GACJ0zE,GAAqBJ,GAAyB,KAATt/E,EAC9B,GAAP,MACFy/E,GAASz/E,EAAMy3C,GACnBioC,EAAmBJ,EAGrB,OAAOjgF,EAOT,SAASogF,GAASz/E,EAAMy3C,GACtB,GAAa,KAATz3C,GAA2B,MAAZA,EAAK,GAAY,OAAOA,EAG3C,IACIokB,EAEWhkB,EAHXu/E,EAAU,SAGVx/E,EAAQ,EAAQy/E,EAAO,EAAGrhF,EAAO,EACjCc,EAAS,GAMb,MAAQ+kB,EAAQu7D,EAAQp7D,KAAKvkB,GAC3BzB,EAAO6lB,EAAM1lB,MAETH,EAAO4B,EAAQs3C,IACjBr3C,EAAOw/E,EAAOz/E,EAASy/E,EAAOrhF,EAC9Bc,GAAU,KAAOW,EAAKa,MAAMV,EAAOC,GAEnCD,EAAQC,EAAM,GAEhBw/E,EAAOrhF,EAaT,OARAc,GAAU,KAENW,EAAKrB,OAASwB,EAAQs3C,GAASmoC,EAAOz/E,EACxCd,GAAUW,EAAKa,MAAMV,EAAOy/E,GAAQ,KAAO5/E,EAAKa,MAAM++E,EAAO,GAE7DvgF,GAAUW,EAAKa,MAAMV,GAGhBd,EAAOwB,MAAM,GAItB,SAASq+E,GAAazsE,GAKpB,IAJA,IAEIotE,EAFAxgF,EAAS,GACTkf,EAAO,EAGFgqD,EAAI,EAAGA,EAAI91D,EAAO9T,OAAQ4f,GAAQ,MAAUgqD,GAAK,EAAIA,IAC5DhqD,EAAO0iB,GAAYxuB,EAAQ81D,GAC3BsX,EAAY3E,GAAiB38D,IAExBshE,GAAa7C,GAAYz+D,IAC5Blf,GAAUoT,EAAO81D,GACbhqD,GAAQ,QAASlf,GAAUoT,EAAO81D,EAAI,KAE1ClpE,GAAUwgF,GAAavE,GAAU/8D,GAIrC,OAAOlf,EAGT,SAASygF,GAAkB5rE,EAAO2oE,EAAOrjC,GACvC,IAEI96C,EACAC,EACApB,EAJA41E,EAAU,GACV4C,EAAU7hE,EAAM60D,IAKpB,IAAKrqE,EAAQ,EAAGC,EAAS66C,EAAO76C,OAAQD,EAAQC,EAAQD,GAAS,EAC/DnB,EAAQi8C,EAAO96C,GAEXwV,EAAMmoE,WACR9+E,EAAQ2W,EAAMmoE,SAAS1+E,KAAK67C,EAAQ1xC,OAAOpJ,GAAQnB,KAIjDwiF,GAAU7rE,EAAO2oE,EAAOt/E,GAAO,GAAO,IACpB,qBAAVA,GACPwiF,GAAU7rE,EAAO2oE,EAAO,MAAM,GAAO,MAExB,KAAZ1J,IAAgBA,GAAW,KAAQj/D,EAAMgoE,aAAqB,GAAN,MAC5D/I,GAAWj/D,EAAM2qE,MAIrB3qE,EAAM60D,IAAMgN,EACZ7hE,EAAM2qE,KAAO,IAAM1L,EAAU,IAG/B,SAAS6M,GAAmB9rE,EAAO2oE,EAAOrjC,EAAQf,GAChD,IAEI/5C,EACAC,EACApB,EAJA41E,EAAU,GACV4C,EAAU7hE,EAAM60D,IAKpB,IAAKrqE,EAAQ,EAAGC,EAAS66C,EAAO76C,OAAQD,EAAQC,EAAQD,GAAS,EAC/DnB,EAAQi8C,EAAO96C,GAEXwV,EAAMmoE,WACR9+E,EAAQ2W,EAAMmoE,SAAS1+E,KAAK67C,EAAQ1xC,OAAOpJ,GAAQnB,KAIjDwiF,GAAU7rE,EAAO2oE,EAAQ,EAAGt/E,GAAO,GAAM,GAAM,GAAO,IACpC,qBAAVA,GACPwiF,GAAU7rE,EAAO2oE,EAAQ,EAAG,MAAM,GAAM,GAAM,GAAO,MAEnDpkC,GAAuB,KAAZ06B,IACdA,GAAWyJ,GAAiB1oE,EAAO2oE,IAGjC3oE,EAAM2qE,MAAQlF,KAAmBzlE,EAAM2qE,KAAK18E,WAAW,GACzDgxE,GAAW,IAEXA,GAAW,KAGbA,GAAWj/D,EAAM2qE,MAIrB3qE,EAAM60D,IAAMgN,EACZ7hE,EAAM2qE,KAAO1L,GAAW,KAG1B,SAAS8M,GAAiB/rE,EAAO2oE,EAAOrjC,GACtC,IAGI96C,EACAC,EACAuhF,EACAC,EACAC,EAPAjN,EAAgB,GAChB4C,EAAgB7hE,EAAM60D,IACtBsX,EAAgB7iF,OAAOkL,KAAK8wC,GAOhC,IAAK96C,EAAQ,EAAGC,EAAS0hF,EAAc1hF,OAAQD,EAAQC,EAAQD,GAAS,EAEtE0hF,EAAa,GACG,KAAZjN,IAAgBiN,GAAc,MAE9BlsE,EAAMgoE,eAAckE,GAAc,KAEtCF,EAAYG,EAAc3hF,GAC1ByhF,EAAc3mC,EAAO0mC,GAEjBhsE,EAAMmoE,WACR8D,EAAcjsE,EAAMmoE,SAAS1+E,KAAK67C,EAAQ0mC,EAAWC,IAGlDJ,GAAU7rE,EAAO2oE,EAAOqD,GAAW,GAAO,KAI3ChsE,EAAM2qE,KAAKlgF,OAAS,OAAMyhF,GAAc,MAE5CA,GAAclsE,EAAM2qE,MAAQ3qE,EAAMgoE,aAAe,IAAM,IAAM,KAAOhoE,EAAMgoE,aAAe,GAAK,KAEzF6D,GAAU7rE,EAAO2oE,EAAOsD,GAAa,GAAO,KAIjDC,GAAclsE,EAAM2qE,KAGpB1L,GAAWiN,IAGblsE,EAAM60D,IAAMgN,EACZ7hE,EAAM2qE,KAAO,IAAM1L,EAAU,IAG/B,SAASmN,GAAkBpsE,EAAO2oE,EAAOrjC,EAAQf,GAC/C,IAGI/5C,EACAC,EACAuhF,EACAC,EACAI,EACAH,EARAjN,EAAgB,GAChB4C,EAAgB7hE,EAAM60D,IACtBsX,EAAgB7iF,OAAOkL,KAAK8wC,GAShC,IAAuB,IAAnBtlC,EAAM4nE,SAERuE,EAAcnxD,YACT,GAA8B,oBAAnBhb,EAAM4nE,SAEtBuE,EAAcnxD,KAAKhb,EAAM4nE,eACpB,GAAI5nE,EAAM4nE,SAEf,MAAM,IAAIv8E,GAAU,4CAGtB,IAAKb,EAAQ,EAAGC,EAAS0hF,EAAc1hF,OAAQD,EAAQC,EAAQD,GAAS,EACtE0hF,EAAa,GAER3nC,GAAuB,KAAZ06B,IACdiN,GAAcxD,GAAiB1oE,EAAO2oE,IAGxCqD,EAAYG,EAAc3hF,GAC1ByhF,EAAc3mC,EAAO0mC,GAEjBhsE,EAAMmoE,WACR8D,EAAcjsE,EAAMmoE,SAAS1+E,KAAK67C,EAAQ0mC,EAAWC,IAGlDJ,GAAU7rE,EAAO2oE,EAAQ,EAAGqD,GAAW,GAAM,GAAM,KAIxDK,EAA8B,OAAdrsE,EAAM60D,KAA8B,MAAd70D,EAAM60D,KAC5B70D,EAAM2qE,MAAQ3qE,EAAM2qE,KAAKlgF,OAAS,KAE9C4hF,IACErsE,EAAM2qE,MAAQlF,KAAmBzlE,EAAM2qE,KAAK18E,WAAW,GACzDi+E,GAAc,IAEdA,GAAc,MAIlBA,GAAclsE,EAAM2qE,KAEhB0B,IACFH,GAAcxD,GAAiB1oE,EAAO2oE,IAGnCkD,GAAU7rE,EAAO2oE,EAAQ,EAAGsD,GAAa,EAAMI,KAIhDrsE,EAAM2qE,MAAQlF,KAAmBzlE,EAAM2qE,KAAK18E,WAAW,GACzDi+E,GAAc,IAEdA,GAAc,KAGhBA,GAAclsE,EAAM2qE,KAGpB1L,GAAWiN,IAGblsE,EAAM60D,IAAMgN,EACZ7hE,EAAM2qE,KAAO1L,GAAW,KAG1B,SAASqN,GAAWtsE,EAAOslC,EAAQ2wB,GACjC,IAAIgJ,EAASgF,EAAUz5E,EAAOC,EAAQgK,EAAMkrB,EAI5C,IAFAskD,EAAWhO,EAAWj2D,EAAMooE,cAAgBpoE,EAAM29D,cAE7CnzE,EAAQ,EAAGC,EAASw5E,EAASx5E,OAAQD,EAAQC,EAAQD,GAAS,EAGjE,GAFAiK,EAAOwvE,EAASz5E,IAEXiK,EAAKqgE,YAAergE,EAAKsgE,cACxBtgE,EAAKqgE,YAAkC,kBAAXxvB,GAAyBA,aAAkB7wC,EAAKqgE,eAC5ErgE,EAAKsgE,WAActgE,EAAKsgE,UAAUzvB,IAAU,CAYhD,GAVI2wB,EACExhE,EAAK0gE,OAAS1gE,EAAKwgE,cACrBj1D,EAAM60D,IAAMpgE,EAAKwgE,cAAc3vB,GAE/BtlC,EAAM60D,IAAMpgE,EAAKogE,IAGnB70D,EAAM60D,IAAM,IAGVpgE,EAAKugE,UAAW,CAGlB,GAFAr1C,EAAQ3f,EAAM2nE,SAASlzE,EAAKogE,MAAQpgE,EAAKygE,aAEF,sBAAnCmQ,GAAU57E,KAAKgL,EAAKugE,WACtBiK,EAAUxqE,EAAKugE,UAAU1vB,EAAQ3lB,OAC5B,KAAI2lD,GAAgB77E,KAAKgL,EAAKugE,UAAWr1C,GAG9C,MAAM,IAAIt0B,GAAU,KAAOoJ,EAAKogE,IAAM,+BAAiCl1C,EAAQ,WAF/Es/C,EAAUxqE,EAAKugE,UAAUr1C,GAAO2lB,EAAQ3lB,GAK1C3f,EAAM2qE,KAAO1L,EAGf,OAAO,EAIX,OAAO,EAMT,SAAS4M,GAAU7rE,EAAO2oE,EAAOrjC,EAAQinC,EAAOhoC,EAASmmC,EAAO8B,GAC9DxsE,EAAM60D,IAAM,KACZ70D,EAAM2qE,KAAOrlC,EAERgnC,GAAWtsE,EAAOslC,GAAQ,IAC7BgnC,GAAWtsE,EAAOslC,GAAQ,GAG5B,IAEImnC,EAFAh4E,EAAO4wE,GAAU57E,KAAKuW,EAAM2qE,MAC5BzB,EAAUqD,EAGVA,IACFA,EAASvsE,EAAM0nE,UAAY,GAAK1nE,EAAM0nE,UAAYiB,GAGpD,IACI+D,EACAC,EAFAC,EAAyB,oBAATn4E,GAAuC,mBAATA,EAalD,GATIm4E,IACFF,EAAiB1sE,EAAMqoE,WAAW37E,QAAQ44C,GAC1CqnC,GAAgC,IAApBD,IAGK,OAAd1sE,EAAM60D,KAA8B,MAAd70D,EAAM60D,KAAgB8X,GAA+B,IAAjB3sE,EAAM2jB,QAAgBglD,EAAQ,KAC3FpkC,GAAU,GAGRooC,GAAa3sE,EAAMsoE,eAAeoE,GACpC1sE,EAAM2qE,KAAO,QAAU+B,MAClB,CAIL,GAHIE,GAAiBD,IAAc3sE,EAAMsoE,eAAeoE,KACtD1sE,EAAMsoE,eAAeoE,IAAkB,GAE5B,oBAATj4E,EACE83E,GAA6C,IAAnCjjF,OAAOkL,KAAKwL,EAAM2qE,MAAMlgF,QACpC2hF,GAAkBpsE,EAAO2oE,EAAO3oE,EAAM2qE,KAAMpmC,GACxCooC,IACF3sE,EAAM2qE,KAAO,QAAU+B,EAAiB1sE,EAAM2qE,QAGhDoB,GAAiB/rE,EAAO2oE,EAAO3oE,EAAM2qE,MACjCgC,IACF3sE,EAAM2qE,KAAO,QAAU+B,EAAiB,IAAM1sE,EAAM2qE,YAGnD,GAAa,mBAATl2E,EACL83E,GAAgC,IAAtBvsE,EAAM2qE,KAAKlgF,QACnBuV,EAAMwnE,gBAAkBgF,GAAc7D,EAAQ,EAChDmD,GAAmB9rE,EAAO2oE,EAAQ,EAAG3oE,EAAM2qE,KAAMpmC,GAEjDunC,GAAmB9rE,EAAO2oE,EAAO3oE,EAAM2qE,KAAMpmC,GAE3CooC,IACF3sE,EAAM2qE,KAAO,QAAU+B,EAAiB1sE,EAAM2qE,QAGhDiB,GAAkB5rE,EAAO2oE,EAAO3oE,EAAM2qE,MAClCgC,IACF3sE,EAAM2qE,KAAO,QAAU+B,EAAiB,IAAM1sE,EAAM2qE,WAGnD,IAAa,oBAATl2E,EAIJ,IAAa,uBAATA,EACT,OAAO,EAEP,GAAIuL,EAAMynE,YAAa,OAAO,EAC9B,MAAM,IAAIp8E,GAAU,0CAA4CoJ,GAP9C,MAAduL,EAAM60D,KACR4V,GAAYzqE,EAAOA,EAAM2qE,KAAMhC,EAAO+B,EAAOxB,GAS/B,OAAdlpE,EAAM60D,KAA8B,MAAd70D,EAAM60D,MAc9B4X,EAASI,UACU,MAAjB7sE,EAAM60D,IAAI,GAAa70D,EAAM60D,IAAIloE,MAAM,GAAKqT,EAAM60D,KAClDvvD,QAAQ,KAAM,OAGdmnE,EADmB,MAAjBzsE,EAAM60D,IAAI,GACH,IAAM4X,EACkB,uBAAxBA,EAAO9/E,MAAM,EAAG,IAChB,KAAO8/E,EAAO9/E,MAAM,IAEpB,KAAO8/E,EAAS,IAG3BzsE,EAAM2qE,KAAO8B,EAAS,IAAMzsE,EAAM2qE,MAItC,OAAO,EAGT,SAASmC,GAAuBxnC,EAAQtlC,GACtC,IAEIxV,EACAC,EAHAsiF,EAAU,GACVC,EAAoB,GAMxB,IAFAC,GAAY3nC,EAAQynC,EAASC,GAExBxiF,EAAQ,EAAGC,EAASuiF,EAAkBviF,OAAQD,EAAQC,EAAQD,GAAS,EAC1EwV,EAAMqoE,WAAWx9E,KAAKkiF,EAAQC,EAAkBxiF,KAElDwV,EAAMsoE,eAAiB,IAAIx1E,MAAMrI,GAGnC,SAASwiF,GAAY3nC,EAAQynC,EAASC,GACpC,IAAIb,EACA3hF,EACAC,EAEJ,GAAe,OAAX66C,GAAqC,kBAAXA,EAE5B,GADA96C,EAAQuiF,EAAQrgF,QAAQ44C,IACT,IAAX96C,GACwC,IAAtCwiF,EAAkBtgF,QAAQlC,IAC5BwiF,EAAkBniF,KAAKL,QAKzB,GAFAuiF,EAAQliF,KAAKy6C,GAETxyC,MAAMC,QAAQuyC,GAChB,IAAK96C,EAAQ,EAAGC,EAAS66C,EAAO76C,OAAQD,EAAQC,EAAQD,GAAS,EAC/DyiF,GAAY3nC,EAAO96C,GAAQuiF,EAASC,QAKtC,IAFAb,EAAgB7iF,OAAOkL,KAAK8wC,GAEvB96C,EAAQ,EAAGC,EAAS0hF,EAAc1hF,OAAQD,EAAQC,EAAQD,GAAS,EACtEyiF,GAAY3nC,EAAO6mC,EAAc3hF,IAASuiF,EAASC,GAO7D,SAASE,GAAOtyD,EAAOvqB,GACrBA,EAAUA,GAAW,GAErB,IAAI2P,EAAQ,IAAIunE,GAAMl3E,GAEjB2P,EAAM8nE,QAAQgF,GAAuBlyD,EAAO5a,GAEjD,IAAI3W,EAAQuxB,EAMZ,OAJI5a,EAAMmoE,WACR9+E,EAAQ2W,EAAMmoE,SAAS1+E,KAAK,CAAE,GAAIJ,GAAS,GAAIA,IAG7CwiF,GAAU7rE,EAAO,EAAG3W,GAAO,GAAM,GAAc2W,EAAM2qE,KAAO,KAEzD,GAGT,IAAIwC,GAASD,GAETE,GAAS,CACZzC,KAAMwC,IAGP,SAASE,GAAQ/3E,EAAM2gD,GACrB,OAAO,WACL,MAAM,IAAIzqD,MAAM,iBAAmB8J,EAAnB,sCACA2gD,EAAK,4CAKzB,IAMImvB,GAAsBF,GAAOE,KACPF,GAAOC,QACPiI,GAAOzC,KAqBP0C,GAAQ,WAAY,QACpBA,GAAQ,cAAe,WACvBA,GAAQ,WAAY,QC5sHvC,MAAMC,IAAmB,QAAY,WAAY,CACpDttE,MAAO,KAAM,CAAGutE,WAAY,IAAIC,MAEhCC,QAAS,CACLr1C,WAAWhU,GACP,MAAMspD,EAAK,QACLC,EAAOD,EAAG,KAAKtpD,aACfwpD,QAAWhtD,KACZ72B,IAAIqlC,IACJrlC,IAAIkoE,IACJloE,IAAI2nC,IACJ3nC,IAAI,KAAyB,CAAEqmC,KAAMg1C,KACrCr7E,KAAI,IAAM,CAACqK,EAAY/G,KACpB,IAAK,MAAM4rB,KAAS7kB,EAAKY,SACrB,GAAkB,aAAdikB,EAAMxkB,KAAqB,CAC3B,MAAMo5E,EAAW50D,EACZjkB,SAAS,GACR+wC,EAAU8nC,EAASxkF,MACzBgE,EAAKiD,KAAKy1C,QAAUA,EAAQ+nC,SAAS,KAC/B/nC,EAAQp5C,MAAM,GAAI,GAClBo5C,EACN,UAIX9zC,QAAQ07E,GACPI,EAAcH,EAAGt9E,KACjB09E,EAAuB,CACzB5pD,GAAAA,EACAnsB,QAAS21E,EAAGpkF,cACTukF,EACHviE,MAAO,CACHyiE,MAAOP,EAAG,KAAKtpD,cACf8pD,KAAMR,EAAG,KAAKtpD,gBAItB,OADAx3B,KAAK2gF,WAAW7R,IAAIt3C,EAAI4pD,GACjBA,GAGX51C,gBACI,MAAMs1C,EAAK,QACLS,GAAc,OAAeT,EAAGl5E,QAEtC,aAAalJ,QAAQqK,IACjBw4E,EAAY,GAAGn5E,SAAStE,KAAI0nC,MAAAA,GACxBxrC,KAAKw4E,KAAKgJ,EAAWvhF,WAKrCwhF,QAAS,CACLC,WACI,MAAO,IAAI1hF,KAAK2gF,WAAWvjF,e,uHC1F3BukF,E,qBAAZ,SAAYA,GACR,0BACA,uBAFJ,CAAYA,IAAAA,EAAW,KAYvB,MAAMC,EAAoDC,GAAYA,EAChEA,EAAOD,EAAW,CACpBE,GAAI,CACA7hF,KAAM,aACN4H,KAAM,aACNk6E,YAAaJ,EAAYK,MAE7BC,OAAQ,CACJhiF,KAAM,SACN4H,KAAM,aACNk6E,YAAaJ,EAAYK,MAE7BE,IAAK,CAAEjiF,KAAM,MAAO4H,KAAM,aAAck6E,YAAaJ,EAAYK,MACjEG,GAAI,CACAliF,KAAM,aACN4H,KAAM,aACNk6E,YAAaJ,EAAYK,MAE7BI,IAAK,CACDniF,KAAM,UACN4H,KAAM,aACNk6E,YAAaJ,EAAYU,QAE7BC,IAAK,CAAEriF,KAAM,QAAS4H,KAAM,aAAck6E,YAAaJ,EAAYK,MACnEO,QAAS,CACLtiF,KAAM,UACN4H,KAAM,aACNk6E,YAAaJ,EAAYK,MAE7BQ,OAAQ,CAAEviF,KAAM,SAAU4H,KAAM,SAAUy5E,KAAM,aAChDmB,IAAK,CAAExiF,KAAM,aAAc4H,KAAM,SAAUy5E,KAAM,iBACjDoB,SAAU,CAAEziF,KAAM,WAAY4H,KAAM,SAAUy5E,KAAM,aACpDqB,IAAK,CAAE1iF,KAAM,UAAW4H,KAAM,WAAYy5E,KAAM,YAChDsB,IAAK,CAAE3iF,KAAM,MAAO4H,KAAM,WAAYy5E,KAAM,iBAC5CuB,QAAS,CAAE5iF,KAAM,UAAW4H,KAAM,WAAYy5E,KAAM,cACpDwB,OAAQ,CACJ7iF,KAAM,SACN4H,KAAM,aACNk6E,YAAaJ,EAAYU,QAE7BU,OAAQ,CACJ9iF,KAAM,WACN4H,KAAM,aACNk6E,YAAaJ,EAAYU,QAE7BW,KAAM,CAAE/iF,KAAM,OAAQ4H,KAAM,aAAck6E,YAAaJ,EAAYU,QACnEY,QAAS,CACLhjF,KAAM,UACN4H,KAAM,aACNk6E,YAAaJ,EAAYU,QAE7Ba,OAAQ,CACJjjF,KAAM,SACN4H,KAAM,aACNk6E,YAAaJ,EAAYK,MAE7BmB,KAAM,CAAEljF,KAAM,SAAU4H,KAAM,aAAck6E,YAAaJ,EAAYK,MACrEoB,QAAS,CACLnjF,KAAM,UACN4H,KAAM,aACNk6E,YAAaJ,EAAYU,UAW3B,SAAUgB,EAAMC,GAClB,OAAO5mF,OAAOkL,KAAKi6E,GAAM79E,SAASs/E,GAG/B,MAAMC,GAAe,QAAY,OAAQ,CAC5C9B,QAAS,CACL3P,SACI,MAAM0R,GAAgB,SACtB,OAAO,IAAI5C,IACPlkF,OAAO+mF,QAAQ5B,GAAM/9E,KAAkB,EAAEw/E,EAAOrb,KAAS,CACrDqb,EACA,IACOrb,EACHz6C,MAAO,IAAIg2D,EAAc9B,SAAStkF,UAC7BsmF,SAAS5tD,GAAMA,EAAE+rD,OACjB8B,QAAO,SAAUC,EAAKC,GACnB,OAAOD,GAAOC,IAAWP,EAAQ,EAAI,KACtC,GACP9rD,GAAI8rD,QAKpBzB,OACI,MAAO,IAAI7hF,KAAK8xE,OAAO10E,UAAUgxB,MAAK,CAACK,EAAGC,IAAMA,EAAElB,MAAQiB,EAAEjB,SAEhEs2D,cACI,OAAQC,GACJA,EAAOjgF,KAAKw/E,GAAUtjF,KAAK8xE,OAAOkS,IAAIV,U,8GCjHtD,MAAMW,EAAa,CAAEC,MAAO,aACtBC,EAAa,CAAED,MAAO,QAM5B,OAA4B,QAAiB,CAC3CplB,MAAO,CACLmJ,IAAK,KACLqb,MAAO,KACPc,UAAW,CAAEv8E,KAAMG,UAErBq8E,MAAO,CAAC,UACRC,MAAMC,GAAc,KAAEC,IAIxB,MAAM1lB,EAAQylB,EAIRE,GAAY,UAIZC,GAAa,SACf,IAAM5lB,EAAMmJ,KAAOwc,EAAU3S,OAAOkS,IAAIllB,EAAMwkB,SAG5CqB,GAAS,SAAS,KACpB,OAAQD,EAAWjoF,MAAOoL,MACtB,IAAK,WACD,MAAO,SACX,IAAK,SACD,MAAO,SACX,IAAK,aACD,MAAO,SAEf,MAAO,MAGLy5E,GAAO,SAAS,IACdoD,EAAWjoF,MAAO6kF,KACXoD,EAAWjoF,MAAO6kF,KAEtB,aAGX,MAAO,CAACsD,EAAUC,MACR,WAAc,QAAoB,OAAQ,CAChDX,OAAO,QAAgB,CAAC,iBAAkB,OAAM,QAAOS,QACtD,EACD,IAAA5wE,GAAoB,OAAQkwE,EAAY,EACtC,IAAAlwE,GAAoB,OAAQowE,EAAY,EACtC,IAAApwE,GAAoB,IAAK,CACvBmwE,OAAO,QAAgB,CAAC,OAAO,QAAO5C,MACrC,KAAM,MAEX,IAAAvtE,GAAoB,OAAQ,MAAM,SAAiB,QAAO2wE,GAAYzkF,MAAO,KAE9EskF,EAAQH,YACJ,WAAc,QAAoB,SAAU,CAC3C3+E,IAAK,EACLy+E,MAAO,kBACPj0C,QAAS40C,EAAO,KAAOA,EAAO,GAAMC,GAAiBN,EAAK,eAE5D,QAAoB,IAAI,IAC3B,OCpEL,MAAMO,EAAc,EAEpB,S,8BCHA,IAAIC,EAAStoF,OAAOC,UAAUmC,eAC1BmmF,EAAQvoF,OAAOC,UAAUC,SACzB8zB,EAAiBh0B,OAAOg0B,eACxBw0D,EAAOxoF,OAAOyoF,yBAEdh/E,EAAU,SAAiBi/E,GAC9B,MAA6B,oBAAlBl/E,MAAMC,QACTD,MAAMC,QAAQi/E,GAGK,mBAApBH,EAAMpoF,KAAKuoF,IAGf5oF,EAAgB,SAAuB2uE,GAC1C,IAAKA,GAA2B,oBAApB8Z,EAAMpoF,KAAKsuE,GACtB,OAAO,EAGR,IASI1lE,EATA4/E,EAAoBL,EAAOnoF,KAAKsuE,EAAK,eACrCma,EAAmBna,EAAI3rE,aAAe2rE,EAAI3rE,YAAY7C,WAAaqoF,EAAOnoF,KAAKsuE,EAAI3rE,YAAY7C,UAAW,iBAE9G,GAAIwuE,EAAI3rE,cAAgB6lF,IAAsBC,EAC7C,OAAO,EAMR,IAAK7/E,KAAO0lE,GAEZ,MAAsB,qBAAR1lE,GAAuBu/E,EAAOnoF,KAAKsuE,EAAK1lE,IAInD8/E,EAAc,SAAqBhvC,EAAQ9yC,GAC1CitB,GAAmC,cAAjBjtB,EAAQxD,KAC7BywB,EAAe6lB,EAAQ9yC,EAAQxD,KAAM,CACpCgzE,YAAY,EACZD,cAAc,EACdv2E,MAAOgH,EAAQ+hF,SACftS,UAAU,IAGX38B,EAAO9yC,EAAQxD,MAAQwD,EAAQ+hF,UAK7BC,EAAc,SAAqBta,EAAKlrE,GAC3C,GAAa,cAATA,EAAsB,CACzB,IAAK+kF,EAAOnoF,KAAKsuE,EAAKlrE,GACrB,OACM,GAAIilF,EAGV,OAAOA,EAAK/Z,EAAKlrE,GAAMxD,MAIzB,OAAO0uE,EAAIlrE,IAGZylF,EAAOC,QAAU,SAASngF,IACzB,IAAI/B,EAASxD,EAAMi2C,EAAKoY,EAAMs3B,EAAaC,EACvCtvC,EAAS7wC,UAAU,GACnB+hE,EAAI,EACJ5pE,EAAS6H,UAAU7H,OACnBioF,GAAO,EAaX,IAVsB,mBAAXvvC,IACVuvC,EAAOvvC,EACPA,EAAS7wC,UAAU,IAAM,GAEzB+hE,EAAI,IAES,MAAVlxB,GAAqC,kBAAXA,GAAyC,oBAAXA,KAC3DA,EAAS,IAGHkxB,EAAI5pE,IAAU4pE,EAGpB,GAFAhkE,EAAUiC,UAAU+hE,GAEL,MAAXhkE,EAEH,IAAKxD,KAAQwD,EACZyyC,EAAMuvC,EAAYlvC,EAAQt2C,GAC1BquD,EAAOm3B,EAAYhiF,EAASxD,GAGxBs2C,IAAW+X,IAEVw3B,GAAQx3B,IAAS9xD,EAAc8xD,KAAUs3B,EAAcz/E,EAAQmoD,MAC9Ds3B,GACHA,GAAc,EACdC,EAAQ3vC,GAAO/vC,EAAQ+vC,GAAOA,EAAM,IAEpC2vC,EAAQ3vC,GAAO15C,EAAc05C,GAAOA,EAAM,GAI3CqvC,EAAYhvC,EAAQ,CAAEt2C,KAAMA,EAAMulF,SAAUhgF,EAAOsgF,EAAMD,EAAOv3B,MAGtC,qBAATA,GACjBi3B,EAAYhvC,EAAQ,CAAEt2C,KAAMA,EAAMulF,SAAUl3B,KAQjD,OAAO/X,I,kBCxGN,WAGA,IAAIzxC,EAoBJ,SAASihF,IACPC,QAAQC,IAAI3iD,EAAO16B,MAAM,KAAMlD,YAGjC,SAASwgF,EAASC,EAAKC,GACrB,OAAO9iD,EAAO16B,MAAM,KAAM,CAACu9E,GAAKnjE,OAAOojE,IAGzC,SAAS9iD,EAAO6iD,GAsBd,IArBA,IAKI1b,EAEA4b,EACA5R,EAEA6R,EAVAC,EAAW,EACX9U,EAAO,GAAG1xE,MAAMlD,KAAK6I,WACrB+hE,EAAI,EACJ+e,EAAIL,EAAItoF,OACRU,EAAS,GAETkoF,GAAU,EAGVC,GAAc,EAEdC,EAAU,WAAa,OAAOlV,EAAK8U,MACnCK,EAAc,WACZ,IAAIC,EAAS,GACb,MAAO,KAAKp8E,KAAK07E,EAAI1e,IACnBof,GAAUV,EAAI1e,KACdgD,EAAI0b,EAAI1e,GAEV,OAAOof,EAAOhpF,OAAS,EAAIimB,SAAS+iE,GAAU,MAG7Cpf,EAAI+e,IAAK/e,EAEd,GADAgD,EAAI0b,EAAI1e,GACJgf,EAeF,OAdAA,GAAU,EACD,KAALhc,GACFic,GAAc,EACdjc,EAAI0b,IAAM1e,IAEE,KAALgD,GAA0B,KAAd0b,EAAI1e,EAAI,IAC3Bif,GAAc,EACdjf,GAAK,EACLgD,EAAI0b,EAAI1e,IAGRif,GAAc,EAEhBJ,EAAYM,IACJnc,GACR,IAAK,IACHlsE,GAAUulB,SAAS6iE,IAAW,IAAI/pF,SAAS,GAC3C,MACF,IAAK,IACHypF,EAAMM,IAEJpoF,GADiB,kBAAR8nF,GAAoBA,aAAer/E,OAClCq/E,EAEAr/E,OAAO0D,aAAaoZ,SAASuiE,EAAK,KAC9C,MACF,IAAK,IACH9nF,GAAUulB,SAAS6iE,IAAW,IAC9B,MACF,IAAK,IACHlS,EAAMztE,OAAO0kE,WAAWib,KAAWG,QAAQR,GAAa,IACxD/nF,GAAUmoF,EAAcjS,EAAMA,EAAI/7D,QAAQ,KAAM,IAChD,MACF,IAAK,IACHna,GAAUiE,KAAKC,UAAUkkF,KACzB,MACF,IAAK,IACHpoF,GAAU,IAAMulB,SAAS6iE,IAAW,IAAI/pF,SAAS,GACjD,MACF,IAAK,IACH2B,GAAUooF,IACV,MACF,IAAK,IACHpoF,GAAU,KAAOulB,SAAS6iE,IAAW,IAAI/pF,SAAS,IAClD,MACF,IAAK,IACH2B,GAAU,KAAOulB,SAAS6iE,IAAW,IAAI/pF,SAAS,IAAIgc,cACtD,MACF,QACEra,GAAUksE,EACV,UAEa,MAANA,EACTgc,GAAU,EAEVloF,GAAUksE,EAGd,OAAOlsE,EA1GPuG,EAAY4gF,EAAOC,QAAUriD,EAS/Bx+B,EAAUw+B,OAASA,EACnBx+B,EAAUohF,SAAWA,EAEE,qBAAZF,SAAkD,oBAAhBA,QAAQC,MACnDnhF,EAAUihF,OAASA,IApBtB,I;;;;;;;ACJDL,EAAOC,QAAU,SAAmBxa,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAI3rE,aACY,oBAA7B2rE,EAAI3rE,YAAYunF,UAA2B5b,EAAI3rE,YAAYunF,SAAS5b,K,6BCL/E,IAAI6b,EAAc,GAMlB,SAASC,EAAeC,GACtB,IAAIzf,EAAGoD,EAAItI,EAAQykB,EAAYE,GAC/B,GAAI3kB,EAAS,OAAOA,EAIpB,IAFAA,EAAQykB,EAAYE,GAAW,GAE1Bzf,EAAI,EAAGA,EAAI,IAAKA,IACnBoD,EAAK7jE,OAAO0D,aAAa+8D,GAErB,cAAch9D,KAAKogE,GAErBtI,EAAMtkE,KAAK4sE,GAEXtI,EAAMtkE,KAAK,KAAO,IAAMwpE,EAAE7qE,SAAS,IAAIgc,eAAe7Y,OAAO,IAIjE,IAAK0nE,EAAI,EAAGA,EAAIyf,EAAQrpF,OAAQ4pE,IAC9BlF,EAAM2kB,EAAQ7lF,WAAWomE,IAAMyf,EAAQzf,GAGzC,OAAOlF,EAWT,SAAS/zC,EAAO7c,EAAQu1E,EAASC,GAC/B,IAAI1f,EAAG2f,EAAGxlF,EAAMylF,EAAU9kB,EACtBhkE,EAAS,GAcb,IAZuB,kBAAZ2oF,IAETC,EAAeD,EACfA,EAAU14D,EAAO84D,cAGQ,qBAAhBH,IACTA,GAAc,GAGhB5kB,EAAQ0kB,EAAeC,GAElBzf,EAAI,EAAG2f,EAAIz1E,EAAO9T,OAAQ4pE,EAAI2f,EAAG3f,IAGpC,GAFA7lE,EAAO+P,EAAOtQ,WAAWomE,GAErB0f,GAAwB,KAATvlF,GAAyB6lE,EAAI,EAAI2f,GAC9C,iBAAiB38E,KAAKkH,EAAO5R,MAAM0nE,EAAI,EAAGA,EAAI,IAChDlpE,GAAUoT,EAAO5R,MAAM0nE,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAI7lE,EAAO,IACTrD,GAAUgkE,EAAM3gE,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAU6lE,EAAI,EAAI2f,IAC9CC,EAAW11E,EAAOtQ,WAAWomE,EAAI,GAC7B4f,GAAY,OAAUA,GAAY,OAAQ,CAC5C9oF,GAAU6kE,mBAAmBzxD,EAAO81D,GAAK91D,EAAO81D,EAAI,IACpDA,IACA,SAGJlpE,GAAU,iBAIZA,GAAU6kE,mBAAmBzxD,EAAO81D,IAGtC,OAAOlpE,EAGTiwB,EAAO84D,aAAiB,uBACxB94D,EAAO+4D,eAAiB,YAGxB7B,EAAOC,QAAUn3D,G,gCC/FjB,SAASg5D,EAAW5mF,EAAM4G,GACtB,IAAIvH,EAAOW,EAAKkrB,QACZ0hD,EAAMhmE,EAAKigF,WAAU,SAAUC,GAC/B,OAAOA,EAAEznF,MAAQA,KAEjButE,EAAM,GACNhmE,EAAKvJ,KAAK,CACNgC,KAAMA,EACNmI,SAAU,KAEM,IAAhBxH,EAAK/C,QACL2pF,EAAW5mF,EAAM4G,EAAKA,EAAK3J,OAAS,GAAGuK,WAI3Co/E,EAAW5mF,EAAM4G,EAAKgmE,GAAKplE,UAGnC,SAASjD,EAAMzB,GAEX,IADA,IAAI8D,EAAO,GACFigE,EAAI,EAAGA,EAAI/jE,EAAK7F,OAAQ4pE,IAAK,CAClC,IAAI7mE,EAAO8C,EAAK+jE,GACZ17C,EAAQnrB,EAAKmrB,MAAM,KACvBy7D,EAAWz7D,EAAOvkB,GAEtB,OAAOA,EAEXm+E,EAAQ,EAAUxgF,G,iBC7BlBugF,EAAOC,QAAU,SAAiBliF,EAAU,IACxC,OAAO,SAAU+D,EAAM/G,GACnB,IAAIR,EAYJ,SAAS0nF,EAAK1gF,GACV,OAAI2gF,EAAQ3gF,GACD,EAGJ4gF,EAAM5gF,GAGjB,SAAS4gF,GAAM,SAAEz/E,IACb,GAAKA,EAIL,IAAK,IAAIqiE,EAAI,EAAGA,EAAIriE,EAASvK,OAAQ4sE,IAAK,CACtC,MAAMp+C,EAAQjkB,EAASqiE,GACvB,GAAIkd,EAAKt7D,GAKL,OAJI5oB,EAAQ8E,SACRH,EAASC,OAAOoiE,EAAG,GACnBA,KAEG,GAOnB,SAASmd,GAAQ,KAAE//E,EAAI,MAAEpL,IACrB,MAAM+N,EAAQ/G,EAAQoE,GAEtB,GAAK2C,GAA0B,oBAAVA,EAIrB,IACI,MAAMjM,EAASiM,EAAM/N,GAErB,IAAK8B,EACD,OAWJ,OARI0B,GACAQ,EAAKiD,KAAKzD,GAAQQ,EAAKiD,KAAKzD,IAAS,GAErCvD,OAAO4J,OAAO7F,EAAKiD,KAAKzD,GAAO1B,IAE/B7B,OAAO4J,OAAO7F,EAAKiD,KAAMnF,GAGtB,EACT,MAAOhC,GACL,OAAOurF,EAAWvrF,EAAOsL,IAIjC,SAASigF,GAAW,QAAE5nF,EAAO,OAAEf,EAAM,KAAED,EAAMe,KAAM4H,GAAQ5H,GACvD,IAAI+uC,EAASvrC,EAAQskF,OACf,OACA,UAENtnF,EAAKuuC,GAAQ9uC,EAAS,CAAEhB,KAAAA,EAAMC,OAAAA,GAAU,oBAAoBc,KAAQ4H,KAtEjD,oBAAZpE,IACPA,EAAQ+/B,KAAO//B,GAGI,oBAAZA,GAA0BA,EAAQxD,OACzCA,EAAOwD,EAAQxD,MAGnB0nF,EAAKngF,EAAM/G,M,qBCZnB,IAAIqD,EAAM,CACT,oBAAqB,KACrB,oBAAqB,KACrB,mBAAoB,KACpB,uBAAwB,KACxB,uBAAwB,KACxB,sBAAuB,KACvB,oBAAqB,KACrB,oBAAqB,KACrB,oBAAqB,KACrB,mBAAoB,KACpB,sBAAuB,KACvB,sBAAuB,KACvB,qBAAsB,KACtB,oBAAqB,KACrB,oBAAqB,KACrB,mBAAoB,KACpB,uBAAwB,KACxB,uBAAwB,KACxB,sBAAuB,MAIxB,SAASkkF,EAAeC,GACvB,IAAIzwD,EAAK0wD,EAAsBD,GAC/B,OAAOE,EAAoB3wD,GAE5B,SAAS0wD,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEtkF,EAAKmkF,GAAM,CACpC,IAAIP,EAAI,IAAI9oF,MAAM,uBAAyBqpF,EAAM,KAEjD,MADAP,EAAE9lF,KAAO,mBACH8lF,EAEP,OAAO5jF,EAAImkF,GAEZD,EAAepgF,KAAO,WACrB,OAAOlL,OAAOkL,KAAK9D,IAEpBkkF,EAAe1gF,QAAU4gF,EACzBxC,EAAOC,QAAUqC,EACjBA,EAAexwD,GAAK,M","sources":["webpack://james-waters-personal-site/./node_modules/bail/index.js","webpack://james-waters-personal-site/./node_modules/is-plain-obj/index.js","webpack://james-waters-personal-site/./node_modules/trough/index.js","webpack://james-waters-personal-site/./node_modules/unist-util-stringify-position/index.js","webpack://james-waters-personal-site/./node_modules/vfile-message/index.js","webpack://james-waters-personal-site/./node_modules/vfile/lib/minpath.browser.js","webpack://james-waters-personal-site/./node_modules/vfile/lib/minproc.browser.js","webpack://james-waters-personal-site/./node_modules/vfile/lib/minurl.shared.js","webpack://james-waters-personal-site/./node_modules/vfile/lib/minurl.browser.js","webpack://james-waters-personal-site/./node_modules/vfile/lib/index.js","webpack://james-waters-personal-site/./node_modules/unified/lib/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-string/index.js","webpack://james-waters-personal-site/./node_modules/micromark-util-chunked/index.js","webpack://james-waters-personal-site/./node_modules/micromark-util-combine-extensions/index.js","webpack://james-waters-personal-site/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://james-waters-personal-site/./node_modules/micromark-util-character/index.js","webpack://james-waters-personal-site/./node_modules/micromark-factory-space/index.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/initialize/content.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/initialize/document.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://james-waters-personal-site/./node_modules/micromark-util-subtokenize/index.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/content.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/initialize/flow.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/initialize/text.js","webpack://james-waters-personal-site/./node_modules/micromark-util-resolve-all/index.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/create-tokenizer.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/list.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://james-waters-personal-site/./node_modules/micromark-factory-destination/index.js","webpack://james-waters-personal-site/./node_modules/micromark-factory-label/index.js","webpack://james-waters-personal-site/./node_modules/micromark-factory-title/index.js","webpack://james-waters-personal-site/./node_modules/micromark-factory-whitespace/index.js","webpack://james-waters-personal-site/./node_modules/micromark-util-normalize-identifier/index.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://james-waters-personal-site/./node_modules/micromark-util-html-tag-name/index.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://james-waters-personal-site/./node_modules/decode-named-character-reference/index.dom.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://james-waters-personal-site/./node_modules/micromark-util-classify-character/index.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://james-waters-personal-site/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/constructs.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/parse.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/preprocess.js","webpack://james-waters-personal-site/./node_modules/micromark/lib/postprocess.js","webpack://james-waters-personal-site/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://james-waters-personal-site/./node_modules/micromark-util-decode-string/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://james-waters-personal-site/./node_modules/remark-parse/lib/index.js","webpack://james-waters-personal-site/./node_modules/remark-parse/index.js","webpack://james-waters-personal-site/./node_modules/zwitch/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/configure.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://james-waters-personal-site/./node_modules/longest-streak/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://james-waters-personal-site/./node_modules/unist-util-is/index.js","webpack://james-waters-personal-site/./node_modules/unist-util-visit/node_modules/unist-util-visit-parents/color.browser.js","webpack://james-waters-personal-site/./node_modules/unist-util-visit/node_modules/unist-util-visit-parents/index.js","webpack://james-waters-personal-site/./node_modules/unist-util-visit/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered-other.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/join.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/unsafe.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-markdown/lib/index.js","webpack://james-waters-personal-site/./node_modules/remark-stringify/lib/index.js","webpack://james-waters-personal-site/./node_modules/remark-stringify/index.js","webpack://james-waters-personal-site/./node_modules/remark/index.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-gfm/index.js","webpack://james-waters-personal-site/./node_modules/ccount/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://james-waters-personal-site/./node_modules/unist-util-visit-parents/color.browser.js","webpack://james-waters-personal-site/./node_modules/unist-util-visit-parents/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-find-and-replace/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-gfm-autolink-literal/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-gfm-footnote/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-gfm-strikethrough/index.js","webpack://james-waters-personal-site/./node_modules/markdown-table/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-gfm-table/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-gfm-task-list-item/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-gfm/index.js","webpack://james-waters-personal-site/./node_modules/remark-gfm/index.js","webpack://james-waters-personal-site/./node_modules/fault/index.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-frontmatter/matters.js","webpack://james-waters-personal-site/./node_modules/micromark-extension-frontmatter/lib/syntax.js","webpack://james-waters-personal-site/./node_modules/mdast-util-frontmatter/index.js","webpack://james-waters-personal-site/./node_modules/remark-frontmatter/index.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/schema.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/merge.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/normalize.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/info.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/types.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/defined-info.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/create.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/xlink.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/xml.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/xmlns.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/aria.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/html.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/svg.js","webpack://james-waters-personal-site/./node_modules/property-information/index.js","webpack://james-waters-personal-site/./node_modules/html-void-elements/index.js","webpack://james-waters-personal-site/./node_modules/hast-util-is-element/index.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/omission/util/comment.js","webpack://james-waters-personal-site/./node_modules/hast-util-whitespace/index.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/omission/util/siblings.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/omission/omission.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/omission/closing.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/omission/opening.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/omission/index.js","webpack://james-waters-personal-site/./node_modules/property-information/lib/find.js","webpack://james-waters-personal-site/./node_modules/space-separated-tokens/index.js","webpack://james-waters-personal-site/./node_modules/comma-separated-tokens/index.js","webpack://james-waters-personal-site/./node_modules/stringify-entities/lib/core.js","webpack://james-waters-personal-site/./node_modules/stringify-entities/lib/util/to-hexadecimal.js","webpack://james-waters-personal-site/./node_modules/stringify-entities/lib/util/to-decimal.js","webpack://james-waters-personal-site/./node_modules/character-entities-legacy/index.js","webpack://james-waters-personal-site/./node_modules/character-entities-html4/index.js","webpack://james-waters-personal-site/./node_modules/stringify-entities/lib/constant/dangerous.js","webpack://james-waters-personal-site/./node_modules/stringify-entities/lib/util/to-named.js","webpack://james-waters-personal-site/./node_modules/stringify-entities/lib/util/format-smart.js","webpack://james-waters-personal-site/./node_modules/stringify-entities/lib/index.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/constants.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/comment.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/doctype.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/text.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/raw.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/tree.js","webpack://james-waters-personal-site/./node_modules/hast-util-to-html/lib/index.js","webpack://james-waters-personal-site/./node_modules/hast-util-sanitize/lib/schema.js","webpack://james-waters-personal-site/./node_modules/hast-util-sanitize/lib/index.js","webpack://james-waters-personal-site/./node_modules/unist-builder/index.js","webpack://james-waters-personal-site/./node_modules/unist-util-position/index.js","webpack://james-waters-personal-site/./node_modules/unist-util-generated/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-definitions/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/traverse.js","webpack://james-waters-personal-site/./node_modules/micromark-util-encode/index.js","webpack://james-waters-personal-site/./node_modules/micromark-util-sanitize-uri/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/wrap.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://james-waters-personal-site/./node_modules/mdast-util-to-hast/lib/index.js","webpack://james-waters-personal-site/./node_modules/remark-html/index.js","webpack://james-waters-personal-site/./node_modules/js-yaml/dist/js-yaml.mjs","webpack://james-waters-personal-site/./src/store/projects.ts","webpack://james-waters-personal-site/./src/store/tags.ts","webpack://james-waters-personal-site/./src/components/TagComponent.vue?7500","webpack://james-waters-personal-site/./src/components/TagComponent.vue","webpack://james-waters-personal-site/./node_modules/extend/index.js","webpack://james-waters-personal-site/./node_modules/format/format.js","webpack://james-waters-personal-site/./node_modules/is-buffer/index.js","webpack://james-waters-personal-site/./node_modules/mdurl/encode.js","webpack://james-waters-personal-site/./node_modules/path-list-to-tree/dist/index.js","webpack://james-waters-personal-site/./node_modules/remark-extract-frontmatter/index.js","webpack://james-waters-personal-site//home/runner/work/personal-site/personal-site/src/assets/projects|sync|/.*/"],"sourcesContent":["/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: any[]) => void} Callback\n * @typedef {(...input: any[]) => any} Middleware\n *\n * @typedef {(...input: any[]) => void} Run Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Middleware[]} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {any[]} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @param {any[]} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware(...parameters)\n    } catch (error) {\n      /** @type {Error} */\n      const exception = error\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","var own = {}.hasOwnProperty\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|Position|Point} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    // @ts-ignore looks like a node.\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    // @ts-ignore looks like a position.\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    // @ts-ignore looks like a point.\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null]\n    /** @type {Position} */\n    var position = {\n      start: {line: null, column: null},\n      end: {line: null, column: null}\n    }\n    /** @type {number} */\n    var index\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = null\n    }\n\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('..').VFileData} VFileData\n * @typedef {import('..').VFileValue} VFileValue\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {VFileData} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: Array<VFile>, options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {VFileData}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[1] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n *\n * Note that `textarea` is not available in `CommonMark@0.29` but has been\n * merged to the primary branch and is slated to be released in the next release\n * of CommonMark.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n */\n\n/**\n * @param {Context} base\n * @param {Options} extension\n * @returns {Context}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {string} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Blockquote} node\n */\nexport function blockquote(node, _, context, safeOptions) {\n  const exit = context.enter('blockquote')\n  const tracker = track(safeOptions)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').Break} Break\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @type {Handle}\n * @param {Break} _\n */\nexport function hardBreak(_, _1, context, safe) {\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `character` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} character\n *   Single character to look for.\n * @returns {number}\n *   Count of most frequent adjacent `character`s in `value`.\n */\nexport function longestStreak(value, character) {\n  const source = String(value)\n  let index = source.indexOf(character)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = source.indexOf(character, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Code} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, context) {\n  return Boolean(\n    !context.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['fence'], undefined>}\n */\nexport function checkFence(context) {\n  const marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Code} node\n */\nexport function code(node, _, context, safeOptions) {\n  const marker = checkFence(context)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, context)) {\n    const exit = context.enter('codeIndented')\n    const value = indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = track(safeOptions)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = context.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = context.enter('codeFencedLang' + suffix)\n    value += tracker.move(\n      safe(context, node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = context.enter('codeFencedMeta' + suffix)\n    value += tracker.move(' ')\n    value += tracker.move(\n      safe(context, node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['quote'], undefined>}\n */\nexport function checkQuote(context) {\n  const marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Definition} node\n */\nexport function definition(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('definition')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  value += tracker.move(\n    safe(context, association(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['emphasis'], undefined>}\n */\nexport function checkEmphasis(context) {\n  const marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Emphasis} node\n */\nexport function emphasis(node, _, context, safeOptions) {\n  const marker = checkEmphasis(context)\n  const exit = context.enter('emphasis')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Emphasis} _\n */\nfunction emphasisPeek(_, _1, context) {\n  return context.options.emphasis || '*'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {visit, EXIT} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, context) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, (node) => {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (context.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Heading} node\n */\nexport function heading(node, _, context, safeOptions) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = track(safeOptions)\n\n  if (formatHeadingAsSetext(node, context)) {\n    const exit = context.enter('headingSetext')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = context.enter('headingAtx')\n  const subexit = context.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = containerPhrasing(node, context, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../types.js').Handle} Handle\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @type {Handle}\n * @param {HTML} node\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @type {Handle}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimage.peek = imagePeek\n\n/**\n * @type {Handle}\n * @param {Image} node\n */\nexport function image(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('image')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  value += tracker.move(\n    safe(context, node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @type {Handle}\n * @param {ImageReference} node\n */\nexport function imageReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('imageReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  const alt = safe(context, node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, context) {\n  const raw = toString(node)\n\n  return Boolean(\n    !context.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlink.peek = linkPeek\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nexport function link(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = track(safeOptions)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      containerPhrasing(node, context, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @type {Handle}\n * @param {LinkReference} node\n */\nexport function linkReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('linkReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  const text = containerPhrasing(node, context, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBulletOther(context) {\n  const bullet = checkBullet(context)\n  const bulletOther = context.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrdered(context) {\n  const marker = context.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBulletOrdered} from './check-bullet-ordered.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrderedOther(context) {\n  const bulletOrdered = checkBulletOrdered(context)\n  const bulletOrderedOther = context.options.bulletOrderedOther\n\n  if (!bulletOrderedOther) {\n    return bulletOrdered === '.' ? ')' : '.'\n  }\n\n  if (bulletOrderedOther !== '.' && bulletOrderedOther !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOrderedOther +\n        '` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOrderedOther === bulletOrdered) {\n    throw new Error(\n      'Expected `bulletOrdered` (`' +\n        bulletOrdered +\n        '`) and `bulletOrderedOther` (`' +\n        bulletOrderedOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOrderedOther\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['rule'], undefined>}\n */\nexport function checkRule(context) {\n  const marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkBulletOrderedOther} from '../util/check-bullet-ordered-other.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {List} node\n */\nexport function list(node, parent, context, safeOptions) {\n  const exit = context.enter('list')\n  const bulletCurrent = context.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(context) : checkBullet(context)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? checkBulletOrderedOther(context)\n    : checkBulletOther(context)\n  const bulletLastUsed = context.bulletLastUsed\n  let useDifferentMarker = false\n\n  if (\n    parent &&\n    // Explicit `other` set.\n    (node.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther) &&\n    bulletLastUsed &&\n    bullet === bulletLastUsed\n  ) {\n    useDifferentMarker = true\n  }\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      context.stack[context.stack.length - 1] === 'list' &&\n      context.stack[context.stack.length - 2] === 'listItem' &&\n      context.stack[context.stack.length - 3] === 'list' &&\n      context.stack[context.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      context.indexStack[context.indexStack.length - 1] === 0 &&\n      context.indexStack[context.indexStack.length - 2] === 0 &&\n      context.indexStack[context.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(context) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  context.bulletCurrent = bullet\n  const value = containerFlow(node, context, safeOptions)\n  context.bulletLastUsed = bullet\n  context.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\n/**\n * @type {Handle}\n * @param {Paragraph} node\n */\nexport function paragraph(node, _, context, safeOptions) {\n  const exit = context.enter('paragraph')\n  const subexit = context.enter('phrasing')\n  const value = containerPhrasing(node, context, safeOptions)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(node, _, context, safeOptions) {\n  return containerFlow(node, context, safeOptions)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['strong'], undefined>}\n */\nexport function checkStrong(context) {\n  const marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Strong} node\n */\nexport function strong(node, _, context, safeOptions) {\n  const marker = checkStrong(context)\n  const exit = context.enter('strong')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Strong} _\n */\nfunction strongPeek(_, _1, context) {\n  return context.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {safe} from '../util/safe.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(node, _, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['ruleRepetition'], undefined>}\n */\nexport function checkRuleRepetition(context) {\n  const repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {ThematicBreak} _\n */\nexport function thematicBreak(_, _1, context) {\n  const value = (\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(context))\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, context) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, context) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, context)))\n  ) {\n    return false\n  }\n\n  // Two lists with the same marker.\n  if (\n    left.type === 'list' &&\n    left.type === right.type &&\n    Boolean(left.ordered) === Boolean(right.ordered) &&\n    !(left.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther)\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\n\n/**\n * @param {Node} tree\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {Context} */\n  // @ts-expect-error: we’ll add `handle` later.\n  const context = {\n    enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {},\n    indexStack: []\n  }\n\n  configure(context, {unsafe, join, handlers: handle})\n  configure(context, options)\n\n  if (context.options.tightDefinitions) {\n    configure(context, {join: [joinDefinition]})\n  }\n\n  /** @type {Handle} */\n  context.handle = zwitch('type', {\n    invalid,\n    // @ts-expect-error: hush.\n    unknown,\n    // @ts-expect-error: hush.\n    handlers: context.handlers\n  })\n\n  let result = context.handle(tree, null, context, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Context['enter']} */\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\n/**\n * @type {Handle}\n * @param {unknown} value\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/** @type {import('unified').Plugin<[Options]|void[], Node, string>} */\nexport default function remarkStringify(options) {\n  /** @type {import('unified').CompilerFunction<Node, string>} */\n  const compiler = (tree) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return toMarkdown(\n      tree,\n      Object.assign({}, settings, options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions:\n          /** @type {ToMarkdownOptions['extensions']} */ (\n            this.data('toMarkdownExtensions')\n          ) || []\n      })\n    )\n  }\n\n  Object.assign(this, {Compiler: compiler})\n}\n","import remarkStringify from './lib/index.js'\n\nexport default remarkStringify\n","import {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\n\nexport const remark = unified().use(remarkParse).use(remarkStringify).freeze()\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef Options Configuration.\n * @property {Test} [ignore] `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Extract<Node, import('mdast').Parent>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Object.<string, Replace>} FindAndReplaceSchema\n * @typedef {Array.<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array.<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array.<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents').Visitor<Text>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, grandparent)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {Parent} parent\n       * @returns {VisitorResult}\n       */\n      function handler(node, parent) {\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        let index = parent.children.indexOf(node)\n        /** @type {Array.<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          // @ts-expect-error this is perfectly fine, typescript.\n          let value = replace(...match, {\n            index: match.index,\n            input: match.input\n          })\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (position === undefined) {\n          nodes = [node]\n          index--\n        } else {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        }\n\n        return index + nodes.length + 1\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array.<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","// @ts-expect-error\nimport formatter from 'format'\n\nexport const fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n","/**\n * @typedef {'yaml'|'toml'} Preset\n *   Either `'yaml'` or `'toml'`\n *\n * @typedef Info\n * @property {string} open\n * @property {string} close\n *\n * @typedef MatterProps\n * @property {string} type\n *   Type to tokenize as\n * @property {boolean} [anywhere=false]\n *   If `true`, matter can be found anywhere in the document.\n *   If `false` (default), only matter at the start of the document is\n *   recognized.\n *\n * @typedef MarkerProps\n * @property {string|Info} marker\n *   Character used to construct fences.\n *   By providing an object with `open` and `close` different characters can be\n *   used for opening and closing fences.\n *   For example the character `'-'` will result in `'---'` being used as the\n *   fence\n * @property {never} [fence]\n *\n * @typedef FenceProps\n * @property {string|Info} fence\n *   String used as the complete fence.\n *   By providing an object with `open` and `close` different values can be used\n *   for opening and closing fences.\n *   This can be used too if fences contain different characters or lengths\n *   other than 3.\n * @property {never} [marker]\n *\n * @typedef {(MatterProps & FenceProps)|(MatterProps & MarkerProps)} Matter\n *\n * @typedef {Preset|Matter|Array.<Preset|Matter>} Options\n */\nimport {fault} from 'fault'\nconst own = {}.hasOwnProperty\nconst markers = {\n  yaml: '-',\n  toml: '+'\n}\n/**\n * @param {Options} [options='yaml']\n * @returns {Array<Matter>}\n */\n\nexport function matters(options = 'yaml') {\n  /** @type {Array<Matter>} */\n  const results = []\n  let index = -1 // One preset or matter.\n\n  if (!Array.isArray(options)) {\n    options = [options]\n  }\n\n  while (++index < options.length) {\n    results[index] = matter(options[index])\n  }\n\n  return results\n}\n/**\n * @param {Preset|Matter} option\n * @returns {Matter}\n */\n\nfunction matter(option) {\n  let result = option\n\n  if (typeof result === 'string') {\n    if (!own.call(markers, result)) {\n      throw fault('Missing matter definition for `%s`', result)\n    }\n\n    result = {\n      type: result,\n      marker: markers[result]\n    }\n  } else if (typeof result !== 'object') {\n    throw fault('Expected matter to be an object, not `%j`', result)\n  }\n\n  if (!own.call(result, 'type')) {\n    throw fault('Missing `type` in matter `%j`', result)\n  }\n\n  if (!own.call(result, 'fence') && !own.call(result, 'marker')) {\n    throw fault('Missing `marker` or `fence` in matter `%j`', result)\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('../matters.js').Options} Options\n * @typedef {import('../matters.js').Matter} Matter\n * @typedef {import('../matters.js').Info} Info\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {matters} from '../matters.js'\n/**\n * Create an extension to support frontmatter (YAML, TOML, and more).\n *\n * @param {Options} [options='yaml'] One preset or matter, or an array of them.\n * @returns {Extension}\n */\n\nexport function frontmatter(options) {\n  const settings = matters(options)\n  /** @type {ConstructRecord} */\n\n  const flow = {}\n  let index = -1\n  /** @type {Matter} */\n\n  let matter\n  /** @type {number} */\n\n  let code\n\n  while (++index < settings.length) {\n    matter = settings[index]\n    code = fence(matter, 'open').charCodeAt(0)\n\n    if (code in flow) {\n      // @ts-expect-error it clearly does exist.\n      flow[code].push(parse(matter))\n    } else {\n      flow[code] = [parse(matter)]\n    }\n  }\n\n  return {\n    flow\n  }\n}\n/**\n * @param {Matter} matter\n * @returns {Construct}\n */\n\nfunction parse(matter) {\n  const name = matter.type\n  const anywhere = matter.anywhere\n  const valueType = name + 'Value'\n  const fenceType = name + 'Fence'\n  const sequenceType = fenceType + 'Sequence'\n  const fenceConstruct = {\n    tokenize: tokenizeFence,\n    partial: true\n  }\n  /** @type {string} */\n\n  let buffer\n  return {\n    tokenize: tokenizeFrontmatter,\n    concrete: true\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeFrontmatter(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      const position = self.now()\n\n      if (position.column !== 1 || (!anywhere && position.line !== 1)) {\n        return nok(code)\n      }\n\n      effects.enter(name)\n      buffer = fence(matter, 'open')\n      return effects.attempt(fenceConstruct, afterOpeningFence, nok)(code)\n    }\n    /** @type {State} */\n\n    function afterOpeningFence(code) {\n      buffer = fence(matter, 'close')\n      return lineEnd(code)\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      if (code === null || markdownLineEnding(code)) {\n        return lineEnd(code)\n      }\n\n      effects.enter(valueType)\n      return lineData(code)\n    }\n    /** @type {State} */\n\n    function lineData(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(valueType)\n        return lineEnd(code)\n      }\n\n      effects.consume(code)\n      return lineData\n    }\n    /** @type {State} */\n\n    function lineEnd(code) {\n      // Require a closing fence.\n      if (code === null) {\n        return nok(code)\n      } // Can only be an eol.\n\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(fenceConstruct, after, lineStart)\n    }\n    /** @type {State} */\n\n    function after(code) {\n      effects.exit(name)\n      return ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeFence(effects, ok, nok) {\n    let bufferIndex = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.enter(fenceType)\n        effects.enter(sequenceType)\n        return insideSequence(code)\n      }\n\n      return nok(code)\n    }\n    /** @type {State} */\n\n    function insideSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n\n        if (markdownSpace(code)) {\n          effects.enter('whitespace')\n          return insideWhitespace(code)\n        }\n\n        return fenceEnd(code)\n      }\n\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return insideSequence\n      }\n\n      return nok(code)\n    }\n    /** @type {State} */\n\n    function insideWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return insideWhitespace\n      }\n\n      effects.exit('whitespace')\n      return fenceEnd(code)\n    }\n    /** @type {State} */\n\n    function fenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n/**\n * @param {Matter} matter\n * @param {'open'|'close'} prop\n * @returns {string}\n */\n\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3) // @ts-expect-error: They’re mutually exclusive.\n    : pick(matter.fence, prop)\n}\n/**\n * @param {Info|string} schema\n * @param {'open'|'close'} prop\n * @returns {string}\n */\n\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n","/**\n * @typedef {import('mdast').Literal} Literal\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/util/indent-lines.js').Map} Map\n *\n * @typedef {import('micromark-extension-frontmatter/matters.js').Options} Options\n * @typedef {import('micromark-extension-frontmatter/matters.js').Matter} Matter\n * @typedef {import('micromark-extension-frontmatter/matters.js').Info} Info\n */\n\nimport {matters} from 'micromark-extension-frontmatter/matters.js'\n\n/**\n * @param {Options} [options]\n * @returns {FromMarkdownExtension}\n */\nexport function frontmatterFromMarkdown(options) {\n  const settings = matters(options)\n  /** @type {FromMarkdownExtension['enter']} */\n  const enter = {}\n  /** @type {FromMarkdownExtension['exit']} */\n  const exit = {}\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n    enter[matter.type] = opener(matter)\n    exit[matter.type] = close\n    exit[matter.type + 'Value'] = value\n  }\n\n  return {enter, exit}\n}\n\n/**\n * @param {Matter} matter\n * @returns {FromMarkdownHandle} enter\n */\nfunction opener(matter) {\n  return open\n  /** @type {FromMarkdownHandle} */\n  function open(token) {\n    // @ts-expect-error: custom.\n    this.enter({type: matter.type, value: ''}, token)\n    this.buffer()\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction close(token) {\n  const data = this.resume()\n  // Remove the initial and final eol.\n  this.exit(token).value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction value(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function frontmatterToMarkdown(options) {\n  /** @type {ToMarkdownExtension['unsafe']} */\n  const unsafe = []\n  /** @type {ToMarkdownExtension['handlers']} */\n  const handlers = {}\n  const settings = matters(options)\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n    handlers[matter.type] = handler(matter)\n    unsafe.push({atBreak: true, character: fence(matter, 'open').charAt(0)})\n  }\n\n  return {unsafe, handlers}\n}\n\n/**\n * @param {Matter} matter\n * @returns {(node: Literal) => string} enter\n */\nfunction handler(matter) {\n  const open = fence(matter, 'open')\n  const close = fence(matter, 'close')\n\n  return handle\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Literal} node\n   */\n  function handle(node) {\n    return open + (node.value ? '\\n' + node.value : '') + '\\n' + close\n  }\n}\n\n/**\n * @param {Matter} matter\n * @param {'open'|'close'} prop\n * @returns {string}\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They’re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * @param {Info|string} schema\n * @param {'open'|'close'} prop\n * @returns {string}\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\nimport {frontmatter} from 'micromark-extension-frontmatter'\nimport {\n  frontmatterFromMarkdown,\n  frontmatterToMarkdown\n} from 'mdast-util-frontmatter'\n\n/**\n * Plugin to add support for frontmatter.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkFrontmatter(options = 'yaml') {\n  const data = this.data()\n\n  add('micromarkExtensions', frontmatter(options))\n  add('fromMarkdownExtensions', frontmatterFromMarkdown(options))\n  add('toMarkdownExtensions', frontmatterToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('../../types.js').Comment} Comment\n */\n\nimport {convert} from 'unist-util-is'\n\n/** @type {import('unist-util-is').AssertPredicate<Comment>} */\n// @ts-ignore\nexport const comment = convert('comment')\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children\n    let offset = index + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../../types.js').Node} Node\n * @typedef {import('../../types.js').Text} Text\n */\n\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\n\n/** @type {import('unist-util-is').AssertPredicate<Text>} */\n// @ts-ignore\nconst isText = convert('text')\n\n/**\n * Check if `node` starts with whitespace.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function whitespaceStart(node) {\n  return isText(node) && whitespace(node.value.charAt(0))\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Object.<string, OmitHandle>} handlers\n * @returns {OmitHandle}\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @type {OmitHandle}\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return !next || (!comment(next) && !whitespaceStart(next))\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @type {OmitHandle}\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? isElement(next, [\n        'address',\n        'article',\n        'aside',\n        'blockquote',\n        'details',\n        'div',\n        'dl',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'footer',\n        'form',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'header',\n        'hgroup',\n        'hr',\n        'main',\n        'menu',\n        'nav',\n        'ol',\n        'p',\n        'pre',\n        'section',\n        'table',\n        'ul'\n      ])\n    : !parent ||\n        // Confusing parent.\n        !isElement(parent, [\n          'a',\n          'audio',\n          'del',\n          'ins',\n          'map',\n          'noscript',\n          'video'\n        ])\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @type {OmitHandle}\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @type {OmitHandle}\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @type {OmitHandle}\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @type {OmitHandle}\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['rp', 'rt'])\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @type {OmitHandle}\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @type {OmitHandle}\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['option', 'optgroup'])\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @type {OmitHandle}\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['menuitem', 'hr', 'menu'])\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @type {OmitHandle}\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @type {OmitHandle}\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @type {OmitHandle}\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @type {OmitHandle}\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['td', 'th'])\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n * @typedef {import('../types.js').Child} Child\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || !comment(head)\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @type {OmitHandle}\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array.<string>} */\n  const seen = []\n  let index = -1\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n    if (isElement(child, ['title', 'base'])) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (!comment(head) &&\n      !whitespaceStart(head) &&\n      !isElement(head, ['meta', 'link', 'script', 'style', 'template']))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @type {OmitHandle}\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    isElement(previous, 'colgroup') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    isElement(previous, ['thead', 'tbody']) &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && isElement(head, 'tr')\n}\n","/**\n * @typedef {import('../types.js').Omission} Omission\n */\n\nimport {opening} from './opening.js'\nimport {closing} from './closing.js'\n\n/** @type {Omission} */\nexport const omission = {opening, closing}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {Object} CoreOptions\n * @property {string[]} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef {Object} FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {string[]} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {string[]} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array.<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Object.<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef {Object} FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","// Maps of subsets.\n// Each value is a matrix of tuples.\n// The first value causes parse errors, the second is valid.\n// Of both values, the first value is unsafe, and the second is safe.\nexport const constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Comment} Comment\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(ctx, node) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return ctx.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, ctx.entities, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, ctx.entities, {subset: ['<', '>']})\n    )\n  }\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n */\n\n/**\n * @type {Handle}\n */\nexport function doctype(ctx) {\n  return (\n    '<!' +\n    (ctx.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (ctx.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(ctx, node, _, parent) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    // @ts-expect-error: hush.\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, ctx.entities, {subset: ['<', '&']})\n      )\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * @type {Handle}\n * @param {Raw} node\n */\nexport function raw(ctx, node, index, parent) {\n  // @ts-ignore Hush.\n  return ctx.dangerous ? node.value : text(ctx, node, index, parent)\n}\n","/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n * @typedef {import('./types.js').Parent} Parent\n */\n\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {ccount} from 'ccount'\nimport {constants} from './constants.js'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {raw} from './raw.js'\nimport {text} from './text.js'\n\n/**\n * @type {Object.<string, Handle>}\n */\nconst handlers = {\n  comment,\n  doctype,\n  element,\n  // @ts-ignore `raw` is nonstandard\n  raw,\n  // @ts-ignore `root` is a parent.\n  root: all,\n  text\n}\n\nconst own = {}.hasOwnProperty\n\n/**\n * @type {Handle}\n */\nexport function one(ctx, node, index, parent) {\n  if (!node || !node.type) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  if (!own.call(handlers, node.type)) {\n    throw new Error('Cannot compile unknown node `' + node.type + '`')\n  }\n\n  return handlers[node.type](ctx, node, index, parent)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @type {Handle}\n * @param {Parent} parent\n */\nexport function all(ctx, parent) {\n  /** @type {Array.<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = one(ctx, children[index], index, parent)\n  }\n\n  return results.join('')\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function element(ctx, node, index, parent) {\n  const schema = ctx.schema\n  const omit = schema.space === 'svg' ? undefined : ctx.omit\n  let selfClosing =\n    schema.space === 'svg'\n      ? ctx.closeEmpty\n      : ctx.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array.<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    ctx.schema = svg\n  }\n\n  const attrs = serializeAttributes(ctx, node.properties)\n\n  const content = all(\n    ctx,\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  ctx.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !omit.opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (selfClosing && (schema.space === 'svg' || ctx.close)) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !ctx.tightClose ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {Properties} props\n * @returns {string}\n */\nfunction serializeAttributes(ctx, props) {\n  /** @type {Array.<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n  /** @type {string} */\n  let value\n  /** @type {string} */\n  let last\n\n  for (key in props) {\n    if (props[key] !== undefined && props[key] !== null) {\n      value = serializeAttribute(ctx, key, props[key])\n      if (value) values.push(value)\n    }\n  }\n\n  while (++index < values.length) {\n    last = ctx.tight ? values[index].charAt(values[index].length - 1) : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {Context} ctx\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(ctx, key, value) {\n  const info = find(ctx.schema, key)\n  let quote = ctx.quote\n  /** @type {string} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, ctx.entities, {\n      // Always encode without parse errors in non-HTML.\n      subset:\n        constants.name[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t\n  // test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  value =\n    typeof value === 'object' && 'length' in value\n      ? // `spaces` doesn’t accept a second argument, but it’s given here just to\n        // keep the code cleaner.\n        (info.commaSeparated ? commas : spaces)(value, {\n          padLeft: !ctx.tightLists\n        })\n      : String(value)\n\n  if (ctx.collapseEmpty && !value) return name\n\n  // Check unquoted value.\n  if (ctx.unquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, ctx.entities, {\n        subset: constants.unquoted[ctx.valid][ctx.safe],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (ctx.smart && ccount(value, quote) > ccount(value, ctx.alternative)) {\n      quote = ctx.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, ctx.entities, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[\n            ctx.schema.space === 'html' ? ctx.valid : 1\n          ][ctx.safe],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Quote} Quote\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {omission} from './omission/index.js'\nimport {one} from './tree.js'\n\n/**\n * @param {Node|Array.<Node>} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toHtml(node, options = {}) {\n  const quote = options.quote || '\"'\n  /** @type {Quote} */\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {Context} */\n  const context = {\n    valid: options.allowParseErrors ? 0 : 1,\n    safe: options.allowDangerousCharacters ? 0 : 1,\n    schema: options.space === 'svg' ? svg : html,\n    omit: options.omitOptionalTags ? omission : undefined,\n    quote,\n    alternative,\n    smart: options.quoteSmart,\n    unquoted: options.preferUnquoted,\n    tight: options.tightAttributes,\n    upperDoctype: options.upperDoctype,\n    tightDoctype: options.tightDoctype,\n    bogusComments: options.bogusComments,\n    tightLists: options.tightCommaSeparatedLists,\n    tightClose: options.tightSelfClosing,\n    collapseEmpty: options.collapseEmptyAttributes,\n    dangerous: options.allowDangerousHtml,\n    voids: options.voids || htmlVoidElements.concat(),\n    entities: options.entities || {},\n    close: options.closeSelfClosing,\n    closeEmpty: options.closeEmptyElements\n  }\n\n  return one(\n    context,\n    // @ts-ignore Assume `node` does not contain a root.\n    Array.isArray(node) ? {type: 'root', children: node} : node,\n    null,\n    null\n  )\n}\n","/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Properties} Properties\n * @typedef {Parent['children'][number]|Root} Node\n *\n * @typedef {Properties[string]} PropertyValue Possible property values\n * @typedef {string|number|boolean} PrimitivePropertyValue Possible primitive HTML attribute values\n * @typedef {string|[string, ...PrimitivePropertyValue[]]} AttributeValue\n * @typedef {Object.<string, Array.<PrimitivePropertyValue>>} AttributeMap\n *\n * @typedef Schema Sanitization configuration\n * @property {Object<string, Array<AttributeValue>>} [attributes] Map of tag names to allowed property names. The special '*' key defines property names allowed on all elements\n * @property {Object<string, Object<string, PropertyValue>>} [required] Map of tag names to required property names and their default property value\n * @property {Array.<string>} [tagNames] List of allowed tag names\n * @property {Object<string, Array.<string>>} [protocols] Map of protocols to allow in property values\n * @property {Object<string, Array.<string>>} [ancestors] Map of tag names to their required ancestor elements\n * @property {Array.<string>} [clobber] List of allowed property names which can clobber\n * @property {string} [clobberPrefix] Prefix to use before potentially clobbering property names\n * @property {Array.<string>} [strip] Names of elements to strip from the tree\n * @property {boolean} [allowComments] Whether to allow comments\n * @property {boolean} [allowDoctypes] Whether to allow doctypes\n *\n * @typedef {(schema: Schema, value: unknown, node: Node, stack: Array.<string>) => unknown} Handler\n * @typedef {Object.<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition)} NodeDefinitionGetter\n * @typedef {Object.<string, NodeDefinition|NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nvar own = {}.hasOwnProperty\nvar push = [].push\n\n/** @type {NodeSchema} */\nvar nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node Hast tree to sanitize\n * @param {Schema} [schema] Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  var ctx = {type: 'root', children: []}\n  /** @type {Node|Array.<Node>} */\n  var replace\n\n  if (node && typeof node === 'object' && node.type) {\n    replace = one(Object.assign({}, defaultSchema, schema || {}), node, [])\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-ignore Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array.<string>} stack\n * @returns {Node|Array.<Node>|null}\n */\nfunction one(schema, node, stack) {\n  var type = node && node.type\n  /** @type {Node} */\n  // @ts-ignore rest of props added later.\n  var replacement = {type: node.type}\n  /** @type {boolean} */\n  var replace\n  /** @type {NodeDefinition|NodeDefinitionGetter} */\n  var definition\n  /** @type {NodeDefinition} */\n  var allowed\n  /** @type {unknown} */\n  var result\n  /** @type {string} */\n  var key\n\n  if (own.call(nodeSchema, type)) {\n    definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      replace = true\n      allowed = Object.assign({}, definition, nodeSchema['*'])\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = null\n            // Set the non-safe value.\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : null\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array.<Node>} children\n * @returns {Array.<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array.<Node>} */\n  var results = []\n  var index = -1\n  /** @type {Node|Array.<Node>} */\n  var value\n\n  if (Array.isArray(children)) {\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      value = one(schema, children[index], stack)\n\n      if (value) {\n        if ('length' in value) {\n          push.apply(results, value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : null\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : null\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  var name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  var reqs = schema.required || {}\n  var props = properties || {}\n  var allowed = Object.assign(\n    {},\n    toPropertyValueMap(schema.attributes['*']),\n    toPropertyValueMap(\n      name && own.call(schema.attributes, name) ? schema.attributes[name] : []\n    )\n  )\n  /** @type {Properties} */\n  var result = {}\n  /** @type {Array.<PrimitivePropertyValue>} */\n  var definition\n  /** @type {PropertyValue} */\n  var value\n  /** @type {string} */\n  var key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = props[key]\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @type {Handler}\n * @returns {string|false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  var name = typeof tagName === 'string' ? tagName : ''\n  var index = -1\n\n  if (!name || name === '*' || !schema.tagNames.includes(name)) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  var result = typeof value === 'string' ? value : ''\n  var index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array.<unknown>} values\n * @param {string} prop\n * @param {Array.<PrimitivePropertyValue>} definition\n * @returns {Array.<string|number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  var index = -1\n  /** @type {Array.<string|number>} */\n  var result = []\n  /** @type {PropertyValue} */\n  var value\n\n  while (++index < values.length) {\n    value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-ignore Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {Array.<PropertyValue>} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 || definition.includes(value))\n  ) {\n    return schema.clobber.includes(prop) ? schema.clobberPrefix + value : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  var url = String(value)\n  var colon = url.indexOf(':')\n  var questionMark = url.indexOf('?')\n  var numberSign = url.indexOf('#')\n  var slash = url.indexOf('/')\n  var protocols = own.call(schema.protocols, prop)\n    ? schema.protocols[prop].concat()\n    : []\n  var index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Array.<AttributeValue>} values\n * @returns {AttributeMap}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeMap} */\n  var result = {}\n  var index = -1\n  /** @type {AttributeValue} */\n  var value\n\n  while (++index < values.length) {\n    value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\nexport var pointStart = point('start')\nexport var pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    /** @type {Point} */\n    // @ts-ignore looks like a point\n    var point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Object.<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', ondefinition)\n\n  return getDefinition\n\n  /** @type {DefinitionVisitor} */\n  function ondefinition(definition) {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  /**\n   * Get a node from the bound definition-cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function getDefinition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: {id: 'footnote-label', className: ['sr-only']},\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('hast-util-sanitize').Schema} Schema\n *\n * @typedef ExtraOptionsFields\n *   Configuration (optional).\n * @property {boolean|Schema|null} [sanitize]\n *   How to sanitize the output.\n * @property {import('mdast-util-to-hast').Handlers} [handlers={}]\n *   Object mapping mdast nodes to functions handling them.\n *\n * @typedef {import('hast-util-to-html').Options & ExtraOptionsFields} Options\n */\n\nimport {toHtml} from 'hast-util-to-html'\nimport {sanitize} from 'hast-util-sanitize'\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Plugin to serialize markdown as HTML.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root, string>}\n */\nexport default function remarkHtml(settings = {}) {\n  const options = {...settings}\n  /** @type {boolean|undefined} */\n  let clean\n\n  if (typeof options.sanitize === 'boolean') {\n    clean = options.sanitize\n    options.sanitize = undefined\n  }\n\n  if (typeof clean !== 'boolean') {\n    clean = true\n  }\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Root, string>}\n   */\n  function compiler(node, file) {\n    const hast = toHast(node, {\n      allowDangerousHtml: !clean,\n      handlers: options.handlers\n    })\n    // @ts-expect-error: assume root.\n    const cleanHast = clean ? sanitize(hast, options.sanitize) : hast\n    const result = toHtml(\n      // @ts-expect-error: assume root.\n      cleanHast,\n      Object.assign({}, options, {allowDangerousHtml: !clean})\n    )\n\n    if (file.extname) {\n      file.extname = '.html'\n    }\n\n    // Add an eof eol.\n    return node &&\n      node.type &&\n      node.type === 'root' &&\n      result &&\n      /[^\\r\\n]/.test(result.charAt(result.length - 1))\n      ? result + '\\n'\n      : result\n  }\n}\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","import { defineStore } from \"pinia\";\nimport pathListToTree from \"path-list-to-tree\";\nimport { remark } from \"remark\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkFrontmatter from \"remark-frontmatter\";\nimport remarkHtml, { Root } from \"remark-html\";\nimport remarkFrontmatterPlugin from \"remark-extract-frontmatter\";\nimport { load } from \"js-yaml\";\n\nimport type { Literal } from \"unist\";\nimport { TagID } from \"@/store/tags\";\n\ntype PostMedia = { [key: string]: string };\n\ninterface PostItem {\n    id: string;\n    title: string;\n    subtitle: string;\n    content: string;\n    tags: TagID[];\n    date: Date;\n    media?: PostMedia;\n    summary: string;\n}\n\ninterface ProjectMedia extends PostMedia {\n    icon: string;\n    cover: string;\n}\n\nexport interface ProjectItem extends PostItem {\n    github?: string;\n    website?: string;\n    media: ProjectMedia;\n}\n\ntype Frontmatter = Omit<ProjectItem, \"content\" | \"id\" | \"media\">;\n\ninterface ProjectsStoreState {\n    projectMap: Map<string, ProjectItem>;\n}\n\nexport const useProjectsStore = defineStore(\"projects\", {\n    state: () => ({ projectMap: new Map() } as ProjectsStoreState),\n\n    actions: {\n        async load(id: string): Promise<ProjectItem> {\n            const rc = require.context(\"@/assets/projects/\", true, /.*/);\n            const post = rc(`./${id}/post.md`);\n            const md = await remark()\n                .use(remarkGfm)\n                .use(remarkHtml)\n                .use(remarkFrontmatter)\n                .use(remarkFrontmatterPlugin, { yaml: load })\n                .use(() => (tree: Root, file) => {\n                    for (const child of tree.children) {\n                        if (child.type == \"paragraph\") {\n                            const textNode = child\n                                .children[0] as Literal<string>;\n                            const summary = textNode.value;\n                            file.data.summary = summary.endsWith(\".\")\n                                ? summary.slice(0, -1)\n                                : summary;\n                            break;\n                        }\n                    }\n                })\n                .process(post);\n            const frontMatter = md.data as Frontmatter;\n            const project: ProjectItem = {\n                id,\n                content: md.toString(),\n                ...frontMatter,\n                media: {\n                    cover: rc(`./${id}/main.png`),\n                    icon: rc(`./${id}/logo.svg`),\n                },\n            };\n            this.projectMap.set(id, project);\n            return project;\n        },\n\n        async loadAll() {\n            const rc = require.context(\"@/assets/projects/\", true, /.*/);\n            const projectTree = pathListToTree(rc.keys());\n\n            return await Promise.all(\n                projectTree[0].children.map(async (projectDir) =>\n                    this.load(projectDir.name)\n                )\n            );\n        },\n    },\n    getters: {\n        projects(): ProjectItem[] {\n            return [...this.projectMap.values()];\n        },\n    },\n});\n","import { defineStore } from \"pinia\";\nimport { useProjectsStore } from \"@/store/projects\";\n\ntype TagType = \"platform\" | \"technology\" | \"reason\";\n\nexport enum Familiarity {\n    MEDIUM,\n    HIGH,\n}\n\ninterface TagDetails {\n    name: string;\n    icon?: string;\n    type: TagType;\n    familiarity?: Familiarity;\n}\n\nconst createTags = <T extends Record<string, TagDetails>>(tags: T) => tags;\nconst tags = createTags({\n    ts: {\n        name: \"TypeScript\",\n        type: \"technology\",\n        familiarity: Familiarity.HIGH,\n    },\n    python: {\n        name: \"Python\",\n        type: \"technology\",\n        familiarity: Familiarity.HIGH,\n    },\n    sql: { name: \"SQL\", type: \"technology\", familiarity: Familiarity.HIGH },\n    js: {\n        name: \"JavaScript\",\n        type: \"technology\",\n        familiarity: Familiarity.HIGH,\n    },\n    mdb: {\n        name: \"MongoDB\",\n        type: \"technology\",\n        familiarity: Familiarity.MEDIUM,\n    },\n    vue: { name: \"VueJS\", type: \"technology\", familiarity: Familiarity.HIGH },\n    flutter: {\n        name: \"Flutter\",\n        type: \"technology\",\n        familiarity: Familiarity.HIGH,\n    },\n    school: { name: \"School\", type: \"reason\", icon: \"fa-school\" },\n    uni: { name: \"University\", type: \"reason\", icon: \"fa-university\" },\n    personal: { name: \"Personal\", type: \"reason\", icon: \"fa-rocket\" },\n    web: { name: \"Website\", type: \"platform\", icon: \"fa-globe\" },\n    app: { name: \"App\", type: \"platform\", icon: \"fa-mobile-alt\" },\n    desktop: { name: \"Desktop\", type: \"platform\", icon: \"fa-desktop\" },\n    jquery: {\n        name: \"jQuery\",\n        type: \"technology\",\n        familiarity: Familiarity.MEDIUM,\n    },\n    phaser: {\n        name: \"PhaserJS\",\n        type: \"technology\",\n        familiarity: Familiarity.MEDIUM,\n    },\n    perl: { name: \"Perl\", type: \"technology\", familiarity: Familiarity.MEDIUM },\n    haskell: {\n        name: \"Haskell\",\n        type: \"technology\",\n        familiarity: Familiarity.MEDIUM,\n    },\n    docker: {\n        name: \"Docker\",\n        type: \"technology\",\n        familiarity: Familiarity.HIGH,\n    },\n    nest: { name: \"NestJS\", type: \"technology\", familiarity: Familiarity.HIGH },\n    angular: {\n        name: \"Angular\",\n        type: \"technology\",\n        familiarity: Familiarity.MEDIUM,\n    },\n});\n\nexport type TagID = keyof typeof tags;\n\nexport interface Tag extends TagDetails {\n    id: TagID;\n    count: number;\n}\n\nexport function isTag(tagId: TagID | string): tagId is TagID {\n    return Object.keys(tags).includes(tagId);\n}\n\nexport const useTagsStore = defineStore(\"tags\", {\n    getters: {\n        tagMap(): Map<TagID, Tag> {\n            const projectsStore = useProjectsStore();\n            return new Map<TagID, Tag>(\n                Object.entries(tags).map<[TagID, Tag]>(([tagId, tag]) => [\n                    tagId as TagID,\n                    {\n                        ...tag,\n                        count: [...projectsStore.projects.values()]\n                            .flatMap((p) => p.tags)\n                            .reduce(function (acc, pTagId) {\n                                return acc + (pTagId === tagId ? 1 : 0);\n                            }, 0),\n                        id: tagId as TagID,\n                    },\n                ])\n            );\n        },\n        tags(): Tag[] {\n            return [...this.tagMap.values()].sort((a, b) => b.count - a.count);\n        },\n        tagsFromIds(): (tagIds: TagID[]) => Tag[] {\n            return (tagIds: TagID[]) =>\n                tagIds.map((tagId) => this.tagMap.get(tagId)!);\n        },\n    },\n});\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"icon-text\" }\nconst _hoisted_2 = { class: \"icon\" }\n\nimport { computed } from \"vue\";\nimport { Tag, TagID, useTagsStore } from \"@/store/tags\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  props: {\n    tag: null,\n    tagId: null,\n    deletable: { type: Boolean }\n  },\n  emits: [\"delete\"],\n  setup(__props: any, { emit }: { emit: ({\n    (e: \"delete\"): void;\n}), expose: any, slots: any, attrs: any }) {\n\nconst props = __props as { tag?: Tag; tagId?: TagID; deletable?: boolean }\n\n\n\nconst tagsStore = useTagsStore();\n\n\n\nconst tagDetails = computed(\n    () => props.tag ?? tagsStore.tagMap.get(props.tagId!)\n);\n\nconst colour = computed(() => {\n    switch (tagDetails.value!.type) {\n        case \"platform\":\n            return \"purple\";\n        case \"reason\":\n            return \"orange\";\n        case \"technology\":\n            return \"danger\";\n    }\n    return \"\";\n});\n\nconst icon = computed(() => {\n    if (tagDetails.value!.icon) {\n        return tagDetails.value!.icon;\n    }\n    return \"fa-tools\";\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass([\"tag is-rounded\", `is-${_unref(colour)}`])\n  }, [\n    _createElementVNode(\"span\", _hoisted_1, [\n      _createElementVNode(\"span\", _hoisted_2, [\n        _createElementVNode(\"i\", {\n          class: _normalizeClass([\"fas\", _unref(icon)])\n        }, null, 2)\n      ]),\n      _createElementVNode(\"span\", null, _toDisplayString(_unref(tagDetails).name), 1)\n    ]),\n    (__props.deletable)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: \"delete is-small\",\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (emit('delete')))\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}\n}\n\n})","import script from \"./TagComponent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./TagComponent.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createNode(path, tree) {\n    var name = path.shift();\n    var idx = tree.findIndex(function (e) {\n        return e.name == name;\n    });\n    if (idx < 0) {\n        tree.push({\n            name: name,\n            children: []\n        });\n        if (path.length !== 0) {\n            createNode(path, tree[tree.length - 1].children);\n        }\n    }\n    else {\n        createNode(path, tree[idx].children);\n    }\n}\nfunction parse(data) {\n    var tree = [];\n    for (var i = 0; i < data.length; i++) {\n        var path = data[i];\n        var split = path.split('/');\n        createNode(split, tree);\n    }\n    return tree;\n}\nexports.default = parse;\n","module.exports = function extract(options = {}) {\n    return function (tree, file) {\n        let name\n\n        if (typeof options === 'function') {\n            options.yaml = options\n        }\n\n        if (typeof options !== 'function' && options.name) {\n            name = options.name\n        }\n\n        each(tree, file)\n\n        function each(node) {\n            if (extract(node)) {\n                return 1\n            }\n\n            return every(node)\n        }\n\n        function every({ children }) {\n            if (!children) {\n                return\n            }\n\n            for (let c = 0; c < children.length; c++) {\n                const child = children[c]\n                if (each(child)) {\n                    if (options.remove) {\n                        children.splice(c, 1)\n                        c--\n                    }\n                    return 1\n                }\n            }\n\n            return\n        }\n\n        function extract({ type, value }) {\n            const check = options[type]\n\n            if (!check || typeof check !== 'function') {\n                return\n            }\n\n            try {\n                const result = check(value)\n\n                if (!result) {\n                    return\n                }\n\n                if (name) {\n                    file.data[name] = file.data[name] || {}\n\n                    Object.assign(file.data[name], result)\n                } else {\n                    Object.assign(file.data, result)\n                }\n\n                return 1\n            } catch (error) {\n                return maybeThrow(error, type)\n            }\n        }\n\n        function maybeThrow({ message, column, line, name: type }, name) {\n            let method = options.throws\n                ? \"fail\"\n                : \"message\"\n\n            file[method](message, { line, column }, `parseFrontMatter:${name}:${type}`)\n\n            return\n        }\n    }\n}\n","var map = {\n\t\"./bouncr/logo.svg\": 5210,\n\t\"./bouncr/main.png\": 9649,\n\t\"./bouncr/post.md\": 9147,\n\t\"./dashboard/logo.svg\": 4632,\n\t\"./dashboard/main.png\": 2795,\n\t\"./dashboard/post.md\": 8844,\n\t\"./fetula/logo.png\": 8031,\n\t\"./fetula/logo.svg\": 7387,\n\t\"./fetula/main.png\": 7116,\n\t\"./fetula/post.md\": 6355,\n\t\"./libellus/logo.svg\": 1930,\n\t\"./libellus/main.png\": 6037,\n\t\"./libellus/post.md\": 8423,\n\t\"./lucrum/logo.svg\": 4146,\n\t\"./lucrum/main.png\": 6977,\n\t\"./lucrum/post.md\": 9252,\n\t\"./multipyer/logo.svg\": 1009,\n\t\"./multipyer/main.png\": 3705,\n\t\"./multipyer/post.md\": 7627\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4394;"],"names":["bail","error","isPlainObject","value","Object","prototype","toString","call","getPrototypeOf","trough","fns","pipeline","run","use","values","middlewareIndex","callback","pop","TypeError","next","output","fn","index","length","undefined","wrap","middelware","push","middleware","called","wrapped","parameters","fnExpectsCallback","result","done","exception","Promise","then","Error","own","hasOwnProperty","stringifyPosition","position","point","line","column","pos","start","end","VFileMessage","constructor","reason","place","origin","parts","super","indexOf","slice","this","name","message","stack","fatal","source","ruleId","actual","expected","file","url","note","path","basename","dirname","extname","join","sep","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","code","segments","joined","normalize","absolute","normalizeString","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","getPathFromURLPosix","hostname","pathname","third","decodeURIComponent","order","VFile","options","data","messages","history","stored","map","prop","includes","assertNonEmpty","assertPart","stem","encoding","info","fail","part","unified","base","freeze","transformers","attachers","frozen","namespace","freezeIndex","processor","Parser","Compiler","parse","runSync","process","processSync","destination","extend","key","arguments","assertUnfrozen","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","Array","isArray","addList","addPreset","assign","add","plugin","plugins","thing","entry","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","complete","assertDone","looksLikeAVFileValue","keys","type","asyncName","looksLikeAVFile","Boolean","includeImageAlt","one","alt","children","splice","list","remove","items","chunkStart","from","unshift","apply","combineExtensions","extensions","all","syntaxExtension","extension","hook","maybe","left","right","constructs","existing","before","unicodePunctuationRegex","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","check","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","initializeContent","contentStart","attempt","parser","contentInitial","afterContentStartConstruct","paragraphInitial","previous","lineStart","token","contentType","initializeDocument","containerConstruct","tokenizeContainer","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","tokenizeBlankLine","partial","afterWhitespace","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","contentEnd","contentContinue","startLookahead","prefixed","tail","sliceSerialize","initializeFlow","initial","atBlankEnding","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","initializeText","resolveAllLineSuffixes","text","notText","atBreak","extraResolver","resolveAllText","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","expectedCode","state","main","addResult","expandTabs","serializeChunks","sliceChunks","accountForPotentialSkip","chunkIndex","go","fields","construct","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","def","handleConstruct","store","create","resolveTo","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","startIndex","startBufferIndex","endIndex","endBufferIndex","view","atTab","thematicBreak","tokenizeThematicBreak","marker","sequence","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","inside","onBlank","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","afterPrefix","blockQuote","tokenizeBlockQuoteStart","tokenizeBlockQuoteContinuation","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","tokenizeDefinition","titleConstruct","tokenizeTitle","identifier","labelAfter","defined","codeIndented","tokenizeCodeIndented","indentedContent","tokenizeIndentedContent","afterStartPrefix","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","fenceOpenInside","headingBreak","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","heading","paragraph","closingSequence","closingSequenceEnd","htmlBlockNames","htmlRawNames","htmlFlow","tokenizeHtmlFlow","resolveToHtmlFlow","nextBlankConstruct","tokenizeNextBlank","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","tokenizeCodeFenced","closingFenceConstruct","tokenizeClosingFence","nonLazyLine","tokenizeNonLazyLine","initialPrefix","sizeOpen","sequenceOpen","infoOpen","openAfter","infoAfter","meta","closingSequenceStart","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","tokenizeCharacterReference","numeric","characterEscape","tokenizeCharacterEscape","lineEnding","tokenizeLineEnding","labelEnd","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","fullReferenceConstruct","tokenizeFullReference","collapsedReferenceConstruct","tokenizeCollapsedReference","close","media","_inactive","_balanced","group","insideSpan","labelStart","balanced","afterLabelEnd","destinationAfter","between","afterLabel","labelStartImage","tokenizeLabelStartImage","classifyCharacter","attention","tokenizeAttention","resolveAllAttention","openingSequence","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","tokenizeHtmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","tokenizeLabelStartLink","hardBreakEscape","tokenizeHardBreakEscape","codeText","tokenizeCodeText","resolveCodeText","tailExitIndex","headEnterIndex","gap","concat","creator","search","preprocess","atCarriageReturn","preprocessor","match","endPosition","lastIndex","exec","Math","ceil","postprocess","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","compiler","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","parent","onExitError","ancestor","lang","depth","referenceType","fragment","ordered","spread","checked","combined","remarkParse","zwitch","invalid","handlers","unknown","track","options_","lineShift","move","shift","split","containerFlow","safeOptions","indexStack","tracker","results","child","handle","bulletLastUsed","repeat","eol","indentLines","blockquote","blank","patternInScope","pattern","listInScope","inConstruct","notInConstruct","none","_1","safe","unsafe","character","longestStreak","count","formatCodeAsIndented","fences","checkFence","fence","patternCompile","_compiled","RegExp","input","positions","infos","expression","sort","numerical","escapeBackslashes","charAt","encode","a","b","whole","raw","suffix","subexit","association","checkQuote","quote","checkEmphasis","containerPhrasing","peek","emphasisPeek","convert","typeFactory","anyFactory","propsFactory","castFactory","tests","checks","any","assertion","color","CONTINUE","SKIP","EXIT","visitParents","visitor","reverse","is","step","factory","parents","defineProperty","visit","subresult","grandparents","toResult","overload","formatHeadingAsSetext","literalWithBreak","setext","rank","min","closeAtx","htmlPeek","imagePeek","imageReference","imageReferencePeek","inlineCode","inlineCodePeek","formatLinkAsAutolink","resourceLink","linkPeek","linkReference","linkReferencePeek","checkBullet","bullet","checkBulletOther","bulletOther","checkBulletOrdered","bulletOrdered","checkBulletOrderedOther","bulletOrderedOther","checkRule","rule","bulletCurrent","useDifferentMarker","firstListItem","checkListItemIndent","style","listItemIndent","incrementListMarker","root","checkStrong","strongPeek","checkRuleRepetition","repetition","ruleRepetition","ruleSpaces","break","joinDefaults","fullPhrasingSpans","toMarkdown","tightDefinitions","joinDefinition","remarkStringify","remark","www","tokenizeWww","domain","tokenizeDomain","tokenizePath","punctuation","tokenizePunctuation","namedCharacterReference","tokenizeNamedCharacterReference","wwwAutolink","tokenizeWwwAutolink","previousWww","httpAutolink","tokenizeHttpAutolink","previousHttp","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","hasDot","hasDigitInLastSegment","gfmAtext","previousUnbalanced","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","t1","t2","p","s","colon","slash1","slash2","w2","w3","dot","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","punctuationContinuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","id","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","tokenizeTable","resolveTable","nextPrefixedOrBlank","tokenizeNextPrefixedOrBlank","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","cell","align","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","tableBodyClose","whitespace","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","ccount","escapeStringRegexp","findAndReplace","find","schema","ignored","ignore","pairs","toPairs","pairIndex","grandparent","nodes","global","toExpression","toFunction","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","literalAutolink","enterLiteralAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","isCorrectDomain","splitUrl","trailExec","closingParenIndex","openingParens","closingParens","trail","email","gfmFootnoteFromMarkdown","gfmFootnoteDefinition","enterFootnoteDefinition","gfmFootnoteDefinitionLabelString","enterFootnoteDefinitionLabelString","gfmFootnoteCall","enterFootnoteCall","gfmFootnoteCallString","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteReference","footnoteReferencePeek","footnoteDefinition","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","delete","handleDelete","peekDelete","markdownTable","table","stringLength","defaultStringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","serialize","alignDelimiters","toAlignment","lines","delimiterStart","padding","delimiterEnd","codePointAt","gfmTableFromMarkdown","enterTable","tableData","enterCell","tableHeader","tableRow","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","tableCellPadding","tablePipeAlign","around","handleTable","handleTableRow","tableCell","handleTableCell","inlineCodeWithTable","serializeData","handleTableAsData","handleTableRowAsData","matrix","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","siblings","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","remarkGfm","fault","eval","EvalError","range","RangeError","ReferenceError","syntax","SyntaxError","uri","URIError","Constructor","FormattedError","displayName","format","markers","yaml","toml","matters","matter","option","frontmatter","anywhere","valueType","fenceType","sequenceType","fenceConstruct","tokenizeFence","tokenizeFrontmatter","afterOpeningFence","lineEnd","lineData","insideSequence","insideWhitespace","fenceEnd","pick","frontmatterFromMarkdown","frontmatterToMarkdown","remarkFrontmatter","Schema","property","normal","space","merge","definitions","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","properties","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","tabIndex","target","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlVoidElements","isElement","convertElement","tagNameFactory","siblingAfter","siblingBefore","includeWhitespace","isText","whitespaceStart","omission","omit","closing","headOrColgroupOrCaption","body","li","dt","dd","rt","rubyElement","rp","optgroup","menuitem","colgroup","caption","thead","tbody","tfoot","tr","td","cells","th","opening","valid","dash","cap","Type","rest","camelcase","dashes","kebab","trim","padRight","padLeft","subset","charactersToExpression","basic","escapeOnly","surrogate","pair","groups","toHexadecimal","toDecimal","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","or","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","characters","toNamed","formatSmart","named","omitOptionalSemicolons","useNamedReferences","useShortestReferences","decimal","stringifyEntities","constants","unquoted","double","ctx","bogusComments","entities","doctype","upperDoctype","tightDoctype","element","selfClosing","closeEmpty","voids","last","attrs","serializeAttributes","tightClose","props","serializeAttribute","tight","isNaN","tightLists","collapseEmpty","smart","alternative","toHtml","allowParseErrors","allowDangerousCharacters","omitOptionalTags","quoteSmart","preferUnquoted","tightAttributes","tightCommaSeparatedLists","tightSelfClosing","collapseEmptyAttributes","allowDangerousHtml","closeSelfClosing","closeEmptyElements","defaultSchema","strip","clobberPrefix","clobber","ancestors","protocols","tagNames","img","div","del","ins","q","nodeSchema","handleDoctype","handleComment","handleTagName","handleProperties","handleValue","sanitize","allowed","allowDoctypes","handleDoctypeName","allowComments","handleCommentValue","reqs","toPropertyValueMap","handlePropertyValues","handlePropertyValue","safeProtocol","questionMark","numberSign","slash","u","pointStart","pointEnd","generated","cache","ondefinition","getDefinition","clean","h","augment","passThrough","returnNode","unknownHandler","characterReferences","sanitizeUri","normalizeUri","skip","encodeURIComponent","loose","footer","listItems","footnoteOrder","footnoteById","safeId","referenceIndex","backReferences","footnoteCounts","backReference","dataFootnoteBackref","footnoteBackLabel","tailTail","dataFootnotes","footnoteLabel","counter","reuseCounter","dataFootnoteRef","footnote","no","revert","subtype","contents","listLoose","listItemLoose","out","cellIndex","hName","hProperties","hChildren","toHast","foot","remarkHtml","hast","cleanHast","isNothing","subject","isObject","toArray","sourceKeys","cycle","isNegativeZero","NEGATIVE_INFINITY","isNothing_1","isObject_1","toArray_1","repeat_1","isNegativeZero_1","extend_1","common","formatError","where","snippet","YAMLException$1","captureStackTrace","getLine","maxLineLength","maxHalfLength","floor","str","padStart","makeSnippet","linesBefore","linesAfter","re","lineStarts","lineEnds","foundLineNo","i","lineNoLength","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","forEach","alias","Type$1","tag","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","compileList","currentType","newIndex","previousType","previousIndex","compileMap","scalar","mapping","fallback","collectType","Schema$1","implicit","explicit","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","seq","failsafe","resolveYamlNull","constructYamlNull","isNull","_null","canonical","lowercase","uppercase","resolveYamlBoolean","constructYamlBoolean","isBoolean","bool","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","ch","hasDigits","constructYamlInteger","sign","isInteger","binary","obj","octal","hexadecimal","YAML_FLOAT_PATTERN","resolveYamlFloat","constructYamlFloat","NaN","parseFloat","SCIENTIFIC_WITHOUT_DOT","representYamlFloat","res","isFloat","json","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","constructYamlTimestamp","year","month","day","hour","minute","second","tz_hour","tz_minute","date","fraction","Date","UTC","setTime","getTime","representYamlTimestamp","toISOString","timestamp","resolveYamlMerge","BASE64_MAP","resolveYamlBinary","idx","bitlen","constructYamlBinary","tailbits","bits","Uint8Array","representYamlBinary","isBinary","_hasOwnProperty$3","_toString$2","resolveYamlOmap","pairKey","pairHasKey","objectKeys","constructYamlOmap","omap","_toString$1","resolveYamlPairs","constructYamlPairs","_hasOwnProperty$2","resolveYamlSet","constructYamlSet","set","_default","_hasOwnProperty$1","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","checkLineBreaks","TAG","tagMap","err","captureSegment","checkJson","_position","_length","_character","_result","mergeMappings","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","_tag","_anchor","anchor","anchorMap","composeNode","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","tagHandle","isVerbatim","isNamed","readAnchorProperty","readAlias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","blockIndent","indentStatus","atNewLine","hasContent","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loadAll$1","iterator","load$1","loadAll_1","load_1","loader","loadAll","load","_toString","_hasOwnProperty","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","compileStyleMap","encodeHex","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","State","noArrayIndent","skipInvalid","flowLevel","styleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","generateNextLine","level","testImplicitResolving","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","isPlainSafeFirst","isPlainSafeLast","first","needIndentIndicator","leadingSpaceRe","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","testAmbiguity","blockHeader","dropEndingNewline","foldString","escapeString","indentIndicator","keep","chomp","moreIndented","lineRe","nextLF","foldLine","prevMoreIndented","breakRe","curr","escapeSeq","writeFlowSequence","writeNode","writeBlockSequence","writeFlowMapping","objectKey","objectValue","pairBuffer","objectKeyList","writeBlockMapping","explicitPair","detectType","block","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump$1","dump_1","dumper","renamed","useProjectsStore","projectMap","Map","actions","rc","post","md","textNode","endsWith","frontMatter","project","cover","icon","projectTree","projectDir","getters","projects","Familiarity","createTags","tags","ts","familiarity","HIGH","python","sql","js","mdb","MEDIUM","vue","flutter","school","uni","personal","web","app","desktop","jquery","phaser","perl","haskell","docker","nest","angular","isTag","tagId","useTagsStore","projectsStore","entries","flatMap","reduce","acc","pTagId","tagsFromIds","tagIds","get","_hoisted_1","class","_hoisted_2","deletable","emits","setup","__props","emit","tagsStore","tagDetails","colour","_ctx","_cache","$event","__exports__","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","arr","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","getProperty","module","exports","copyIsArray","clone","deep","printf","console","log","vsprintf","fmt","replacements","arg","precision","argIndex","n","escaped","leadingZero","nextArg","slurpNumber","digits","toFixed","isBuffer","encodeCache","getEncodeCache","exclude","keepEscaped","l","nextCode","defaultChars","componentChars","createNode","findIndex","e","each","extract","every","maybeThrow","throws","webpackContext","req","webpackContextResolve","__webpack_require__","o"],"sourceRoot":""}